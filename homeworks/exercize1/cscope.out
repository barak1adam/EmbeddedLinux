cscope 15 $HOME/EmbeddedLinux/homeworks/exercize1               0000612151
	@main.c

1 
	~<°dio.h
>

3 
	$maö
()

5 
	`¥ötf
("Embedded Linux Exercise 1\n\r");

6 
	`¥ötf
("=========================\n\r");

7 
	`func1
();

8 
	`func2
();

9 
	`func3
("/home/mrv/mrv");

10 
	`func4
();

12 
	`func6
();

15 
	}
}

	@net-tools-1.60/arp.c

55 
	~<sys/ty≥s.h
>

56 
	~<sys/sockë.h
>

57 
	~<sys/io˘l.h
>

58 
	~<√t/if.h
>

61 
	~<√t/if_¨p.h
>

62 
	~<°dlib.h
>

63 
	~<°dio.h
>

64 
	~<î∫o.h
>

65 
	~<˘y≥.h
>

66 
	~<f˙é.h
>

67 
	~<°rög.h
>

68 
	~<gë›t.h
>

69 
	~<uni°d.h
>

70 
	~"√t-suµ‹t.h
"

71 
	~"∑th«mes.h
"

72 
	~"vîsi⁄.h
"

73 
	~"c⁄fig.h
"

74 
	~"öé.h
"

75 
	~"utû.h
"

77 
	#DFLT_AF
 "öë"

	)

78 
	#DFLT_HW
 "ëhî"

	)

80 
	#FEATURE_ARP


	)

81 
	~"lib/√t-„©uªs.h
"

84 
	#REVERSE_MAC


	)

86 *
	gRñó£
 = 
RELEASE
, *
	gVîsi⁄
 = "arp 1.88 (2001-04-04)";

88 
	g›t_n
 = 0;

89 
	g›t_N
 = 0;

90 
	g›t_v
 = 0;

91 
	g›t_D
 = 0;

92 
	g›t_e
 = 0;

93 
	g›t_a
 = 0;

94 
a·y≥
 *
	g≠
;

95 
hwty≥
 *
	ghw
;

96 
	gsockfd
 = 0;

97 
	ghw_£t
 = 0;

98 
	gdevi˚
[16] = "";

99 
ußge
();

102 
	$¨p_dñ
(**
¨gs
)

104 
ho°
[128];

105 
¨¥eq
 
ªq
;

106 
sockaddr
 
ß
;

107 
Êags
 = 0;

108 
îr
;

110 
	`mem£t
((*Ë&
ªq
, 0, (req));

113 i‡(*
¨gs
 =
NULL
) {

114 
	`Ârötf
(
°dîr
, 
	`_
("arp:Çeed hostÇame\n"));

117 
	`ß„_°∫˝y
(
ho°
, *
¨gs
, ( host));

118 i‡(
≠
->
	`öput
(0, 
ho°
, &
ß
) < 0) {

119 
≠
->
	`hîr‹
(
ho°
);

123 
	`mem˝y
((*Ë&
ªq
.
¨p_∑
, (*Ë&
ß
, (
sockaddr
));

125 i‡(
hw_£t
)

126 
ªq
.
¨p_ha
.
ß_Ámûy
 = 
hw
->
ty≥
;

128 
ªq
.
¨p_Êags
 = 
ATF_PERM
;

129 
¨gs
++;

130 *
¨gs
 !
NULL
) {

131 i‡(
›t_v
)

132 
	`Ârötf
(
°dîr
, "¨gs=%s\n", *
¨gs
);

133 i‡(!
	`°rcmp
(*
¨gs
, "pub")) {

134 
Êags
 |= 1;

135 
¨gs
++;

138 i‡(!
	`°rcmp
(*
¨gs
, "priv")) {

139 
Êags
 |= 2;

140 
¨gs
++;

143 i‡(!
	`°rcmp
(*
¨gs
, "temp")) {

144 
ªq
.
¨p_Êags
 &~
ATF_PERM
;

145 
¨gs
++;

148 i‡(!
	`°rcmp
(*
¨gs
, "trail")) {

149 
ªq
.
¨p_Êags
 |
ATF_USETRAILERS
;

150 
¨gs
++;

153 i‡(!
	`°rcmp
(*
¨gs
, "dontpub")) {

154 #ifde‡
HAVE_ATF_DONTPUB


155 
ªq
.
¨p_Êags
 |
ATF_DONTPUB
;

157 
	`ENOSUPP
("arp", "ATF_DONTPUB");

159 
¨gs
++;

162 i‡(!
	`°rcmp
(*
¨gs
, "auto")) {

163 #ifde‡
HAVE_ATF_MAGIC


164 
ªq
.
¨p_Êags
 |
ATF_MAGIC
;

166 
	`ENOSUPP
("arp", "ATF_MAGIC");

168 
¨gs
++;

171 i‡(!
	`°rcmp
(*
¨gs
, "dev")) {

172 i‡(*++
¨gs
 =
NULL
)

173 
	`ußge
();

174 
	`ß„_°∫˝y
(
devi˚
, *
¨gs
, (device));

175 
¨gs
++;

178 i‡(!
	`°rcmp
(*
¨gs
, "netmask")) {

179 i‡(*++
¨gs
 =
NULL
)

180 
	`ußge
();

181 i‡(
	`°rcmp
(*
¨gs
, "255.255.255.255") != 0) {

182 
	`°r˝y
(
ho°
, *
¨gs
);

183 i‡(
≠
->
	`öput
(0, 
ho°
, &
ß
) < 0) {

184 
≠
->
	`hîr‹
(
ho°
);

187 
	`mem˝y
((*Ë&
ªq
.
¨p_√tmask
, (*Ë&
ß
,

188 (
sockaddr
));

189 
ªq
.
¨p_Êags
 |
ATF_NETMASK
;

191 
¨gs
++;

194 
	`ußge
();

196 i‡(
Êags
 == 0)

197 
Êags
 = 3;

199 
	`°r˝y
(
ªq
.
¨p_dev
, 
devi˚
);

201 
îr
 = -1;

204 i‡(
Êags
 & 2) {

205 i‡(
›t_v
)

206 
	`Ârötf
(
°dîr
, "arp: SIOCDARP(nopub)\n");

207 i‡((
îr
 = 
	`io˘l
(
sockfd
, 
SIOCDARP
, &
ªq
) < 0)) {

208 i‡(
î∫o
 =
ENXIO
) {

209 i‡(
Êags
 & 1)

210 
n›ub
;

211 
	`¥ötf
(
	`_
("NÿARPÉ¡ry f‹ %s\n"), 
ho°
);

214 
	`≥º‹
("SIOCDARP(priv)");

218 i‡((
Êags
 & 1Ë&& (
îr
)) {

219 
n›ub
:

220 
ªq
.
¨p_Êags
 |
ATF_PUBL
;

221 i‡(
›t_v
)

222 
	`Ârötf
(
°dîr
, "arp: SIOCDARP(pub)\n");

223 i‡(
	`io˘l
(
sockfd
, 
SIOCDARP
, &
ªq
) < 0) {

224 i‡(
î∫o
 =
ENXIO
) {

225 
	`¥ötf
(
	`_
("NÿARPÉ¡ry f‹ %s\n"), 
ho°
);

228 
	`≥º‹
("SIOCDARP(pub)");

233 
	}
}

236 
	$¨p_gëdevhw
(*
i‚ame
, 
sockaddr
 *
ß
, 
hwty≥
 *
hw
)

238 
i‰eq
 
i‰
;

239 
hwty≥
 *
xhw
;

240 #ifde‡
REVERSE_MAC


241 
i
, 
n
;

244 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

245 i‡(
	`io˘l
(
sockfd
, 
SIOCGIFHWADDR
, &
i‰
) < 0) {

246 
	`Ârötf
(
°dîr
, 
	`_
("¨p: c™àgë HW-Addªs†f‹ `%s': %s.\n"), 
i‚ame
, 
	`°ªº‹
(
î∫o
));

249 i‡(
hw
 && (
i‰
.
i‰_hwaddr
.
ß_Ámûy
 !hw->
ty≥
)) {

250 
	`Ârötf
(
°dîr
, 
	`_
("arp:ÖrotocolÅype mismatch.\n"));

253 #ifde‡
REVERSE_MAC


255 
n
 = 8;

256 
¨øy
[8] = {0};

257 
	`¥ötf
("\n");

258 
i
=0; i<6; i++)

260 
¨øy
[
i
]=()
i‰
.
i‰_hwaddr
.
ß_d©a
[i];

261 
ß
[
i
] = 
i‰
.
i‰_hwaddr
.
ß_d©a
[6-i-1];

262 
	`¥ötf
("¨øy[%d] = %2x \n\r", 
i
, ()()
¨øy
[i]);

266 
	`mem˝y
((*Ë
ß
, (*Ë&(
i‰
.
i‰_hwaddr
), (
sockaddr
));

271 i‡(
›t_v
) {

272 i‡(!(
xhw
 = 
	`gë_hw¡y≥
(
i‰
.
i‰_hwaddr
.
ß_Ámûy
)Ë|| (xhw->
¥öt
 == 0)) {

273 
xhw
 = 
	`gë_hw¡y≥
(-1);

275 
	`Ârötf
(
°dîr
, 
	`_
("¨p: devi˚ `%s' ha†HWáddªs†%†`%s'.\n"), 
i‚ame
, 
xhw
->
«me
, xhw->
	`¥öt
((*)&
i‰
.
i‰_hwaddr
.
ß_d©a
));

278 
	}
}

281 
	$¨p_£t
(**
¨gs
)

283 
ho°
[128];

284 
¨¥eq
 
ªq
;

285 
sockaddr
 
ß
;

286 
Êags
;

288 
	`mem£t
((*Ë&
ªq
, 0, (req));

291 i‡(*
¨gs
 =
NULL
) {

292 
	`Ârötf
(
°dîr
, 
	`_
("arp:Çeed hostÇame\n"));

295 
	`ß„_°∫˝y
(
ho°
, *
¨gs
++, ( host));

296 i‡(
≠
->
	`öput
(0, 
ho°
, &
ß
) < 0) {

297 
≠
->
	`hîr‹
(
ho°
);

301 
	`mem˝y
((*Ë&
ªq
.
¨p_∑
, (*Ë&
ß
, (
sockaddr
));

304 i‡(*
¨gs
 =
NULL
) {

305 
	`Ârötf
(
°dîr
, 
	`_
("arp:Çeed hardwareáddress\n"));

308 i‡(
›t_D
) {

309 i‡(
	`¨p_gëdevhw
(*
¨gs
++, &
ªq
.
¨p_ha
, 
hw_£t
 ? 
hw
 : 
NULL
) < 0)

312 i‡(
hw
->
	`öput
(*
¨gs
++, &
ªq
.
¨p_ha
) < 0) {

313 
	`Ârötf
(
°dîr
, 
	`_
("arp: invalid hardwareáddress\n"));

319 
Êags
 = 
ATF_PERM
 | 
ATF_COM
;

320 *
¨gs
 !
NULL
) {

321 i‡(!
	`°rcmp
(*
¨gs
, "temp")) {

322 
Êags
 &~
ATF_PERM
;

323 
¨gs
++;

326 i‡(!
	`°rcmp
(*
¨gs
, "pub")) {

327 
Êags
 |
ATF_PUBL
;

328 
¨gs
++;

331 i‡(!
	`°rcmp
(*
¨gs
, "priv")) {

332 
Êags
 &~
ATF_PUBL
;

333 
¨gs
++;

336 i‡(!
	`°rcmp
(*
¨gs
, "trail")) {

337 
Êags
 |
ATF_USETRAILERS
;

338 
¨gs
++;

341 i‡(!
	`°rcmp
(*
¨gs
, "dontpub")) {

342 #ifde‡
HAVE_ATF_DONTPUB


343 
Êags
 |
ATF_DONTPUB
;

345 
	`ENOSUPP
("arp", "ATF_DONTPUB");

347 
¨gs
++;

350 i‡(!
	`°rcmp
(*
¨gs
, "auto")) {

351 #ifde‡
HAVE_ATF_MAGIC


352 
Êags
 |
ATF_MAGIC
;

354 
	`ENOSUPP
("arp", "ATF_MAGIC");

356 
¨gs
++;

359 i‡(!
	`°rcmp
(*
¨gs
, "dev")) {

360 i‡(*++
¨gs
 =
NULL
)

361 
	`ußge
();

362 
	`ß„_°∫˝y
(
devi˚
, *
¨gs
, (device));

363 
¨gs
++;

366 i‡(!
	`°rcmp
(*
¨gs
, "netmask")) {

367 i‡(*++
¨gs
 =
NULL
)

368 
	`ußge
();

369 i‡(
	`°rcmp
(*
¨gs
, "255.255.255.255") != 0) {

370 
	`°r˝y
(
ho°
, *
¨gs
);

371 i‡(
≠
->
	`öput
(0, 
ho°
, &
ß
) < 0) {

372 
≠
->
	`hîr‹
(
ho°
);

375 
	`mem˝y
((*Ë&
ªq
.
¨p_√tmask
, (*Ë&
ß
,

376 (
sockaddr
));

377 
Êags
 |
ATF_NETMASK
;

379 
¨gs
++;

382 
	`ußge
();

386 
ªq
.
¨p_Êags
 = 
Êags
;

388 
	`°r˝y
(
ªq
.
¨p_dev
, 
devi˚
);

391 i‡(
›t_v
)

392 
	`Ârötf
(
°dîr
, "arp: SIOCSARP()\n");

393 i‡(
	`io˘l
(
sockfd
, 
SIOCSARP
, &
ªq
) < 0) {

394 
	`≥º‹
("SIOCSARP");

398 
	}
}

402 
	$¨p_fûe
(*
«me
)

404 
buff
[1024];

405 *
•
, *
¨gs
[32];

406 
löír
, 
¨gc
;

407 
FILE
 *
Â
;

409 i‡((
Â
 = 
	`f›í
(
«me
, "r")Ë=
NULL
) {

410 
	`Ârötf
(
°dîr
, 
	`_
("¨p: c™nŸ o≥¿ëhîfûê%†!\n"), 
«me
);

414 
löír
 = 0;

415 
	`fgës
(
buff
, (buff), 
Â
Ë!(*Ë
NULL
) {

416 
löír
++;

417 i‡(
›t_v
 == 1)

418 
	`Ârötf
(
°dîr
, ">> %s", 
buff
);

419 i‡((
•
 = 
	`°rchr
(
buff
, '\n')Ë!(*Ë
NULL
)

420 *
•
 = '\0';

421 i‡(
buff
[0] == '#' || buff[0] == '\0')

424 
¨gc
 = 
	`gë¨gs
(
buff
, 
¨gs
);

425 i‡(
¨gc
 < 2) {

426 
	`Ârötf
(
°dîr
, 
	`_
("arp: formatÉrror onÜine %u ofÉtherfile %s !\n"),

427 
löír
, 
«me
);

430 i‡(
	`°rchr
 (
¨gs
[0], ':'Ë!
NULL
) {

433 *
˝
;

434 
˝
 = 
¨gs
[1];

435 
¨gs
[1] =árgs[0];

436 
¨gs
[0] = 
˝
;

438 i‡(
	`¨p_£t
(
¨gs
) != 0)

439 
	`Ârötf
(
°dîr
, 
	`_
("arp: cannot setÉntry onÜine %u ofÉtherfile %s !\n"),

440 
löír
, 
«me
);

443 (Ë
	`f˛o£
(
Â
);

445 
	}
}

449 
	$¨p_di•_2
(*
«me
, 
ty≥
, 
¨p_Êags
, *
hwa
, *
mask
, *
dev
)

451 
tôÀ
 = 0;

452 
hwty≥
 *
xhw
;

453 
Êags
[10];

455 
xhw
 = 
	`gë_hw¡y≥
(
ty≥
);

456 i‡(
xhw
 =
NULL
)

457 
xhw
 = 
	`gë_hwty≥
(
DFLT_HW
);

459 i‡(
tôÀ
++ == 0) {

460 
	`¥ötf
(
	`_
("Address HWtype HWaddress Flags Mask Iface\n"));

463 
Êags
[0] = '\0';

464 i‡(
¨p_Êags
 & 
ATF_COM
)

465 
	`°rˇt
(
Êags
, "C");

466 i‡(
¨p_Êags
 & 
ATF_PERM
)

467 
	`°rˇt
(
Êags
, "M");

468 i‡(
¨p_Êags
 & 
ATF_PUBL
)

469 
	`°rˇt
(
Êags
, "P");

470 #ifde‡
HAVE_ATF_MAGIC


471 i‡(
¨p_Êags
 & 
ATF_MAGIC
)

472 
	`°rˇt
(
Êags
, "A");

474 #ifde‡
HAVE_ATF_DONTPUB


475 i‡(
¨p_Êags
 & 
ATF_DONTPUB
)

476 
	`°rˇt
(
Êags
, "!");

478 i‡(
¨p_Êags
 & 
ATF_USETRAILERS
)

479 
	`°rˇt
(
Êags
, "T");

481 i‡(!(
¨p_Êags
 & 
ATF_NETMASK
))

482 
mask
 = "";

484 
	`¥ötf
("%-23.23† ", 
«me
);

486 i‡(!(
¨p_Êags
 & 
ATF_COM
)) {

487 i‡(
¨p_Êags
 & 
ATF_PUBL
)

488 
	`¥ötf
("%-8.8s%-20.20s", "*", "*");

490 
	`¥ötf
("%-8.8s%-20.20s", "", 
	`_
("(incomplete)"));

492 
	`¥ötf
("%-8.8s%-20.20s", 
xhw
->
«me
, 
hwa
);

495 
	`¥ötf
("%-6.6s%-15.15†%s\n", 
Êags
, 
mask
, 
dev
);

496 
	}
}

499 
	$¨p_di•
(*
«me
, *
ù
, 
ty≥
, 
¨p_Êags
, *
hwa
, *
mask
, *
dev
)

501 
hwty≥
 *
xhw
;

503 
xhw
 = 
	`gë_hw¡y≥
(
ty≥
);

504 i‡(
xhw
 =
NULL
)

505 
xhw
 = 
	`gë_hwty≥
(
DFLT_HW
);

507 
	`¥ötf
(
	`_
("%†(%sË© "), 
«me
, 
ù
);

509 i‡(!(
¨p_Êags
 & 
ATF_COM
)) {

510 i‡(
¨p_Êags
 & 
ATF_PUBL
)

511 
	`¥ötf
("* ");

513 
	`¥ötf
(
	`_
("<incomplete> "));

515 
	`¥ötf
("%†[%s] ", 
hwa
, 
xhw
->
«me
);

518 i‡(
¨p_Êags
 & 
ATF_NETMASK
)

519 
	`¥ötf
(
	`_
("√tmask %†"), 
mask
);

521 i‡(
¨p_Êags
 & 
ATF_PERM
)

522 
	`¥ötf
("PERM ");

523 i‡(
¨p_Êags
 & 
ATF_PUBL
)

524 
	`¥ötf
("PUP ");

525 #ifde‡
HAVE_ATF_MAGIC


526 i‡(
¨p_Êags
 & 
ATF_MAGIC
)

527 
	`¥ötf
("AUTO ");

529 #ifde‡
HAVE_ATF_DONTPUB


530 i‡(
¨p_Êags
 & 
ATF_DONTPUB
)

531 
	`¥ötf
("DONTPUB ");

533 i‡(
¨p_Êags
 & 
ATF_USETRAILERS
)

534 
	`¥ötf
("TRAIL ");

536 
	`¥ötf
(
	`_
("⁄ %s\n"), 
dev
);

537 
	}
}

541 
	$¨p_show
(*
«me
)

543 
ho°
[100];

544 
sockaddr
 
ß
;

545 
ù
[100];

546 
hwa
[100];

547 
mask
[100];

548 
löe
[200];

549 
dev
[100];

550 
ty≥
, 
Êags
;

551 
FILE
 *
Â
;

552 *
ho°«me
;

553 
num
, 
íåõs
 = 0, 
showed
 = 0;

555 
ho°
[0] = '\0';

557 i‡(
«me
 !
NULL
) {

559 
	`ß„_°∫˝y
(
ho°
, 
«me
, ( host));

560 i‡(
≠
->
	`öput
(0, 
ho°
, &
ß
) < 0) {

561 
≠
->
	`hîr‹
(
ho°
);

564 
	`ß„_°∫˝y
(
ho°
, 
≠
->
	`•röt
(&
ß
, 1), (host));

567 i‡((
Â
 = 
	`f›í
(
_PATH_PROCNET_ARP
, "r")Ë=
NULL
) {

568 
	`≥º‹
(
_PATH_PROCNET_ARP
);

572 i‡(
	`fgës
(
löe
, ÷öe), 
Â
Ë!(*Ë
NULL
) {

573 
	`°r˝y
(
mask
, "-");

574 
	`°r˝y
(
dev
, "-");

576 ; 
	`fgës
(
löe
, ÷öe), 
Â
);) {

577 
num
 = 
	`ssˇnf
(
löe
, "%s 0x%x 0x%x %100s %100s %100s\n",

578 
ù
, &
ty≥
, &
Êags
, 
hwa
, 
mask
, 
dev
);

579 i‡(
num
 < 4)

582 
íåõs
++;

584 i‡(
hw_£t
 && (
ty≥
 !
hw
->type))

588 i‡(
ho°
[0] && 
	`°rcmp
(
ù
, host))

592 i‡(
devi˚
[0] && 
	`°rcmp
(
dev
, device))

595 
showed
++;

597 i‡(
›t_n
)

598 
ho°«me
 = "?";

600 i‡(
≠
->
	`öput
(0, 
ù
, &
ß
) < 0)

601 
ho°«me
 = 
ù
;

603 
ho°«me
 = 
≠
->
	`•röt
(&
ß
, 
›t_n
 | 0x8000);

604 i‡(
	`°rcmp
(
ho°«me
, 
ù
) == 0)

605 
ho°«me
 = "?";

608 i‡(
›t_e
)

609 
	`¨p_di•_2
(
ho°«me
[0] ='?' ? 
ù
 : ho°«me, 
ty≥
, 
Êags
, 
hwa
, 
mask
, 
dev
);

611 
	`¨p_di•
(
ho°«me
, 
ù
, 
ty≥
, 
Êags
, 
hwa
, 
mask
, 
dev
);

614 i‡(
›t_v
)

615 
	`¥ötf
(
	`_
("E¡rõs: %d\tSkù≥d: %d\tFound: %d\n"), 
íåõs
,É¡rõ†- 
showed
, showed);

617 i‡(!
showed
) {

618 i‡(
ho°
[0] && !
›t_a
)

619 
	`¥ötf
(
	`_
("%†(%sË--Çÿíåy\n"), 
«me
, 
ho°
);

620 i‡(
hw_£t
 || 
ho°
[0] || 
devi˚
[0]) {

621 
	`¥ötf
(
	`_
("¨p: i¿%dÉ¡rõ†nÿm©ch found.\n"), 
íåõs
);

624 (Ë
	`f˛o£
(
Â
);

626 
	}
}

628 
	$vîsi⁄
()

630 
	`Ârötf
(
°dîr
, "%s\n%s\n%s\n", 
Rñó£
, 
Vîsi⁄
, 
Fótuªs
);

631 
	`exô
(
E_VERSION
);

632 
	}
}

634 
	$ußge
()

636 
	`Ârötf
(
°dîr
, 
	`_
("Usage:\nárp [-vn] [<HW>] [-i <if>] [-a] [<hostname>] <-Display ARP cache\n"));

637 
	`Ârötf
(
°dîr
, 
	`_
("árp [-v] [-i <if>] -d <hostname> [pub][nopub] <-Delete ARPÉntry\n"));

638 
	`Ârötf
(
°dîr
, 
	`_
("árp [-vnD] [<HW>] [-i <if>] -f [<filename>] <-AddÉntry from file\n"));

639 
	`Ârötf
(
°dîr
, 
	`_
("árp [-v] [<HW>] [-i <if>] -s <hostname> <hwaddr> [temp][nopub] <-AddÉntry\n"));

640 
	`Ârötf
(
°dîr
, 
	`_
("árp [-v] [<HW>] [-i <if>] -s <hostname> <hwaddr> [netmask <nm>]Öub <-''-\n"));

641 
	`Ârötf
(
°dîr
, 
	`_
("árp [-v] [<HW>] [-i <if>] -Ds <hostname> <if> [netmask <nm>]Öub <-''-\n\n"));

643 
	`Ârötf
(
°dîr
, 
	`_
(" -a display (all) hosts inálternative (BSD) style\n"));

644 
	`Ârötf
(
°dîr
, 
	`_
(" -s, --set setáÇew ARPÉntry\n"));

645 
	`Ârötf
(
°dîr
, 
	`_
(" -d, --delete deleteá specifiedÉntry\n"));

646 
	`Ârötf
(
°dîr
, 
	`_
(" -v, --verbose be verbose\n"));

647 
	`Ârötf
(
°dîr
, 
	`_
(" -n, --numeric don'tÑesolveÇames\n"));

648 
	`Ârötf
(
°dîr
, 
	`_
(" -i, --device specifyÇetwork interface (e.g.Éth0)\n"));

649 
	`Ârötf
(
°dîr
, 
	`_
(" -D, --use-deviceÑead <hwaddr> from given device\n"));

650 
	`Ârötf
(
°dîr
, 
	`_
(" -A, -p, --protocol specifyÖrotocol family\n"));

651 
	`Ârötf
(
°dîr
, 
	`_
(" -f, --fileÑeadÇewÉntries from file or from /etc/ethers\n\n"));

653 
	`Ârötf
(
°dîr
, 
	`_
(" <HW>=U£ '-H <hw>'Åÿ•ecify h¨dw¨êaddªs†ty≥. DeÁu…: %s\n"), 
DFLT_HW
);

654 
	`Ârötf
(
°dîr
, 
	`_
(" List ofÖossible hardwareÅypes (which support ARP):\n"));

655 
	`¥öt_hwli°
(1);

656 
	`exô
(
E_USAGE
);

657 
	}
}

659 
	$maö
(
¨gc
, **
¨gv
)

661 
i
, 
l›
, 
wh©
;

662 
›ti⁄
 
l⁄g›ts
[] =

677 {
NULL
, 0, 0, 0}

680 #i‡
I18N


681 
	`£éoˇÀ
 (
LC_ALL
, "");

682 
	`bödãxtdomaö
("net-tools", "/usr/share/locale");

683 
	`ãxtdomaö
("net-tools");

687 i‡((
hw
 = 
	`gë_hwty≥
(
DFLT_HW
)Ë=
NULL
) {

688 
	`Ârötf
(
°dîr
, 
	`_
("%s: h¨dw¨êty≥ÇŸ suµ‹ãd!\n"), 
DFLT_HW
);

691 i‡((
≠
 = 
	`gë_a·y≥
(
DFLT_AF
)Ë=
NULL
) {

692 
	`Ârötf
(
°dîr
, 
	`_
("%s:áddªs†ÁmûyÇŸ suµ‹ãd!\n"), 
DFLT_AF
);

695 
wh©
 = 0;

699 (
i
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "A:H:adÂ:n£i:t:vh?DNV", 
l⁄g›ts
, &
l›
)Ë!
EOF
)

700 
i
) {

702 
wh©
 = 1;

703 
›t_a
 = 1;

706 
wh©
 = 2;

709 
wh©
 = 3;

712 
wh©
 = 4;

717 
›t_e
 = 1;

720 
›t_n
 = 
FLAG_NUM
;

723 
›t_D
 = 1;

726 
›t_N
 = 
FLAG_SYM
;

727 
	`Ârötf
(
°dîr
, 
	`_
("arp: -NÇot yet supported.\n"));

730 
›t_v
 = 1;

735 
≠
 = 
	`gë_a·y≥
(
›èrg
);

736 i‡(
≠
 =
NULL
) {

737 
	`Ârötf
(
°dîr
, 
	`_
("arp: %s: unknownáddress family.\n"),

738 
›èrg
);

739 
	`exô
(-1);

744 
hw
 = 
	`gë_hwty≥
(
›èrg
);

745 i‡(
hw
 =
NULL
) {

746 
	`Ârötf
(
°dîr
, 
	`_
("arp: %s: unknown hardwareÅype.\n"),

747 
›èrg
);

748 
	`exô
(-1);

750 
hw_£t
 = 1;

753 
	`ß„_°∫˝y
(
devi˚
, 
›èrg
, (device));

757 
	`vîsi⁄
();

761 
	`ußge
();

764 i‡(
≠
->
af
 !
AF_INET
) {

765 
	`Ârötf
(
°dîr
, 
	`_
("arp: %s: kernel only supports 'inet'.\n"),

766 
≠
->
«me
);

767 
	`exô
(-1);

771 if(
hw_£t
==0)

772 i‡((
hw
 = 
	`gë_hwty≥
(
DFLT_HW
)Ë=
NULL
) {

773 
	`Ârötf
(
°dîr
, 
	`_
("%s: h¨dw¨êty≥ÇŸ suµ‹ãd!\n"), 
DFLT_HW
);

777 i‡(
hw
->
Æí
 <= 0) {

778 
	`Ârötf
(
°dîr
, 
	`_
("arp: %s: hardwareÅype without ARP support.\n"),

779 
hw
->
«me
);

780 
	`exô
(-1);

782 i‡((
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0)) < 0) {

783 
	`≥º‹
("socket");

784 
	`exô
(-1);

787 
wh©
) {

789 
›t_e
 = 1;

790 
wh©
 = 
	`¨p_show
(
¨gv
[
›töd
]);

794 
wh©
 = 
	`¨p_show
(
¨gv
[
›töd
]);

798 
wh©
 = 
	`¨p_fûe
(
¨gv
[
›töd
] ?árgv[optind] : "/etc/ethers");

802 
wh©
 = 
	`¨p_dñ
(&
¨gv
[
›töd
]);

806 
wh©
 = 
	`¨p_£t
(&
¨gv
[
›töd
]);

810 
	`ußge
();

813 
	`exô
(
wh©
);

814 
	}
}

	@net-tools-1.60/config.h

22 
	#I18N
 0

	)

29 
	#HAVE_AFUNIX
 1

	)

30 
	#HAVE_AFINET
 1

	)

31 
	#HAVE_AFINET6
 0

	)

32 
	#HAVE_AFIPX
 0

	)

33 
	#HAVE_AFATALK
 0

	)

34 
	#HAVE_AFAX25
 0

	)

35 
	#HAVE_AFNETROM
 0

	)

36 
	#HAVE_AFROSE
 0

	)

37 
	#HAVE_AFX25
 0

	)

38 
	#HAVE_AFECONET
 0

	)

39 
	#HAVE_AFDEC√t
 0

	)

40 
	#HAVE_AFASH
 0

	)

47 
	#HAVE_HWETHER
 1

	)

48 
	#HAVE_HWARC
 1

	)

49 
	#HAVE_HWSLIP
 0

	)

50 
	#HAVE_HWPPP
 1

	)

51 
	#HAVE_HWTUNNEL
 0

	)

52 
	#HAVE_HWSTRIP
 0

	)

53 
	#HAVE_HWTR
 0

	)

54 
	#HAVE_HWAX25
 0

	)

55 
	#HAVE_HWROSE
 0

	)

56 
	#HAVE_HWNETROM
 0

	)

57 
	#HAVE_HWX25
 0

	)

58 
	#HAVE_HWFR
 0

	)

59 
	#HAVE_HWSIT
 0

	)

60 
	#HAVE_HWFDDI
 0

	)

61 
	#HAVE_HWHIPPI
 0

	)

62 
	#HAVE_HWASH
 0

	)

63 
	#HAVE_HWHDLCLAPB
 0

	)

64 
	#HAVE_HWIRDA
 0

	)

65 
	#HAVE_HWEC
 0

	)

72 
	#HAVE_FW_MASQUERADE
 0

	)

73 
	#HAVE_IP_TOOLS
 0

	)

74 
	#HAVE_MII
 0

	)

	@net-tools-1.60/debian/config.h

22 
	#I18N
 1

	)

29 
	#HAVE_AFUNIX
 1

	)

30 
	#HAVE_AFINET
 1

	)

31 
	#HAVE_AFINET6
 1

	)

32 
	#HAVE_AFIPX
 1

	)

33 
	#HAVE_AFATALK
 1

	)

34 
	#HAVE_AFAX25
 1

	)

35 
	#HAVE_AFNETROM
 1

	)

36 
	#HAVE_AFROSE
 1

	)

37 
	#HAVE_AFX25
 1

	)

38 
	#HAVE_AFECONET
 1

	)

39 
	#HAVE_AFDEC√t
 1

	)

40 
	#HAVE_AFASH
 1

	)

47 
	#HAVE_HWETHER
 1

	)

48 
	#HAVE_HWARC
 1

	)

49 
	#HAVE_HWSLIP
 1

	)

50 
	#HAVE_HWPPP
 1

	)

51 
	#HAVE_HWTUNNEL
 1

	)

52 
	#HAVE_HWSTRIP
 0

	)

53 
	#HAVE_HWTR
 0

	)

54 
	#HAVE_HWAX25
 1

	)

55 
	#HAVE_HWROSE
 1

	)

56 
	#HAVE_HWNETROM
 1

	)

57 
	#HAVE_HWX25
 1

	)

58 
	#HAVE_HWFR
 1

	)

59 
	#HAVE_HWSIT
 1

	)

60 
	#HAVE_HWFDDI
 1

	)

61 
	#HAVE_HWHIPPI
 1

	)

62 
	#HAVE_HWASH
 1

	)

63 
	#HAVE_HWHDLCLAPB
 1

	)

64 
	#HAVE_HWIRDA
 1

	)

65 
	#HAVE_HWEC
 1

	)

66 
	#HAVE_HWEUI64
 1

	)

73 
	#HAVE_FW_MASQUERADE
 1

	)

74 
	#HAVE_IP_TOOLS
 1

	)

75 
	#HAVE_MII
 1

	)

	@net-tools-1.60/hostname.c

33 
	~<°dio.h
>

34 
	~<uni°d.h
>

35 
	~<gë›t.h
>

36 
	~<°rög.h
>

37 
	~<√tdb.h
>

38 
	~<î∫o.h
>

39 
	~<sys/∑øm.h
>

40 
	~<√töë/ö.h
>

41 
	~<¨∑/öë.h
>

42 
	~"c⁄fig.h
"

43 
	~"vîsi⁄.h
"

44 
	~"../öé.h
"

46 #i‡
HAVE_AFDEC√t


47 
	~<√td√t/dn.h
>

50 *
	gRñó£
 = 
RELEASE
, *
	gVîsi⁄
 = "hostname 1.100 (2001-04-14)";

52 *
	g¥ogøm_«me
;

53 
	g›t_v
;

55 
£th«me
(*);

56 
£td«me
(*);

57 
showh«me
(*, );

58 
ußge
();

59 
vîsi⁄
();

60 
£tfûíame
(*, );

62 
	#SETHOST
 1

	)

63 
	#SETDOMAIN
 2

	)

64 
	#SETNODE
 3

	)

66 #i‡
HAVE_AFDEC√t


67 
	$£ä«me
(*
¬ame
)

69 i‡(
›t_v
)

70 
	`Ârötf
(
°dîr
, 
	`_
("SettingÇodenameÅo `%s'\n"),

71 
¬ame
);

72 i‡(
	`£äodíame
(
¬ame
, 
	`°æí
(nname))) {

73 
î∫o
) {

74 
EPERM
:

75 
	`Ârötf
(
°dîr
, 
	`_
("%s: you mu° bêroŸÅÿch™gêthênodê«me\n"), 
¥ogøm_«me
);

77 
EINVAL
:

78 
	`Ârötf
(
°dîr
, 
	`_
("%s:Çamêtoÿl⁄g\n"), 
¥ogøm_«me
);

82 
	`exô
(1);

84 
	}
}

87 
	$£th«me
(*
h«me
)

89 i‡(
›t_v
)

90 
	`Ârötf
(
°dîr
, 
	`_
("Setting hostnameÅo `%s'\n"),

91 
h«me
);

92 i‡(
	`£tho°«me
(
h«me
, 
	`°æí
(hname))) {

93 
î∫o
) {

94 
EPERM
:

95 
	`Ârötf
(
°dîr
, 
	`_
("%s: you mu° bêroŸÅÿch™gêthêho°Çame\n"), 
¥ogøm_«me
);

97 
EINVAL
:

98 
	`Ârötf
(
°dîr
, 
	`_
("%s:Çamêtoÿl⁄g\n"), 
¥ogøm_«me
);

102 
	`exô
(1);

104 
	}
}

106 
	$£td«me
(*
d«me
)

108 i‡(
›t_v
)

109 
	`Ârötf
(
°dîr
, 
	`_
("Setting domainnameÅo `%s'\n"),

110 
d«me
);

111 i‡(
	`£tdomaö«me
(
d«me
, 
	`°æí
(dname))) {

112 
î∫o
) {

113 
EPERM
:

114 
	`Ârötf
(
°dîr
, 
	`_
("%s: you mu° bêroŸÅÿch™gêthêdomaöÇame\n"), 
¥ogøm_«me
);

116 
EINVAL
:

117 
	`Ârötf
(
°dîr
, 
	`_
("%s:Çamêtoÿl⁄g\n"), 
¥ogøm_«me
);

121 
	`exô
(1);

123 
	}
}

125 
	$showh«me
(*
h«me
, 
c
)

127 
ho°ít
 *
hp
;

128 *
p
, **
Æüs
;

129 
ö_addr
 **
ù
;

131 i‡(
›t_v
)

132 
	`Ârötf
(
°dîr
, 
	`_
("Resﬁvög `%s' ...\n"), 
h«me
);

133 i‡(!(
hp
 = 
	`gëho°by«me
(
h«me
))) {

134 
	`hîr‹
(
¥ogøm_«me
);

135 
	`exô
(1);

137 i‡(
›t_v
) {

138 
	`Ârötf
(
°dîr
, 
	`_
("Result: h_name=`%s'\n"),

139 
hp
->
h_«me
);

141 
Æüs
 = 
hp
->
h_Æü£s
;

142 
Æüs
[0])

143 
	`Ârötf
(
°dîr
, 
	`_
("Result: h_aliases=`%s'\n"),

144 *
Æüs
++);

146 
ù
 = (
ö_addr
 **Ë
hp
->
h_addr_li°
;

147 
ù
[0])

148 
	`Ârötf
(
°dîr
, 
	`_
("Result: h_addr_list=`%s'\n"),

149 
	`öë_¡ﬂ
(**
ù
++));

151 i‡(!(
p
 = 
	`°rchr
(
hp
->
h_«me
, '.')Ë&& (
c
 == 'd'))

154 
c
) {

156 
hp
->
h_Æü£s
[0])

157 
	`¥ötf
("%†", *
hp
->
h_Æü£s
++);

158 
	`¥ötf
("\n");

161 
hp
->
h_addr_li°
[0])

162 
	`¥ötf
("%†", 
	`öë_¡ﬂ
(*(
ö_addr
 *Ë*
hp
->
h_addr_li°
++));

163 
	`¥ötf
("\n");

166 
	`¥ötf
("%s\n", ++
p
);

169 
	`¥ötf
("%s\n", 
hp
->
h_«me
);

172 i‡(
p
 !
NULL
)

173 *
p
 = '\0';

174 
	`¥ötf
("%s\n", 
hp
->
h_«me
);

178 
	}
}

180 
	$£tfûíame
(*
«me
, 
wh©
)

182 
FILE
 *
fd
;

183 *
p
;

184 
Êöe
[
MAXHOSTNAMELEN
];

186 i‡((
fd
 = 
	`f›í
(
«me
, "r")Ë!
NULL
) {

187 
	`fgës
(
Êöe
, (Êöe), 
fd
Ë!
NULL
) {

188 i‡((
p
 = 
	`ödex
(
Êöe
, '\n')Ë!
NULL
)

189 *
p
 = '\0';

190 i‡(
›t_v
)

191 
	`Ârötf
(
°dîr
, ">> %s\n", 
Êöe
);

192 i‡(
Êöe
[0] == '#')

194 
wh©
) {

195 
SETHOST
:

196 
	`£th«me
(
Êöe
);

198 
SETDOMAIN
:

199 
	`£td«me
(
Êöe
);

201 #i‡
HAVE_AFDEC√t


202 
SETNODE
:

203 
	`£ä«me
(
Êöe
);

208 (Ë
	`f˛o£
(
fd
);

210 
	`Ârötf
(
°dîr
, 
	`_
("%s: can't open `%s'\n"),

211 
¥ogøm_«me
, 
«me
);

212 
	`exô
(1);

214 
	}
}

216 
	$vîsi⁄
()

218 
	`Ârötf
(
°dîr
, "%s\n%s\n", 
Rñó£
, 
Vîsi⁄
);

219 
	`exô
(5);

220 
	}
}

222 
	$ußge
()

224 
	`Ârötf
(
°dîr
, 
	`_
("Usage: hostname [-v] {hostname|-F file} set hostname (from file)\n"));

225 
	`Ârötf
(
°dîr
, 
	`_
(" domainname [-v] {nisdomain|-F file} set NIS domainname (from file)\n"));

226 #i‡
HAVE_AFDEC√t


227 
	`Ârötf
(
°dîr
, 
	`_
("Çodename [-v] {nodename|-F file} set DECnetÇodeÇame (from file)\n"));

229 
	`Ârötf
(
°dîr
, 
	`_
(" hostname [-v] [-d|-f|-s|-a|-i|-y|-n] display formattedÇame\n"));

230 
	`Ârötf
(
°dîr
, 
	`_
(" hostname [-v] display hostname\n\n"));

231 
	`Ârötf
(
°dîr
, 
	`_
(" hostname -V|--version|-h|--helpÖrint infoándÉxit\n\n"));

232 
	`Ârötf
(
°dîr
, 
	`_
(" dnsdomainname=hostname -d, {yp,nis,}domainname=hostname -y\n\n"));

233 
	`Ârötf
(
°dîr
, 
	`_
(" -s, --short short hostÇame\n"));

234 
	`Ârötf
(
°dîr
, 
	`_
(" -a, --aliasáliasÇames\n"));

235 
	`Ârötf
(
°dîr
, 
	`_
(" -i, --ip-addressáddresses forÅhe hostname\n"));

236 
	`Ârötf
(
°dîr
, 
	`_
(" -f, --fqdn, --longÜong hostÇame (FQDN)\n"));

237 
	`Ârötf
(
°dîr
, 
	`_
(" -d, --domain DNS domainÇame\n"));

238 
	`Ârötf
(
°dîr
, 
	`_
(" -y, --yp, --nis NIS/YP domainname\n"));

239 #i‡
HAVE_AFDEC√t


240 
	`Ârötf
(
°dîr
, 
	`_
(" -n, --node DECnetÇodeÇame\n"));

242 
	`Ârötf
(
°dîr
, 
	`_
(" -F, --fileÑead hostname or NIS domainname from given file\n\n"));

243 
	`Ârötf
(
°dîr
, 
	`_
(

250 
	`exô
(4);

251 
	}
}

254 
	$maö
(
¨gc
, **
¨gv
)

256 
c
;

257 
ty≥
 = '\0';

258 
›ti⁄_ödex
 = 0;

259 
wh©
 = 0;

260 
my«me
[
MAXHOSTNAMELEN
 + 1] =

262 *
fûe
 = 
NULL
;

264 c⁄° 
›ti⁄
 
l⁄g_›ti⁄s
[] =

266 {"domaö", 
no_¨gumít
, 0, 'd'},

267 {"fûe", 
ªquúed_¨gumít
, 0, 'F'},

268 {"fqdn", 
no_¨gumít
, 0, 'f'},

269 {"hñp", 
no_¨gumít
, 0, 'h'},

270 {"l⁄g", 
no_¨gumít
, 0, 'f'},

271 {"sh‹t", 
no_¨gumít
, 0, 's'},

272 {"vîsi⁄", 
no_¨gumít
, 0, 'V'},

273 {"vîbo£", 
no_¨gumít
, 0, 'v'},

274 {"Æüs", 
no_¨gumít
, 0, 'a'},

275 {"ù-addªss", 
no_¨gumít
, 0, 'i'},

276 {"nis", 
no_¨gumít
, 0, 'y'},

277 {"yp", 
no_¨gumít
, 0, 'y'},

278 #i‡
HAVE_AFDEC√t


279 {"node", 
no_¨gumít
, 0, 'n'},

283 #i‡
I18N


284 
	`£éoˇÀ
 (
LC_ALL
, "");

285 
	`bödãxtdomaö
("net-tools", "/usr/share/locale");

286 
	`ãxtdomaö
("net-tools");

288 
¥ogøm_«me
 = (
	`rödex
(
¨gv
[0], '/')) ?Ñindex(argv[0], '/') + 1 :árgv[0];

290 i‡(!
	`°rcmp
(
¥ogøm_«me
, "ypdomainname") ||

291 !
	`°rcmp
(
¥ogøm_«me
, "domainname") ||

292 !
	`°rcmp
(
¥ogøm_«me
, "nisdomainname"))

293 
wh©
 = 3;

294 i‡(!
	`°rcmp
(
¥ogøm_«me
, "dnsdomainname"))

295 
wh©
 = 2;

296 #i‡
HAVE_AFDEC√t


297 i‡(!
	`°rcmp
(
¥ogøm_«me
, "nodename"))

298 
wh©
 = 4;

301 (
c
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "adfF:h?isVvyn", 
l⁄g_›ti⁄s
, &
›ti⁄_ödex
)Ë!
EOF
)

302 
c
) {

304 
wh©
 = 2;

310 
wh©
 = 1;

311 
ty≥
 = 
c
;

314 
wh©
 = 3;

316 #i‡
HAVE_AFDEC√t


318 
wh©
 = 4;

322 
fûe
 = 
›èrg
;

325 
›t_v
++;

328 
	`vîsi⁄
();

332 
	`ußge
();

337 
wh©
) {

339 i‡(
fûe
 || (
›töd
 < 
¨gc
)) {

340 
	`Ârötf
(
°dîr
, 
	`_
("%s: You c™'àch™gêthêDNS domaöÇamêwôhÅhi†comm™d\n"), 
¥ogøm_«me
);

341 
	`Ârötf
(
°dîr
, 
	`_
("\nUnless youáre using bind or NIS for hostÜookups you can changeÅhe DNS\n"));

342 
	`Ârötf
(
°dîr
, 
	`_
("domainÇame (which isÖart ofÅhe FQDN) inÅhe /etc/hosts file.\n"));

343 
	`exô
(1);

345 
ty≥
 = 'd';

348 i‡(
fûe
) {

349 
	`£tfûíame
(
fûe
, 
SETHOST
);

352 i‡(
›töd
 < 
¨gc
) {

353 
	`£th«me
(
¨gv
[
›töd
]);

357 
	`gëho°«me
(
my«me
, (myname));

358 i‡(
›t_v
)

359 
	`Ârötf
(
°dîr
, 
	`_
("gëho°«me()=`%s'\n"), 
my«me
);

360 i‡(!
ty≥
)

361 
	`¥ötf
("%s\n", 
my«me
);

363 
	`showh«me
(
my«me
, 
ty≥
);

366 i‡(
fûe
) {

367 
	`£tfûíame
(
fûe
, 
SETDOMAIN
);

370 i‡(
›töd
 < 
¨gc
) {

371 
	`£td«me
(
¨gv
[
›töd
]);

374 
	`gëdomaö«me
(
my«me
, (myname));

375 i‡(
›t_v
)

376 
	`Ârötf
(
°dîr
, 
	`_
("gëdomaö«me()=`%s'\n"), 
my«me
);

377 
	`¥ötf
("%s\n", 
my«me
);

379 #i‡
HAVE_AFDEC√t


381 i‡(
fûe
) {

382 
	`£tfûíame
(
fûe
, 
SETNODE
);

385 i‡(
›töd
 < 
¨gc
) {

386 
	`£ä«me
(
¨gv
[
›töd
]);

389 
	`gënodíame
(
my«me
, (myname));

390 i‡(
›t_v
)

391 
	`Ârötf
(
°dîr
, 
	`_
("gënodíame()=`%s'\n"), 
my«me
);

392 
	`¥ötf
("%s\n", 
my«me
);

396 
	`exô
(0);

397 
	}
}

	@net-tools-1.60/ifconfig.c

28 
	#DFLT_AF
 "öë"

	)

30 
	~"c⁄fig.h
"

32 
	~<„©uªs.h
>

33 
	~<sys/ty≥s.h
>

34 
	~<sys/sockë.h
>

35 
	~<sys/io˘l.h
>

36 
	~<√töë/ö.h
>

37 
	~<√t/if.h
>

38 
	~<√t/if_¨p.h
>

39 
	~<°dio.h
>

40 
	~<î∫o.h
>

41 
	~<f˙é.h
>

42 
	~<˘y≥.h
>

43 
	~<°dlib.h
>

44 
	~<°rög.h
>

45 
	~<uni°d.h
>

46 
	~<√tdb.h
>

49 
	~<asm/ty≥s.h
>

52 #ifde‡
HAVE_HWSLIP


53 
	~<löux/if_¶ù.h
>

56 #i‡
HAVE_AFINET6


58 #i‚de‡
_LINUX_IN6_H


63 
	sö6_i‰eq
 {

64 
ö6_addr
 
	mi‰6_addr
;

65 
__u32
 
	mi‰6_¥efixÀn
;

66 
	mi‰6_ifödex
;

73 #i‡
HAVE_AFIPX


74 #i‡(
__GLIBC__
 > 2Ë|| (__GLIBC__ =2 && 
__GLIBC_MINOR__
 >= 1)

75 
	~<√tùx/ùx.h
>

77 
	~"ùx.h
"

80 
	~"√t-suµ‹t.h
"

81 
	~"∑th«mes.h
"

82 
	~"vîsi⁄.h
"

83 
	~"../öé.h
"

84 
	~"öãrÁ˚.h
"

85 
	~"sockës.h
"

86 
	~"utû.h
"

88 *
	gRñó£
 = 
RELEASE
, *
	gVîsi⁄
 = "ifconfig 1.42 (2001-04-13)";

90 
	g›t_a
 = 0;

91 
	g›t_i
 = 0;

92 
	g›t_v
 = 0;

94 
	gaddr_Ámûy
 = 0;

97 
gë_nmbc_∑ª¡
(*
∑ª¡
, *
nm
,

98 *
bc
);

99 
£t_if°©e
(*
∑ª¡
, 
ù
,

100 
nm
, 
bc
,

101 
Êag
);

103 
	$if_¥öt
(*
i‚ame
)

105 
ªs
;

107 i‡(
i„_sh‹t
)

108 
	`¥ötf
(
	`_
("Iface MTU Met RX-OK RX-ERR RX-DRP RX-OVR TX-OK TX-ERR TX-DRP TX-OVR Flg\n"));

110 i‡(!
i‚ame
) {

111 
ªs
 = 
	`f‹_Æl_öãrÁ˚s
(
do_if_¥öt
, &
›t_a
);

113 
öãrÁ˚
 *
i„
;

115 
i„
 = 
	`lookup_öãrÁ˚
(
i‚ame
);

116 
ªs
 = 
	`do_if_„tch
(
i„
);

117 i‡(
ªs
 >= 0)

118 
	`i„_¥öt
(
i„
);

120  
ªs
;

121 
	}
}

124 
	$£t_Êag
(*
i‚ame
, 
Êag
)

126 
i‰eq
 
i‰
;

128 
	`ß„_°∫˝y
(
i‰
.
i‰_«me
, 
i‚ame
, 
IFNAMSIZ
);

129 i‡(
	`io˘l
(
skfd
, 
SIOCGIFFLAGS
, &
i‰
) < 0) {

130 
	`Ârötf
(
°dîr
, 
	`_
("%s: unknown interface: %s\n"),

131 
i‚ame
, 
	`°ªº‹
(
î∫o
));

134 
	`ß„_°∫˝y
(
i‰
.
i‰_«me
, 
i‚ame
, 
IFNAMSIZ
);

135 
i‰
.
i‰_Êags
 |
Êag
;

136 i‡(
	`io˘l
(
skfd
, 
SIOCSIFFLAGS
, &
i‰
) < 0) {

137 
	`≥º‹
("SIOCSIFFLAGS");

141 
	}
}

144 
	$˛r_Êag
(*
i‚ame
, 
Êag
)

146 
i‰eq
 
i‰
;

147 
fd
;

149 i‡(
	`°rchr
(
i‚ame
, ':')) {

152 
fd
 = 
	`gë_sockë_f‹_af
(
AF_INET
);

153 i‡(
fd
 < 0) {

154 
	`Ârötf
(
°dîr
, 
	`_
("No support for INET onÅhis system.\n"));

158 
fd
 = 
skfd
;

160 
	`ß„_°∫˝y
(
i‰
.
i‰_«me
, 
i‚ame
, 
IFNAMSIZ
);

161 i‡(
	`io˘l
(
fd
, 
SIOCGIFFLAGS
, &
i‰
) < 0) {

162 
	`Ârötf
(
°dîr
, 
	`_
("%s: unknown interface: %s\n"),

163 
i‚ame
, 
	`°ªº‹
(
î∫o
));

166 
	`ß„_°∫˝y
(
i‰
.
i‰_«me
, 
i‚ame
, 
IFNAMSIZ
);

167 
i‰
.
i‰_Êags
 &~
Êag
;

168 i‡(
	`io˘l
(
fd
, 
SIOCSIFFLAGS
, &
i‰
) < 0) {

169 
	`≥º‹
("SIOCSIFFLAGS");

173 
	}
}

175 
	$ußge
()

177 
	`Ârötf
(
°dîr
, 
	`_
("Usage:\n ifconfig [-a] [-i] [-v] [-s] <interface> [[<AF>] <address>]\n"));

178 #i‡
HAVE_AFINET


179 
	`Ârötf
(
°dîr
, 
	`_
(" [add <address>[/<prefixlen>]]\n"));

180 
	`Ârötf
(
°dîr
, 
	`_
(" [del <address>[/<prefixlen>]]\n"));

181 
	`Ârötf
(
°dîr
, 
	`_
(" [[-]broadcast [<address>]] [[-]pointopoint [<address>]]\n"));

182 
	`Ârötf
(
°dîr
, 
	`_
(" [netmask <address>] [dstaddr <address>] [tunnel <address>]\n"));

184 #ifde‡
SIOCSKEEPALIVE


185 
	`Ârötf
(
°dîr
, 
	`_
(" [outfill <NN>] [keepalive <NN>]\n"));

187 
	`Ârötf
(
°dîr
, 
	`_
(" [hw <HW> <address>] [metric <NN>] [mtu <NN>]\n"));

188 
	`Ârötf
(
°dîr
, 
	`_
(" [[-]trailers] [[-]arp] [[-]allmulti]\n"));

189 
	`Ârötf
(
°dîr
, 
	`_
(" [multicast] [[-]promisc]\n"));

190 
	`Ârötf
(
°dîr
, 
	`_
(" [mem_start <NN>] [io_addr <NN>] [irq <NN>] [media <type>]\n"));

191 #ifde‡
HAVE_TXQUEUELEN


192 
	`Ârötf
(
°dîr
, 
	`_
(" [txqueuelen <NN>]\n"));

194 #ifde‡
HAVE_DYNAMIC


195 
	`Ârötf
(
°dîr
, 
	`_
(" [[-]dynamic]\n"));

197 
	`Ârötf
(
°dîr
, 
	`_
(" [up|down] ...\n\n"));

199 
	`Ârötf
(
°dîr
, 
	`_
(" <HW>=Hardware Type.\n"));

200 
	`Ârötf
(
°dîr
, 
	`_
(" List ofÖossible hardwareÅypes:\n"));

201 
	`¥öt_hwli°
(0);

202 
	`Ârötf
(
°dîr
, 
	`_
(" <AF>=Addªs†Ámûy. DeÁu…: %s\n"), 
DFLT_AF
);

203 
	`Ârötf
(
°dîr
, 
	`_
(" List ofÖossibleáddress families:\n"));

204 
	`¥öt_aÊi°
(0);

205 
	`exô
(
E_USAGE
);

206 
	}
}

208 
	$vîsi⁄
()

210 
	`Ârötf
(
°dîr
, "%s\n%s\n", 
Rñó£
, 
Vîsi⁄
);

211 
	`exô
(0);

212 
	}
}

214 
	$£t_√tmask
(
skfd
, 
i‰eq
 *
i‰
, 
sockaddr
 *
ß
)

216 
îr
 = 0;

218 
	`mem˝y
((*Ë&
i‰
->
i‰_√tmask
, (*Ë
ß
,

219 (
sockaddr
));

220 i‡(
	`io˘l
(
skfd
, 
SIOCSIFNETMASK
, 
i‰
) < 0) {

221 
	`Ârötf
(
°dîr
, "SIOCSIFNETMASK: %s\n",

222 
	`°ªº‹
(
î∫o
));

223 
îr
 = 1;

226 
	}
}

228 
	$maö
(
¨gc
, **
¨gv
)

230 
sockaddr
 
ß
;

231 
sockaddr_ö
 
sö
;

232 
ho°
[128];

233 
a·y≥
 *
≠
;

234 
hwty≥
 *
hw
;

235 
i‰eq
 
i‰
;

236 
gŸîr
 = 0, 
did√tmask
 = 0;

237 **
•p
;

238 
fd
;

239 #i‡
HAVE_AFINET6


240 
a·y≥
 
öë6_a·y≥
;

241 
sockaddr_ö6
 
ß6
;

242 
ö6_i‰eq
 
i‰6
;

243 
¥efix_Àn
;

244 *
˝
;

246 #i‡
HAVE_AFINET


247 
a·y≥
 
öë_a·y≥
;

250 #i‡
I18N


251 
	`£éoˇÀ
 (
LC_ALL
, "");

252 
	`bödãxtdomaö
("net-tools", "/usr/share/locale");

253 
	`ãxtdomaö
("net-tools");

257 
¨gc
--;

258 
¨gv
++;

259 
¨gc
 && *
¨gv
[0] == '-') {

260 i‡(!
	`°rcmp
(*
¨gv
, "-a"))

261 
›t_a
 = 1;

263 i‡(!
	`°rcmp
(*
¨gv
, "-s"))

264 
i„_sh‹t
 = 1;

266 i‡(!
	`°rcmp
(*
¨gv
, "-v"))

267 
›t_v
 = 1;

269 i‡(!
	`°rcmp
(*
¨gv
, "-V") || !strcmp(*argv, "-version") ||

270 !
	`°rcmp
(*
¨gv
, "--version"))

271 
	`vîsi⁄
();

273 i‡(!
	`°rcmp
(*
¨gv
, "-?") || !strcmp(*argv, "-h") ||

274 !
	`°rcmp
(*
¨gv
, "-help") || !strcmp(*argv, "--help"))

275 
	`ußge
();

278 
	`Ârötf
(
°dîr
, 
	`_
("ifconfig: option `%s'ÇotÑecognised.\n"),

279 
¨gv
[0]);

280 
	`Ârötf
(
°dîr
, 
	`_
("ifconfig: `--help' gives usage information.\n"));

281 
	`exô
(1);

284 
¨gv
++;

285 
¨gc
--;

289 i‡((
skfd
 = 
	`sockës_›í
(0)) < 0) {

290 
	`≥º‹
("socket");

291 
	`exô
(1);

295 i‡(
¨gc
 == 0) {

296 
îr
 = 
	`if_¥öt
((*Ë
NULL
);

297 (Ë
	`˛o£
(
skfd
);

298 
	`exô
(
îr
 < 0);

301 
•p
 = 
¨gv
;

302 
	`ß„_°∫˝y
(
i‰
.
i‰_«me
, *
•p
++, 
IFNAMSIZ
);

303 i‡(*
•p
 =(*Ë
NULL
) {

304 
îr
 = 
	`if_¥öt
(
i‰
.
i‰_«me
);

305 (Ë
	`˛o£
(
skfd
);

306 
	`exô
(
îr
 < 0);

310 i‡((
≠
 = 
	`gë_a·y≥
(*
•p
)Ë!
NULL
)

311 
•p
++;

313 
≠
 = 
	`gë_a·y≥
(
DFLT_AF
);

315 i‡(
≠
) {

316 
addr_Ámûy
 = 
≠
->
af
;

317 
skfd
 = 
≠
->
fd
;

321 *
•p
 !(*Ë
NULL
) {

322 i‡(!
	`°rcmp
(*
•p
, "arp")) {

323 
gŸîr
 |
	`˛r_Êag
(
i‰
.
i‰_«me
, 
IFF_NOARP
);

324 
•p
++;

327 i‡(!
	`°rcmp
(*
•p
, "-arp")) {

328 
gŸîr
 |
	`£t_Êag
(
i‰
.
i‰_«me
, 
IFF_NOARP
);

329 
•p
++;

332 #ifde‡
IFF_PORTSEL


333 i‡(!
	`°rcmp
(*
•p
, "media") || !strcmp(*spp, "port")) {

334 i‡(*++
•p
 =
NULL
)

335 
	`ußge
();

336 i‡(!
	`°rˇ£cmp
(*
•p
, "auto")) {

337 
gŸîr
 |
	`£t_Êag
(
i‰
.
i‰_«me
, 
IFF_AUTOMEDIA
);

339 
i
, 
j
, 
√wp‹t
;

340 *
ídp
;

341 
√wp‹t
 = 
	`°πﬁ
(*
•p
, &
ídp
, 10);

342 i‡(*
ídp
 != 0) {

343 
√wp‹t
 = -1;

344 
i
 = 0; 
if_p‹t_ãxt
[i][0] && 
√wp‹t
 == -1; i++) {

345 
j
 = 0; 
if_p‹t_ãxt
[
i
][j]; j++) {

346 i‡(!
	`°rˇ£cmp
(*
•p
, 
if_p‹t_ãxt
[
i
][
j
])) {

347 
√wp‹t
 = 
i
;

353 
•p
++;

354 i‡(
√wp‹t
 == -1) {

355 
	`Ârötf
(
°dîr
, 
	`_
("Unknown mediaÅype.\n"));

356 
gŸîr
 = 1;

358 i‡(
	`io˘l
(
skfd
, 
SIOCGIFMAP
, &
i‰
) < 0) {

359 
	`≥º‹
("port: SIOCGIFMAP");

360 
gŸîr
 = 1;

363 
i‰
.
i‰_m≠
.
p‹t
 = 
√wp‹t
;

364 i‡(
	`io˘l
(
skfd
, 
SIOCSIFMAP
, &
i‰
) < 0) {

365 
	`≥º‹
("port: SIOCSIFMAP");

366 
gŸîr
 = 1;

374 i‡(!
	`°rcmp
(*
•p
, "trailers")) {

375 
gŸîr
 |
	`˛r_Êag
(
i‰
.
i‰_«me
, 
IFF_NOTRAILERS
);

376 
•p
++;

379 i‡(!
	`°rcmp
(*
•p
, "-trailers")) {

380 
gŸîr
 |
	`£t_Êag
(
i‰
.
i‰_«me
, 
IFF_NOTRAILERS
);

381 
•p
++;

384 i‡(!
	`°rcmp
(*
•p
, "promisc")) {

385 
gŸîr
 |
	`£t_Êag
(
i‰
.
i‰_«me
, 
IFF_PROMISC
);

386 
•p
++;

389 i‡(!
	`°rcmp
(*
•p
, "-promisc")) {

390 
gŸîr
 |
	`˛r_Êag
(
i‰
.
i‰_«me
, 
IFF_PROMISC
);

391 
•p
++;

394 i‡(!
	`°rcmp
(*
•p
, "multicast")) {

395 
gŸîr
 |
	`£t_Êag
(
i‰
.
i‰_«me
, 
IFF_MULTICAST
);

396 
•p
++;

399 i‡(!
	`°rcmp
(*
•p
, "-multicast")) {

400 
gŸîr
 |
	`˛r_Êag
(
i‰
.
i‰_«me
, 
IFF_MULTICAST
);

401 
•p
++;

404 i‡(!
	`°rcmp
(*
•p
, "allmulti")) {

405 
gŸîr
 |
	`£t_Êag
(
i‰
.
i‰_«me
, 
IFF_ALLMULTI
);

406 
•p
++;

409 i‡(!
	`°rcmp
(*
•p
, "-allmulti")) {

410 
gŸîr
 |
	`˛r_Êag
(
i‰
.
i‰_«me
, 
IFF_ALLMULTI
);

411 
•p
++;

414 i‡(!
	`°rcmp
(*
•p
, "up")) {

415 
gŸîr
 |
	`£t_Êag
(
i‰
.
i‰_«me
, (
IFF_UP
 | 
IFF_RUNNING
));

416 
•p
++;

419 i‡(!
	`°rcmp
(*
•p
, "down")) {

420 
gŸîr
 |
	`˛r_Êag
(
i‰
.
i‰_«me
, 
IFF_UP
);

421 
•p
++;

424 #ifde‡
HAVE_DYNAMIC


425 i‡(!
	`°rcmp
(*
•p
, "dynamic")) {

426 
gŸîr
 |
	`£t_Êag
(
i‰
.
i‰_«me
, 
IFF_DYNAMIC
);

427 
•p
++;

430 i‡(!
	`°rcmp
(*
•p
, "-dynamic")) {

431 
gŸîr
 |
	`˛r_Êag
(
i‰
.
i‰_«me
, 
IFF_DYNAMIC
);

432 
•p
++;

437 i‡(!
	`°rcmp
(*
•p
, "metric")) {

438 i‡(*++
•p
 =
NULL
)

439 
	`ußge
();

440 
i‰
.
i‰_mëric
 = 
	`©oi
(*
•p
);

441 i‡(
	`io˘l
(
skfd
, 
SIOCSIFMETRIC
, &
i‰
) < 0) {

442 
	`Ârötf
(
°dîr
, "SIOCSIFMETRIC: %s\n", 
	`°ªº‹
(
î∫o
));

443 
gŸîr
 = 1;

445 
•p
++;

448 i‡(!
	`°rcmp
(*
•p
, "mtu")) {

449 i‡(*++
•p
 =
NULL
)

450 
	`ußge
();

451 
i‰
.
i‰_mtu
 = 
	`©oi
(*
•p
);

452 i‡(
	`io˘l
(
skfd
, 
SIOCSIFMTU
, &
i‰
) < 0) {

453 
	`Ârötf
(
°dîr
, "SIOCSIFMTU: %s\n", 
	`°ªº‹
(
î∫o
));

454 
gŸîr
 = 1;

456 
•p
++;

459 #ifde‡
SIOCSKEEPALIVE


460 i‡(!
	`°rcmp
(*
•p
, "keepalive")) {

461 i‡(*++
•p
 =
NULL
)

462 
	`ußge
();

463 
i‰
.
i‰_d©a
 = (
ˇddr_t
Ë
	`©oi
(*
•p
);

464 i‡(
	`io˘l
(
skfd
, 
SIOCSKEEPALIVE
, &
i‰
) < 0) {

465 
	`Ârötf
(
°dîr
, "SIOCSKEEPALIVE: %s\n", 
	`°ªº‹
(
î∫o
));

466 
gŸîr
 = 1;

468 
•p
++;

473 #ifde‡
SIOCSOUTFILL


474 i‡(!
	`°rcmp
(*
•p
, "outfill")) {

475 i‡(*++
•p
 =
NULL
)

476 
	`ußge
();

477 
i‰
.
i‰_d©a
 = (
ˇddr_t
Ë
	`©oi
(*
•p
);

478 i‡(
	`io˘l
(
skfd
, 
SIOCSOUTFILL
, &
i‰
) < 0) {

479 
	`Ârötf
(
°dîr
, "SIOCSOUTFILL: %s\n", 
	`°ªº‹
(
î∫o
));

480 
gŸîr
 = 1;

482 
•p
++;

487 i‡(!
	`°rcmp
(*
•p
, "-broadcast")) {

488 
gŸîr
 |
	`˛r_Êag
(
i‰
.
i‰_«me
, 
IFF_BROADCAST
);

489 
•p
++;

492 i‡(!
	`°rcmp
(*
•p
, "broadcast")) {

493 i‡(*++
•p
 !
NULL
) {

494 
	`ß„_°∫˝y
(
ho°
, *
•p
, ( host));

495 i‡(
≠
->
	`öput
(0, 
ho°
, &
ß
) < 0) {

496 
≠
->
	`hîr‹
(
ho°
);

497 
gŸîr
 = 1;

498 
•p
++;

501 
	`mem˝y
((*Ë&
i‰
.
i‰_brﬂdaddr
, (*Ë&
ß
,

502 (
sockaddr
));

503 i‡(
	`io˘l
(
≠
->
fd
, 
SIOCSIFBRDADDR
, &
i‰
) < 0) {

504 
	`Ârötf
(
°dîr
, "SIOCSIFBRDADDR: %s\n",

505 
	`°ªº‹
(
î∫o
));

506 
gŸîr
 = 1;

508 
•p
++;

510 
gŸîr
 |
	`£t_Êag
(
i‰
.
i‰_«me
, 
IFF_BROADCAST
);

513 i‡(!
	`°rcmp
(*
•p
, "dstaddr")) {

514 i‡(*++
•p
 =
NULL
)

515 
	`ußge
();

516 
	`ß„_°∫˝y
(
ho°
, *
•p
, ( host));

517 i‡(
≠
->
	`öput
(0, 
ho°
, &
ß
) < 0) {

518 
≠
->
	`hîr‹
(
ho°
);

519 
gŸîr
 = 1;

520 
•p
++;

523 
	`mem˝y
((*Ë&
i‰
.
i‰_d°addr
, (*Ë&
ß
,

524 (
sockaddr
));

525 i‡(
	`io˘l
(
≠
->
fd
, 
SIOCSIFDSTADDR
, &
i‰
) < 0) {

526 
	`Ârötf
(
°dîr
, "SIOCSIFDSTADDR: %s\n",

527 
	`°ªº‹
(
î∫o
));

528 
gŸîr
 = 1;

530 
•p
++;

533 i‡(!
	`°rcmp
(*
•p
, "netmask")) {

534 i‡(*++
•p
 =
NULL
 || 
did√tmask
)

535 
	`ußge
();

536 
	`ß„_°∫˝y
(
ho°
, *
•p
, ( host));

537 i‡(
≠
->
	`öput
(0, 
ho°
, &
ß
) < 0) {

538 
≠
->
	`hîr‹
(
ho°
);

539 
gŸîr
 = 1;

540 
•p
++;

543 
did√tmask
++;

544 
gŸîr
 = 
	`£t_√tmask
(
≠
->
fd
, &
i‰
, &
ß
);

545 
•p
++;

548 #ifde‡
HAVE_TXQUEUELEN


549 i‡(!
	`°rcmp
(*
•p
, "txqueuelen")) {

550 i‡(*++
•p
 =
NULL
)

551 
	`ußge
();

552 
i‰
.
i‰_qÀn
 = 
	`°πoul
(*
•p
, 
NULL
, 0);

553 i‡(
	`io˘l
(
skfd
, 
SIOCSIFTXQLEN
, &
i‰
) < 0) {

554 
	`Ârötf
(
°dîr
, "SIOCSIFTXQLEN: %s\n", 
	`°ªº‹
(
î∫o
));

555 
gŸîr
 = 1;

557 
•p
++;

562 i‡(!
	`°rcmp
(*
•p
, "mem_start")) {

563 i‡(*++
•p
 =
NULL
)

564 
	`ußge
();

565 i‡(
	`io˘l
(
skfd
, 
SIOCGIFMAP
, &
i‰
) < 0) {

566 
	`Ârötf
(
°dîr
, "mem_°¨t: SIOCGIFMAP: %s\n", 
	`°ªº‹
(
î∫o
));

567 
•p
++;

568 
gŸîr
 = 1;

571 
i‰
.
i‰_m≠
.
mem_°¨t
 = 
	`°πoul
(*
•p
, 
NULL
, 0);

572 i‡(
	`io˘l
(
skfd
, 
SIOCSIFMAP
, &
i‰
) < 0) {

573 
	`Ârötf
(
°dîr
, "mem_°¨t: SIOCSIFMAP: %s\n", 
	`°ªº‹
(
î∫o
));

574 
gŸîr
 = 1;

576 
•p
++;

579 i‡(!
	`°rcmp
(*
•p
, "io_addr")) {

580 i‡(*++
•p
 =
NULL
)

581 
	`ußge
();

582 i‡(
	`io˘l
(
skfd
, 
SIOCGIFMAP
, &
i‰
) < 0) {

583 
	`Ârötf
(
°dîr
, "io_addr: SIOCGIFMAP: %s\n", 
	`°ªº‹
(
î∫o
));

584 
•p
++;

585 
gŸîr
 = 1;

588 
i‰
.
i‰_m≠
.
ba£_addr
 = 
	`°πﬁ
(*
•p
, 
NULL
, 0);

589 i‡(
	`io˘l
(
skfd
, 
SIOCSIFMAP
, &
i‰
) < 0) {

590 
	`Ârötf
(
°dîr
, "io_addr: SIOCSIFMAP: %s\n", 
	`°ªº‹
(
î∫o
));

591 
gŸîr
 = 1;

593 
•p
++;

596 i‡(!
	`°rcmp
(*
•p
, "irq")) {

597 i‡(*++
•p
 =
NULL
)

598 
	`ußge
();

599 i‡(
	`io˘l
(
skfd
, 
SIOCGIFMAP
, &
i‰
) < 0) {

600 
	`Ârötf
(
°dîr
, "úq: SIOCGIFMAP: %s\n", 
	`°ªº‹
(
î∫o
));

601 
gŸîr
 = 1;

602 
•p
++;

605 
i‰
.
i‰_m≠
.
úq
 = 
	`©oi
(*
•p
);

606 i‡(
	`io˘l
(
skfd
, 
SIOCSIFMAP
, &
i‰
) < 0) {

607 
	`Ârötf
(
°dîr
, "úq: SIOCSIFMAP: %s\n", 
	`°ªº‹
(
î∫o
));

608 
gŸîr
 = 1;

610 
•p
++;

613 i‡(!
	`°rcmp
(*
•p
, "-pointopoint")) {

614 
gŸîr
 |
	`˛r_Êag
(
i‰
.
i‰_«me
, 
IFF_POINTOPOINT
);

615 
•p
++;

618 i‡(!
	`°rcmp
(*
•p
, "pointopoint")) {

619 i‡(*(
•p
 + 1Ë!
NULL
) {

620 
•p
++;

621 
	`ß„_°∫˝y
(
ho°
, *
•p
, ( host));

622 i‡(
≠
->
	`öput
(0, 
ho°
, &
ß
)) {

623 
≠
->
	`hîr‹
(
ho°
);

624 
gŸîr
 = 1;

625 
•p
++;

628 
	`mem˝y
((*Ë&
i‰
.
i‰_d°addr
, (*Ë&
ß
,

629 (
sockaddr
));

630 i‡(
	`io˘l
(
≠
->
fd
, 
SIOCSIFDSTADDR
, &
i‰
) < 0) {

631 
	`Ârötf
(
°dîr
, "SIOCSIFDSTADDR: %s\n",

632 
	`°ªº‹
(
î∫o
));

633 
gŸîr
 = 1;

636 
gŸîr
 |
	`£t_Êag
(
i‰
.
i‰_«me
, 
IFF_POINTOPOINT
);

637 
•p
++;

641 i‡(!
	`°rcmp
(*
•p
, "hw")) {

642 i‡(*++
•p
 =
NULL
)

643 
	`ußge
();

644 i‡((
hw
 = 
	`gë_hwty≥
(*
•p
)Ë=
NULL
)

645 
	`ußge
();

646 i‡(
hw
->
öput
 =
NULL
) {

647 
	`Ârötf
(
°dîr
, 
	`_
("hwáddªs†ty≥ `%s' ha†nÿh™dÀ∏tÿ£àaddªss. faûed.\n"), *
•p
);

648 
•p
+=2;

649 
gŸîr
 = 1;

652 i‡(*++
•p
 =
NULL
)

653 
	`ußge
();

654 
	`ß„_°∫˝y
(
ho°
, *
•p
, ( host));

655 i‡(
hw
->
	`öput
(
ho°
, &
ß
) < 0) {

656 
	`Ârötf
(
°dîr
, 
	`_
("%s: invÆid %†addªss.\n"), 
ho°
, 
hw
->
«me
);

657 
gŸîr
 = 1;

658 
•p
++;

661 
	`mem˝y
((*Ë&
i‰
.
i‰_hwaddr
, (*Ë&
ß
,

662 (
sockaddr
));

663 i‡(
	`io˘l
(
skfd
, 
SIOCSIFHWADDR
, &
i‰
) < 0) {

664 
	`Ârötf
(
°dîr
, "SIOCSIFHWADDR: %s\n",

665 
	`°ªº‹
(
î∫o
));

666 
gŸîr
 = 1;

668 
•p
++;

671 #i‡
HAVE_AFINET
 || 
HAVE_AFINET6


672 i‡(!
	`°rcmp
(*
•p
, "add")) {

673 i‡(*++
•p
 =
NULL
)

674 
	`ußge
();

675 #i‡
HAVE_AFINET6


676 i‡(
	`°rchr
(*
•p
, ':')) {

678 i‡((
˝
 = 
	`°rchr
(*
•p
, '/'))) {

679 
¥efix_Àn
 = 
	`©ﬁ
(
˝
 + 1);

680 i‡((
¥efix_Àn
 < 0) || (prefix_len > 128))

681 
	`ußge
();

682 *
˝
 = 0;

684 
¥efix_Àn
 = 0;

686 
	`ß„_°∫˝y
(
ho°
, *
•p
, ( host));

687 i‡(
öë6_a·y≥
.
	`öput
(1, 
ho°
,

688 (
sockaddr
 *Ë&
ß6
) < 0) {

689 
öë6_a·y≥
.
	`hîr‹
(
ho°
);

690 
gŸîr
 = 1;

691 
•p
++;

694 
	`mem˝y
((*Ë&
i‰6
.
i‰6_addr
, (*Ë&
ß6
.
sö6_addr
,

695 (
ö6_addr
));

697 
fd
 = 
	`gë_sockë_f‹_af
(
AF_INET6
);

698 i‡(
fd
 < 0) {

699 
	`Ârötf
(
°dîr
,

700 
	`_
("No support for INET6 onÅhis system.\n"));

701 
gŸîr
 = 1;

702 
•p
++;

705 i‡(
	`io˘l
(
fd
, 
SIOGIFINDEX
, &
i‰
) < 0) {

706 
	`≥º‹
("SIOGIFINDEX");

707 
gŸîr
 = 1;

708 
•p
++;

711 
i‰6
.
i‰6_ifödex
 = 
i‰
.
i‰_ifödex
;

712 
i‰6
.
i‰6_¥efixÀn
 = 
¥efix_Àn
;

713 i‡(
	`io˘l
(
fd
, 
SIOCSIFADDR
, &
i‰6
) < 0) {

714 
	`≥º‹
("SIOCSIFADDR");

715 
gŸîr
 = 1;

717 
•p
++;

721 #ifde‡
HAVE_AFINET


723 
ù
, 
nm
, 
bc
;

724 
	`ß„_°∫˝y
(
ho°
, *
•p
, ( host));

725 i‡(
öë_a·y≥
.
	`öput
(0, 
ho°
, (
sockaddr
 *)&
sö
) < 0) {

726 
≠
->
	`hîr‹
(
ho°
);

727 
gŸîr
 = 1;

728 
•p
++;

731 
fd
 = 
	`gë_sockë_f‹_af
(
AF_INET
);

732 i‡(
fd
 < 0) {

733 
	`Ârötf
(
°dîr
,

734 
	`_
("No support for INET onÅhis system.\n"));

735 
gŸîr
 = 1;

736 
•p
++;

740 
	`mem˝y
(&
ù
, &
sö
.
sö_addr
.
s_addr
, ());

742 i‡(
	`gë_nmbc_∑ª¡
(
i‰
.
i‰_«me
, &
nm
, &
bc
) < 0) {

743 
	`Ârötf
(
°dîr
, 
	`_
("Interface %sÇot initialized\n"),

744 
i‰
.
i‰_«me
);

745 
gŸîr
 = 1;

746 
•p
++;

749 
	`£t_if°©e
(
i‰
.
i‰_«me
, 
ù
, 
nm
, 
bc
, 1);

752 
•p
++;

755 
	`Ârötf
(
°dîr
, 
	`_
("Badáddress.\n"));

760 #i‡
HAVE_AFINET
 || 
HAVE_AFINET6


761 i‡(!
	`°rcmp
(*
•p
, "del")) {

762 i‡(*++
•p
 =
NULL
)

763 
	`ußge
();

765 #ifde‡
SIOCDIFADDR


766 #i‡
HAVE_AFINET6


767 i‡(
	`°rchr
(*
•p
, ':')) {

768 i‡((
˝
 = 
	`°rchr
(*
•p
, '/'))) {

769 
¥efix_Àn
 = 
	`©ﬁ
(
˝
 + 1);

770 i‡((
¥efix_Àn
 < 0) || (prefix_len > 128))

771 
	`ußge
();

772 *
˝
 = 0;

774 
¥efix_Àn
 = 0;

776 
	`ß„_°∫˝y
(
ho°
, *
•p
, ( host));

777 i‡(
öë6_a·y≥
.
	`öput
(1, 
ho°
,

778 (
sockaddr
 *Ë&
ß6
) < 0) {

779 
öë6_a·y≥
.
	`hîr‹
(
ho°
);

780 
gŸîr
 = 1;

781 
•p
++;

784 
	`mem˝y
((*Ë&
i‰6
.
i‰6_addr
, (*Ë&
ß6
.
sö6_addr
,

785 (
ö6_addr
));

787 
fd
 = 
	`gë_sockë_f‹_af
(
AF_INET6
);

788 i‡(
fd
 < 0) {

789 
	`Ârötf
(
°dîr
,

790 
	`_
("No support for INET6 onÅhis system.\n"));

791 
gŸîr
 = 1;

792 
•p
++;

795 i‡(
	`io˘l
(
fd
, 
SIOGIFINDEX
, &
i‰
) < 0) {

796 
	`≥º‹
("SIOGIFINDEX");

797 
gŸîr
 = 1;

798 
•p
++;

801 
i‰6
.
i‰6_ifödex
 = 
i‰
.
i‰_ifödex
;

802 
i‰6
.
i‰6_¥efixÀn
 = 
¥efix_Àn
;

803 i‡(
	`io˘l
(
fd
, 
SIOCDIFADDR
, &
i‰6
) < 0) {

804 
	`Ârötf
(
°dîr
, "SIOCDIFADDR: %s\n",

805 
	`°ªº‹
(
î∫o
));

806 
gŸîr
 = 1;

808 
•p
++;

812 #ifde‡
HAVE_AFINET


815 
ù
, 
nm
, 
bc
;

816 
	`ß„_°∫˝y
(
ho°
, *
•p
, ( host));

817 i‡(
öë_a·y≥
.
	`öput
(0, 
ho°
, (
sockaddr
 *)&
sö
) < 0) {

818 
≠
->
	`hîr‹
(
ho°
);

819 
gŸîr
 = 1;

820 
•p
++;

823 
fd
 = 
	`gë_sockë_f‹_af
(
AF_INET
);

824 i‡(
fd
 < 0) {

825 
	`Ârötf
(
°dîr
, 
	`_
("No support for INET onÅhis system.\n"));

826 
gŸîr
 = 1;

827 
•p
++;

831 
	`mem˝y
(&
ù
, &
sö
.
sö_addr
.
s_addr
, ());

833 i‡(
	`gë_nmbc_∑ª¡
(
i‰
.
i‰_«me
, &
nm
, &
bc
) < 0) {

834 
	`Ârötf
(
°dîr
, 
	`_
("Interface %sÇot initialized\n"),

835 
i‰
.
i‰_«me
);

836 
gŸîr
 = 1;

837 
•p
++;

840 
	`£t_if°©e
(
i‰
.
i‰_«me
, 
ù
, 
nm
, 
bc
, 0);

842 
•p
++;

845 
	`Ârötf
(
°dîr
, 
	`_
("Badáddress.\n"));

848 
	`Ârötf
(
°dîr
, 
	`_
("Address deletionÇot supported onÅhis system.\n"));

852 #i‡
HAVE_AFINET6


853 i‡(!
	`°rcmp
(*
•p
, "tunnel")) {

854 i‡(*++
•p
 =
NULL
)

855 
	`ußge
();

856 i‡((
˝
 = 
	`°rchr
(*
•p
, '/'))) {

857 
¥efix_Àn
 = 
	`©ﬁ
(
˝
 + 1);

858 i‡((
¥efix_Àn
 < 0) || (prefix_len > 128))

859 
	`ußge
();

860 *
˝
 = 0;

862 
¥efix_Àn
 = 0;

864 
	`ß„_°∫˝y
(
ho°
, *
•p
, ( host));

865 i‡(
öë6_a·y≥
.
	`öput
(1, 
ho°
, (
sockaddr
 *Ë&
ß6
) < 0) {

866 
öë6_a·y≥
.
	`hîr‹
(
ho°
);

867 
gŸîr
 = 1;

868 
•p
++;

871 
	`mem˝y
((*Ë&
i‰6
.
i‰6_addr
, (*Ë&
ß6
.
sö6_addr
,

872 (
ö6_addr
));

874 
fd
 = 
	`gë_sockë_f‹_af
(
AF_INET6
);

875 i‡(
fd
 < 0) {

876 
	`Ârötf
(
°dîr
, 
	`_
("No support for INET6 onÅhis system.\n"));

877 
gŸîr
 = 1;

878 
•p
++;

881 i‡(
	`io˘l
(
fd
, 
SIOGIFINDEX
, &
i‰
) < 0) {

882 
	`≥º‹
("SIOGIFINDEX");

883 
gŸîr
 = 1;

884 
•p
++;

887 
i‰6
.
i‰6_ifödex
 = 
i‰
.
i‰_ifödex
;

888 
i‰6
.
i‰6_¥efixÀn
 = 
¥efix_Àn
;

890 i‡(
	`io˘l
(
fd
, 
SIOCSIFDSTADDR
, &
i‰6
) < 0) {

891 
	`Ârötf
(
°dîr
, "SIOCSIFDSTADDR: %s\n",

892 
	`°ªº‹
(
î∫o
));

893 
gŸîr
 = 1;

895 
•p
++;

901 
	`ß„_°∫˝y
(
ho°
, *
•p
, ( host));

905 i‡(
≠
->
gëmask
) {

906 
≠
->
	`gëmask
(
ho°
, &
ß
, 
NULL
)) {

908 
	`ußge
();

911 i‡(
did√tmask
)

912 
	`ußge
();

914 
gŸîr
 = 
	`£t_√tmask
(
skfd
, &
i‰
, &
ß
);

915 
did√tmask
++;

919 i‡(
≠
->
öput
 =
NULL
) {

920 
	`Ârötf
(
°dîr
, 
	`_
("ifconfig: Cannot setáddress forÅhisÖrotocol family.\n"));

921 
	`exô
(1);

923 i‡(
≠
->
	`öput
(0, 
ho°
, &
ß
) < 0) {

924 
≠
->
	`hîr‹
(
ho°
);

925 
	`Ârötf
(
°dîr
, 
	`_
("ifconfig: `--help' gives usage information.\n"));

926 
	`exô
(1);

928 
	`mem˝y
((*Ë&
i‰
.
i‰_addr
, (*Ë&
ß
, (
sockaddr
));

930 
r
 = 0;

931 
≠
->
af
) {

932 #i‡
HAVE_AFINET


933 
AF_INET
:

934 
fd
 = 
	`gë_sockë_f‹_af
(
AF_INET
);

935 i‡(
fd
 < 0) {

936 
	`Ârötf
(
°dîr
, 
	`_
("No support for INET onÅhis system.\n"));

937 
	`exô
(1);

939 
r
 = 
	`io˘l
(
fd
, 
SIOCSIFADDR
, &
i‰
);

942 #i‡
HAVE_AFECONET


943 
AF_ECONET
:

944 
fd
 = 
	`gë_sockë_f‹_af
(
AF_ECONET
);

945 i‡(
fd
 < 0) {

946 
	`Ârötf
(
°dîr
, 
	`_
("No support for ECONET onÅhis system.\n"));

947 
	`exô
(1);

949 
r
 = 
	`io˘l
(
fd
, 
SIOCSIFADDR
, &
i‰
);

953 
	`Ârötf
(
°dîr
,

954 
	`_
("D⁄'àknow howÅÿ£àaddªs£†f‹ famûy %d.\n"), 
≠
->
af
);

955 
	`exô
(1);

957 i‡(
r
 < 0) {

958 
	`≥º‹
("SIOCSIFADDR");

959 
gŸîr
 = 1;

971 *
±r
;

972 
found_cﬁ⁄
 = 0;

973 
±r
 = 
i‰
.
i‰_«me
; *ptr;Ötr++ )

974 i‡(*
±r
 =':'Ë
found_cﬁ⁄
++;

976 i‡(!(
found_cﬁ⁄
 && *(
±r
 - 1) == '-'))

977 
gŸîr
 |
	`£t_Êag
(
i‰
.
i‰_«me
, (
IFF_UP
 | 
IFF_RUNNING
));

980 
•p
++;

983  (
gŸîr
);

984 
	}
}

986 
	sifcmd
 {

987 
	mÊag
;

988 
	maddr
;

989 *
	mba£
;

990 
	mba£Àn
;

993 
	g£¨chî
[256];

995 
	$£t_ù_usög
(c⁄° *
«me
, 
c
, 
ù
)

997 
i‰eq
 
i‰
;

998 
sockaddr_ö
 
sö
;

1000 
	`ß„_°∫˝y
(
i‰
.
i‰_«me
, 
«me
, 
IFNAMSIZ
);

1001 
	`mem£t
(&
sö
, 0, (
sockaddr
));

1002 
sö
.
sö_Ámûy
 = 
AF_INET
;

1003 
sö
.
sö_addr
.
s_addr
 = 
ù
;

1004 
	`mem˝y
(&
i‰
.
i‰_addr
, &
sö
, (
sockaddr
));

1005 i‡(
	`io˘l
(
skfd
, 
c
, &
i‰
) < 0)

1008 
	}
}

1010 
	$do_ifcmd
(
öãrÁ˚
 *
x
, 
ifcmd
 *
±r
)

1012 *
z
, *
e
;

1013 
sockaddr_ö
 *
sö
;

1014 
i
;

1016 i‡(
	`do_if_„tch
(
x
) < 0)

1018 i‡(
	`°∫cmp
(
x
->
«me
, 
±r
->
ba£
,Öå->
ba£Àn
) != 0)

1020 
z
 = 
	`°rchr
(
x
->
«me
, ':');

1021 i‡(!
z
 || !*z)

1023 
z
++;

1024 
e
 = 
z
; *e;É++)

1025 i‡(*
e
 == '-')

1027 
i
 = 
	`©oi
(
z
);

1028 i‡(
i
 < 0 || i > 255)

1029 
	`ab‹t
();

1030 
£¨chî
[
i
] = 1;

1033 
sö
 = (
sockaddr_ö
 *)&
x
->
d°addr
;

1034 i‡(
sö
->
sö_addr
.
s_addr
 !
±r
->
addr
) {

1038 i‡(
±r
->
Êag
) {

1040 i‡(
	`£t_Êag
(
x
->
«me
, 
IFF_UP
 | 
IFF_RUNNING
) == -1)

1044 i‡(
	`˛r_Êag
(
x
->
«me
, 
IFF_UP
) == -1)

1049 
	}
}

1052 
	$gë_nmbc_∑ª¡
(*
∑ª¡
,

1053 *
nm
, *
bc
)

1055 
öãrÁ˚
 *
i
;

1056 
sockaddr_ö
 *
sö
;

1058 
i
 = 
	`lookup_öãrÁ˚
(
∑ª¡
);

1059 i‡(!
i
)

1061 i‡(
	`do_if_„tch
(
i
) < 0)

1063 
sö
 = (
sockaddr_ö
 *)&
i
->
√tmask
;

1064 
	`mem˝y
(
nm
, &
sö
->
sö_addr
.
s_addr
, ());

1065 
sö
 = (
sockaddr_ö
 *)&
i
->
brﬂdaddr
;

1066 
	`mem˝y
(
bc
, &
sö
->
sö_addr
.
s_addr
, ());

1068 
	}
}

1070 
	$£t_if°©e
(*
∑ª¡
, 
ù
,

1071 
nm
, 
bc
,

1072 
Êag
)

1074 
buf
[
IFNAMSIZ
];

1075 
ifcmd
 
±
;

1076 
i
;

1078 
±
.
ba£
 = 
∑ª¡
;

1079 
±
.
ba£Àn
 = 
	`°æí
(
∑ª¡
);

1080 
±
.
addr
 = 
ù
;

1081 
±
.
Êag
 = flag;

1082 
	`mem£t
(
£¨chî
, 0, (searcher));

1083 
i
 = 
	`f‹_Æl_öãrÁ˚s
(((*)(
öãrÁ˚
 *,*))
do_ifcmd
,

1084 &
±
);

1085 i‡(
i
 == -1)

1087 i‡(
i
 == 1)

1091 
i
 = 0; i < 256; i++)

1092 i‡(
£¨chî
[
i
] == 0)

1095 i‡(
i
 == 256)

1098 i‡(
	`¢¥ötf
(
buf
, 
IFNAMSIZ
, "%s:%d", 
∑ª¡
, 
i
) > IFNAMSIZ)

1100 i‡(
	`£t_ù_usög
(
buf
, 
SIOCSIFADDR
, 
ù
) == -1)

1102 i‡(
	`£t_ù_usög
(
buf
, 
SIOCSIFNETMASK
, 
nm
) == -1)

1104 i‡(
	`£t_ù_usög
(
buf
, 
SIOCSIFBRDADDR
, 
bc
) == -1)

1106 i‡(
	`£t_Êag
(
buf
, 
IFF_BROADCAST
) == -1)

1109 
	}
}

	@net-tools-1.60/include/interface.h

1 
	su£r_√t_devi˚_°©s
 {

2 
	mrx_∑ckës
;

3 
	mtx_∑ckës
;

4 
	mrx_byãs
;

5 
	mtx_byãs
;

6 
	mrx_îr‹s
;

7 
	mtx_îr‹s
;

8 
	mrx_dr›≥d
;

9 
	mtx_dr›≥d
;

10 
	mrx_mu…iˇ°
;

11 
	mrx_com¥es£d
;

12 
	mtx_com¥es£d
;

13 
	mcﬁlisi⁄s
;

16 
	mrx_Àngth_îr‹s
;

17 
	mrx_ovî_îr‹s
;

18 
	mrx_¸c_îr‹s
;

19 
	mrx_‰ame_îr‹s
;

20 
	mrx_fifo_îr‹s
;

21 
	mrx_mis£d_îr‹s
;

23 
	mtx_ab‹ãd_îr‹s
;

24 
	mtx_ˇºõr_îr‹s
;

25 
	mtx_fifo_îr‹s
;

26 
	mtx_hóπbót_îr‹s
;

27 
	mtx_wödow_îr‹s
;

30 
	söãrÁ˚
 {

31 
öãrÁ˚
 *
	m√xt
, *
	m¥ev
;

32 
	m«me
[
IFNAMSIZ
];

33 
	mty≥
;

34 
	mÊags
;

35 
	mmëric
;

36 
	mmtu
;

37 
	mtx_queue_Àn
;

38 
ifm≠
 
	mm≠
;

39 
sockaddr
 
	maddr
;

40 
sockaddr
 
	md°addr
;

41 
sockaddr
 
	mbrﬂdaddr
;

42 
sockaddr
 
	m√tmask
;

43 
sockaddr
 
	mùxaddr_bb
;

44 
sockaddr
 
	mùxaddr_¢
;

45 
sockaddr
 
	mùxaddr_e3
;

46 
sockaddr
 
	mùxaddr_e2
;

47 
sockaddr
 
	mdd∑ddr
;

48 
sockaddr
 
	meˇddr
;

49 
	mhas_ù
;

50 
	mhas_ùx_bb
;

51 
	mhas_ùx_¢
;

52 
	mhas_ùx_e3
;

53 
	mhas_ùx_e2
;

54 
	mhas_ax25
;

55 
	mhas_ddp
;

56 
	mhas_ec⁄ë
;

57 
	mhwaddr
[32];

58 
	m°©i°ics_vÆid
;

59 
u£r_√t_devi˚_°©s
 
	m°©s
;

60 
	mkì∑live
;

61 
	moutfûl
;

64 
if_„tch
(
öãrÁ˚
 *
i„
);

66 
f‹_Æl_öãrÁ˚s
((*)(
öãrÁ˚
 *, *), *);

67 
	`‰ì_öãrÁ˚_li°
();

68 
öãrÁ˚
 *
	`lookup_öãrÁ˚
(*
«me
);

69 
	`if_ªadli°
();

71 
	`do_if_„tch
(
öãrÁ˚
 *
i„
);

72 
	`do_if_¥öt
(
öãrÁ˚
 *
i„
, *
cookõ
);

74 
	`i„_¥öt
(
öãrÁ˚
 *
±r
);

76 
i„_sh‹t
;

78 c⁄° *
if_p‹t_ãxt
[][4];

81 #i‡!
	`deföed
(
SIOCSIFTXQLEN
)

82 
	#SIOCSIFTXQLEN
 0x8943

	)

83 
	#SIOCGIFTXQLEN
 0x8942

	)

86 #i‡!
	`deföed
(
i‰_qÀn
)

88 
	#i‰_qÀn
 
i‰_i‰u
.
i‰u_mtu


	)

91 
	#HAVE_TXQUEUELEN


	)

93 
	#HAVE_DYNAMIC


	)

94 #i‚de‡
IFF_DYNAMIC


95 
	#IFF_DYNAMIC
 0x8000

	)

	@net-tools-1.60/include/ipx.h

4 #i‚de‡
_IPX_H_


5 
	#_IPX_H_


	)

7 
	#IPX_NODE_LEN
 6

	)

8 
	#IPX_MTU
 576

	)

10 
	ssockaddr_ùx
 {

11 #i‡
LINUX_VERSION_CODE
 > 131328

12 
ß_Ámûy_t
 
	msùx_Ámûy
;

14 
	msùx_Ámûy
;

16 
	msùx_p‹t
;

17 
	msùx_√tw‹k
;

18 
	msùx_node
[
IPX_NODE_LEN
];

19 
	msùx_ty≥
;

20 
	msùx_zîo
;

23 
	#IPX_FRAME_NONE
 0

	)

24 
	#IPX_FRAME_SNAP
 1

	)

25 
	#IPX_FRAME_8022
 2

	)

26 
	#IPX_FRAME_ETHERII
 3

	)

27 
	#IPX_FRAME_8023
 4

	)

28 
	#IPX_FRAME_TR_8022
 5

	)

	@net-tools-1.60/include/mii.h

9 #i‚de‡
_LINUX_MII_H


10 
	#_LINUX_MII_H


	)

13 #i‚de‡
SIOCGMIIPHY


14 
	#SIOCGMIIPHY
 (
SIOCDEVPRIVATE
Ë

	)

15 
	#SIOCGMIIREG
 (
SIOCDEVPRIVATE
+1Ë

	)

16 
	#SIOCSMIIREG
 (
SIOCDEVPRIVATE
+2Ë

	)

17 
	#SIOCGPARAMS
 (
SIOCDEVPRIVATE
+3Ë

	)

18 
	#SIOCSPARAMS
 (
SIOCDEVPRIVATE
+4Ë

	)

21 
	~<löux/ty≥s.h
>

24 
	smii_d©a
 {

25 
__u16
 
	mphy_id
;

26 
__u16
 
	mªg_num
;

27 
__u16
 
	mvÆ_ö
;

28 
__u16
 
	mvÆ_out
;

32 
	#MII_BMCR
 0x00

	)

33 
	#MII_BMCR_RESET
 0x8000

	)

34 
	#MII_BMCR_LOOPBACK
 0x4000

	)

35 
	#MII_BMCR_100MBIT
 0x2000

	)

36 
	#MII_BMCR_AN_ENA
 0x1000

	)

37 
	#MII_BMCR_ISOLATE
 0x0400

	)

38 
	#MII_BMCR_RESTART
 0x0200

	)

39 
	#MII_BMCR_DUPLEX
 0x0100

	)

40 
	#MII_BMCR_COLTEST
 0x0080

	)

43 
	#MII_BMSR
 0x01

	)

44 
	#MII_BMSR_CAP_MASK
 0xf800

	)

45 
	#MII_BMSR_100BASET4
 0x8000

	)

46 
	#MII_BMSR_100BASETX_FD
 0x4000

	)

47 
	#MII_BMSR_100BASETX_HD
 0x2000

	)

48 
	#MII_BMSR_10BASET_FD
 0x1000

	)

49 
	#MII_BMSR_10BASET_HD
 0x0800

	)

50 
	#MII_BMSR_NO_PREAMBLE
 0x0040

	)

51 
	#MII_BMSR_AN_COMPLETE
 0x0020

	)

52 
	#MII_BMSR_REMOTE_FAULT
 0x0010

	)

53 
	#MII_BMSR_AN_ABLE
 0x0008

	)

54 
	#MII_BMSR_LINK_VALID
 0x0004

	)

55 
	#MII_BMSR_JABBER
 0x0002

	)

56 
	#MII_BMSR_EXT_CAP
 0x0001

	)

58 
	#MII_PHY_ID1
 0x02

	)

59 
	#MII_PHY_ID2
 0x03

	)

62 
	#MII_ANAR
 0x04

	)

64 
	#MII_ANLPAR
 0x05

	)

65 
	#MII_AN_NEXT_PAGE
 0x8000

	)

66 
	#MII_AN_ACK
 0x4000

	)

67 
	#MII_AN_REMOTE_FAULT
 0x2000

	)

68 
	#MII_AN_ABILITY_MASK
 0x07e0

	)

69 
	#MII_AN_FLOW_CONTROL
 0x0400

	)

70 
	#MII_AN_100BASET4
 0x0200

	)

71 
	#MII_AN_100BASETX_FD
 0x0100

	)

72 
	#MII_AN_100BASETX_HD
 0x0080

	)

73 
	#MII_AN_10BASET_FD
 0x0040

	)

74 
	#MII_AN_10BASET_HD
 0x0020

	)

75 
	#MII_AN_PROT_MASK
 0x001f

	)

76 
	#MII_AN_PROT_802_3
 0x0001

	)

79 
	#MII_ANER
 0x06

	)

80 
	#MII_ANER_MULT_FAULT
 0x0010

	)

81 
	#MII_ANER_LP_NP_ABLE
 0x0008

	)

82 
	#MII_ANER_NP_ABLE
 0x0004

	)

83 
	#MII_ANER_PAGE_RX
 0x0002

	)

84 
	#MII_ANER_LP_AN_ABLE
 0x0001

	)

	@net-tools-1.60/include/sockets.h

1 
skfd
, 
ùx_sock
, 
ax25_sock
, 
ro£_sock
, 
x25_sock
, 
öë_sock
, 
öë6_sock
,

2 
ddp_sock
, 
ec_sock
;

4 
sockës_›í
(
Ámûy
);

	@net-tools-1.60/include/util-ank.h

1 #i‚de‡
__UTILS_H__


2 
	#__UTILS_H__
 1

	)

4 
	~<asm/ty≥s.h
>

6 
¥e„ºed_Ámûy
;

7 
show_°©s
;

8 
show_dëaûs
;

9 
show_øw
;

10 
ªsﬁve_ho°s
;

12 #i‚de‡
IPPROTO_ESP


13 
	#IPPROTO_ESP
 50

	)

15 #i‚de‡
IPPROTO_AH


16 
	#IPPROTO_AH
 51

	)

19 
	#SPRINT_BSIZE
 64

	)

20 
	#SPRINT_BUF
(
x
Ëx[
SPRINT_BSIZE
]

	)

23 
	#NEXT_ARG
() \

24 
¨gv
++; \

25 i‡(--
¨gc
 <= 0) \

26 
	`ußge
();

	)

30 
__u8
 
	mÁmûy
;

31 
__u8
 
	mbyãÀn
;

32 
__s16
 
	mbôÀn
;

33 
__u32
 
	md©a
[4];

34 } 
	töë_¥efix
;

36 
__u32
 
gë_addr32
(*
«me
);

37 
gë_addr_1
(
öë_¥efix
 *
d°
, *
¨g
, 
Ámûy
);

38 
gë_¥efix_1
(
öë_¥efix
 *
d°
, *
¨g
, 
Ámûy
);

39 
gë_addr
(
öë_¥efix
 *
d°
, *
¨g
, 
Ámûy
);

40 
gë_¥efix
(
öë_¥efix
 *
d°
, *
¨g
, 
Ámûy
);

42 
sˇn_numbî
(*
¨g
, *
vÆ
);

44 
gë_öãgî
(*
vÆ
, *
¨g
, 
ba£
);

45 
gë_unsig√d
(*
vÆ
, *
¨g
, 
ba£
);

46 
	#gë_byã
 
gë_u8


	)

47 
	#gë_ush‹t
 
gë_u16


	)

48 
	#gë_sh‹t
 
gë_s16


	)

49 
gë_u32
(
__u32
 *
vÆ
, *
¨g
, 
ba£
);

50 
gë_u16
(
__u16
 *
vÆ
, *
¨g
, 
ba£
);

51 
gë_s16
(
__s16
 *
vÆ
, *
¨g
, 
ba£
);

52 
gë_u8
(
__u8
 *
vÆ
, *
¨g
, 
ba£
);

53 
gë_s8
(
__s8
 *
vÆ
, *
¨g
, 
ba£
);

55 
gë_tc_˛assid
(
__u32
 *
h
, *
°r
);

56 
¥öt_tc_˛assid
(*
buf
, 
Àn
, 
__u32
 
h
);

57 * 
•röt_tc_˛assid
(
__u32
 
h
, *
buf
);

60 
	$öv¨g
(*Ë
	`__©åibuã__
((
n‹ëu∫
));

61 
	`m©ches
(*
¨g
, *
∑âîn
);

62 
	`öë_addr_m©ch
(
öë_¥efix
 *
a
, i√t_¥efix *
b
, 
bôs
);

64 
	`ùaddr_li°
(
¨gc
, **
¨gv
);

65 
	`ùrouã_m⁄ô‹
(
¨gc
, **
¨gv
);

66 
	`do_ùaddr
(
¨gc
, **
¨gv
);

67 
	`do_ùrouã
(
¨gc
, **
¨gv
);

68 
	`do_ùruÀ
(
¨gc
, **
¨gv
);

69 
	`do_ù√igh
(
¨gc
, **
¨gv
);

70 
	`do_ùtu¬ñ
(
¨gc
, **
¨gv
);

71 
	`do_ùlök
(
¨gc
, **
¨gv
);

72 
	`do_ùm⁄ô‹
(
¨gc
, **
¨gv
);

73 
	`do_mu…üddr
(
¨gc
, **
¨gv
);

74 
	`do_qdisc
(
¨gc
, **
¨gv
);

75 
	`do_˛ass
(
¨gc
, **
¨gv
);

76 
	`do_fûãr
(
¨gc
, **
¨gv
);

78 c⁄° *
	`f‹m©_ho°
(
af
, *
addr
, 
__u8
 *
abuf
, 
Æí
);

	@net-tools-1.60/intl.h

3 #i‡
I18N


4 
	~<loˇÀ.h
>

5 #unde‡
__OPTIMIZE__


6 
	~<liböé.h
>

7 
	#_
(
Såög
Ë
	`gëãxt
((Såög))

	)

8 
	#N_
(
Såög
Ë(Såög)

	)

10 
	#_
(
Såög
Ë(Såög)

	)

11 
	#N_
(
Såög
Ë(Såög)

	)

	@net-tools-1.60/ipmaddr.c

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<uni°d.h
>

19 
	~<sy¶og.h
>

20 
	~<f˙é.h
>

21 
	~<sys/io˘l.h
>

22 
	~<sys/sockë.h
>

23 
	~<√töë/ö.h
>

24 
	~<¨∑/öë.h
>

25 
	~<°rög.h
>

27 #i‡
deföed
(
__GLIBC__
Ë&& (__GLIBC__ > 2 || (__GLIBC__ =2 && 
__GLIBC_MINOR__
 >= 1))

28 
	~<√t/if.h
>

30 
	~<löux/if.h
>

33 
	~"c⁄fig.h
"

34 
	~"öé.h
"

35 
	~"utû-™k.h
"

36 
	~"√t-suµ‹t.h
"

37 
	~"vîsi⁄.h
"

38 
	~"∑th«mes.h
"

40 
	gfûãr_dev
[16];

41 
	gfûãr_Ámûy
;

44 
	#NEWADDR
 1

	)

45 
	#DELADDR
 2

	)

47 *
	gRñó£
 = 
RELEASE
,

48 *
	gVîsi⁄
 = "ipmaddr 1.1",

49 *
	gSig«tuª
 = "Alexey Kuznetsov, <kuznet@ms2.inr.ac.ru>";

51 
	$vîsi⁄
()

53 
	`¥ötf
("%s\n%s\n%s\n", 
Rñó£
, 
Vîsi⁄
, 
Sig«tuª
);

54 
	`exô
(
E_VERSION
);

55 
	}
}

57 
	$ußge
(Ë
	`__©åibuã__
((
n‹ëu∫
));

59 
	$ußge
()

61 
	`Ârötf
(
°dîr
, 
	`_
("Usage: ipmaddr [ádd | del ] MULTIADDR dev STRING\n"));

62 
	`Ârötf
(
°dîr
, 
	`_
(" ipmaddr show [ dev STRING ] [ ipv4 | ipv6 |Üink |áll ]\n"));

63 
	`Ârötf
(
°dîr
, 
	`_
(" ipmaddr -V | -version\n"));

64 
	`exô
(-1);

65 
	}
}

67 
	$¥öt_Œa
(
FILE
 *
Â
, 
Àn
, *
addr
)

69 
i
;

70 
i
=0; i<
Àn
; i++) {

71 i‡(
i
==0)

72 
	`Ârötf
(
Â
, "%02x", 
addr
[
i
]);

74 
	`Ârötf
(
Â
, ":%02x", 
addr
[
i
]);

76 
	}
}

78 
	$∑r£_Œa
(*
°r
, *
addr
)

80 
Àn
=0;

82 *
°r
) {

83 
tmp
;

84 i‡(
°r
[0] == ':' || str[0] == '.') {

85 
°r
++;

88 i‡(
°r
[1] == 0)

90 i‡(
	`ssˇnf
(
°r
, "%02x", &
tmp
) != 1)

92 
addr
[
Àn
] = 
tmp
;

93 
Àn
++;

94 
°r
 += 2;

96  
Àn
;

97 
	}
}

99 
	$∑r£_hex
(*
°r
, *
addr
)

101 
Àn
=0;

103 *
°r
) {

104 
tmp
;

105 i‡(
°r
[1] == 0)

107 i‡(
	`ssˇnf
(
°r
, "%02x", &
tmp
) != 1)

109 
addr
[
Àn
] = 
tmp
;

110 
Àn
++;

111 
°r
 += 2;

113  
Àn
;

114 
	}
}

116 
	sma_öfo


118 
ma_öfo
 *
	m√xt
;

119 
	mödex
;

120 
	mu£rs
;

121 *
	m„©uªs
;

122 
	m«me
[
IFNAMSIZ
];

123 
öë_¥efix
 
	maddr
;

126 
	$maddr_ös
(
ma_öfo
 **
l°
, ma_öfÿ*
m
)

128 
ma_öfo
 *
mp
;

130 ; (
mp
=*
l°
Ë!
NULL
;Ü° = &mp->
√xt
) {

131 i‡(
mp
->
ödex
 > 
m
->index)

134 
m
->
√xt
 = *
l°
;

135 *
l°
 = 
m
;

136 
	}
}

138 
	$ªad_dev_mˇ°
(
ma_öfo
 **
ªsu…_p
)

140 
buf
[256];

141 
FILE
 *
Â
 = 
	`f›í
(
_PATH_PROCNET_DEV_MCAST
, "r");

143 i‡(!
Â
)

146 
	`fgës
(
buf
, (buf), 
Â
)) {

147 
hexa
[256];

148 
ma_öfo
 
m
;

149 
Àn
;

150 
°
;

152 
	`mem£t
(&
m
, 0, (m));

153 
	`ssˇnf
(
buf
, "%d%s%d%d%s", &
m
.
ödex
, m.
«me
, &m.
u£rs
, &
°
,

154 
hexa
);

155 i‡(
fûãr_dev
[0] && 
	`°rcmp
(fûãr_dev, 
m
.
«me
))

158 
m
.
addr
.
Ámûy
 = 
AF_PACKET
;

160 
Àn
 = 
	`∑r£_hex
(
hexa
, (*)&
m
.
addr
.
d©a
);

161 i‡(
Àn
 >= 0) {

162 
ma_öfo
 *
ma
 = 
	`mÆloc
((
m
));

164 
	`mem˝y
(
ma
, &
m
, (m));

165 
ma
->
addr
.
byãÀn
 = 
Àn
;

166 
ma
->
addr
.
bôÀn
 = 
Àn
<<3;

167 i‡(
°
)

168 
ma
->
„©uªs
 = "static";

169 
	`maddr_ös
(
ªsu…_p
, 
ma
);

172 
	`f˛o£
(
Â
);

173 
	}
}

175 
	$ªad_igmp
(
ma_öfo
 **
ªsu…_p
)

177 
ma_öfo
 
m
;

178 
buf
[256];

179 
FILE
 *
Â
 = 
	`f›í
(
_PATH_PROCNET_IGMP
, "r");

181 i‡(!
Â
)

183 
	`mem£t
(&
m
, 0, (m));

184 
	`fgës
(
buf
, (buf), 
Â
);

186 
m
.
addr
.
Ámûy
 = 
AF_INET
;

187 
m
.
addr
.
bôÀn
 = 32;

188 
m
.
addr
.
byãÀn
 = 4;

190 
	`fgës
(
buf
, (buf), 
Â
)) {

191 
ma_öfo
 *
ma
 = 
	`mÆloc
((
m
));

193 i‡(
buf
[0] != '\t') {

194 
	`ssˇnf
(
buf
, "%d%s", &
m
.
ödex
, m.
«me
);

198 i‡(
fûãr_dev
[0] && 
	`°rcmp
(fûãr_dev, 
m
.
«me
))

201 
	`ssˇnf
(
buf
, "%08x%d", (
__u32
*)&
m
.
addr
.
d©a
, &m.
u£rs
);

203 
ma
 = 
	`mÆloc
((
m
));

204 
	`mem˝y
(
ma
, &
m
, (m));

205 
	`maddr_ös
(
ªsu…_p
, 
ma
);

207 
	`f˛o£
(
Â
);

208 
	}
}

211 
	$ªad_igmp6
(
ma_öfo
 **
ªsu…_p
)

213 
buf
[256];

214 
FILE
 *
Â
 = 
	`f›í
(
_PATH_PROCNET_IGMP6
, "r");

216 i‡(!
Â
)

219 
	`fgës
(
buf
, (buf), 
Â
)) {

220 
hexa
[256];

221 
ma_öfo
 
m
;

222 
Àn
;

224 
	`mem£t
(&
m
, 0, (m));

225 
	`ssˇnf
(
buf
, "%d%s%s%d", &
m
.
ödex
, m.
«me
, 
hexa
, &m.
u£rs
);

227 i‡(
fûãr_dev
[0] && 
	`°rcmp
(fûãr_dev, 
m
.
«me
))

230 
m
.
addr
.
Ámûy
 = 
AF_INET6
;

232 
Àn
 = 
	`∑r£_hex
(
hexa
, (*)&
m
.
addr
.
d©a
);

233 i‡(
Àn
 >= 0) {

234 
ma_öfo
 *
ma
 = 
	`mÆloc
((
m
));

236 
	`mem˝y
(
ma
, &
m
, (m));

238 
ma
->
addr
.
byãÀn
 = 
Àn
;

239 
ma
->
addr
.
bôÀn
 = 
Àn
<<3;

240 
	`maddr_ös
(
ªsu…_p
, 
ma
);

243 
	`f˛o£
(
Â
);

244 
	}
}

246 
	$¥öt_maddr
(
FILE
 *
Â
, 
ma_öfo
 *
li°
)

248 
	`Ârötf
(
Â
, "\t");

250 i‡(
li°
->
addr
.
Ámûy
 =
AF_PACKET
) {

251 
	`Ârötf
(
Â
, "link ");

252 
	`¥öt_Œa
(
Â
, 
li°
->
addr
.
byãÀn
, (*Ói°->addr.
d©a
);

254 
abuf
[256];

255 
li°
->
addr
.
Ámûy
) {

256 
AF_INET
:

257 
	`Ârötf
(
Â
, "inet ");

259 
AF_INET6
:

260 
	`Ârötf
(
Â
, "inet6 ");

263 
	`Ârötf
(
Â
, 
	`_
("Ámûy %d "), 
li°
->
addr
.
Ámûy
);

266 i‡(
	`f‹m©_ho°
(
li°
->
addr
.
Ámûy
,Üi°->addr.
d©a
, 
abuf
, (abuf)))

267 
	`Ârötf
(
Â
, "%s", 
abuf
);

269 
	`Ârötf
(
Â
, "?");

271 i‡(
li°
->
u£rs
 != 1)

272 
	`Ârötf
(
Â
, 
	`_
(" u£r†%d"), 
li°
->
u£rs
);

273 i‡(
li°
->
„©uªs
)

274 
	`Ârötf
(
Â
, " %s", 
li°
->
„©uªs
);

275 
	`Ârötf
(
Â
, "\n");

276 
	}
}

278 
	$¥öt_mli°
(
FILE
 *
Â
, 
ma_öfo
 *
li°
)

280 
cur_ödex
 = 0;

282 ; 
li°
;Üi° =Üi°->
√xt
) {

283 i‡(
cur_ödex
 !
li°
->
ödex
) {

284 
cur_ödex
 = 
li°
->
ödex
;

285 
	`Ârötf
(
Â
, "%d:\t%s\n", 
cur_ödex
, 
li°
->
«me
);

287 
	`¥öt_maddr
(
Â
, 
li°
);

289 
	}
}

291 
	$mu…üddr_li°
(
¨gc
, **
¨gv
)

293 
ma_öfo
 *
li°
 = 
NULL
;

295 
¨gc
 > 0) {

296 i‡(
	`°rcmp
(*
¨gv
, "dev") == 0) {

297 
	`NEXT_ARG
();

298 i‡(
fûãr_dev
[0])

299 
	`ußge
();

300 
	`°r˝y
(
fûãr_dev
, *
¨gv
);

301 } i‡(
	`°rcmp
(*
¨gv
, "all") == 0) {

302 
fûãr_Ámûy
 = 
AF_UNSPEC
;

303 } i‡(
	`°rcmp
(*
¨gv
, "ipv4") == 0) {

304 
fûãr_Ámûy
 = 
AF_INET
;

305 } i‡(
	`°rcmp
(*
¨gv
, "ipv6") == 0) {

306 
fûãr_Ámûy
 = 
AF_INET6
;

307 } i‡(
	`°rcmp
(*
¨gv
, "link") == 0) {

308 
fûãr_Ámûy
 = 
AF_PACKET
;

310 i‡(
fûãr_dev
[0])

311 
	`ußge
();

312 
	`°r˝y
(
fûãr_dev
, *
¨gv
);

314 
¨gv
++; 
¨gc
--;

317 i‡(!
fûãr_Ámûy
 || fûãr_Ámûy =
AF_PACKET
)

318 
	`ªad_dev_mˇ°
(&
li°
);

319 i‡(!
fûãr_Ámûy
 || fûãr_Ámûy =
AF_INET
)

320 
	`ªad_igmp
(&
li°
);

321 i‡(!
fûãr_Ámûy
 || fûãr_Ámûy =
AF_INET6
)

322 
	`ªad_igmp6
(&
li°
);

323 
	`¥öt_mli°
(
°dout
, 
li°
);

325 
	}
}

327 
	$mu…üddr_modify
(
cmd
, 
¨gc
, **
¨gv
)

329 
i‰eq
 
i‰
;

330 
fd
;

332 
	`mem£t
(&
i‰
, 0, (ifr));

334 i‡(
cmd
 =
NEWADDR
)

335 
cmd
 = 
SIOCADDMULTI
;

337 
cmd
 = 
SIOCDELMULTI
;

339 
¨gc
 > 0) {

340 i‡(
	`°rcmp
(*
¨gv
, "dev") == 0) {

341 
	`NEXT_ARG
();

342 i‡(
i‰
.
i‰_«me
[0])

343 
	`ußge
();

344 
	`°∫˝y
(
i‰
.
i‰_«me
, *
¨gv
, 
IFNAMSIZ
);

346 i‡(
i‰
.
i‰_hwaddr
.
ß_d©a
[0])

347 
	`ußge
();

348 i‡(
	`∑r£_Œa
(*
¨gv
, 
i‰
.
i‰_hwaddr
.
ß_d©a
) < 0)

349 
	`ußge
();

351 
¨gc
--; 
¨gv
++;

353 i‡(
i‰
.
i‰_«me
[0] == 0)

354 
	`ußge
();

356 
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

357 i‡(
fd
 < 0) {

358 
	`≥º‹
(
	`_
("Cannot create socket"));

359 
	`exô
(1);

361 i‡(
	`io˘l
(
fd
, 
cmd
, (*)&
i‰
) != 0) {

362 
	`≥º‹
("ioctl");

363 
	`exô
(1);

365 
	`˛o£
(
fd
);

367 
	`exô
(0);

368 
	}
}

371 
	$do_mu…üddr
(
¨gc
, **
¨gv
)

373 i‡(
¨gc
 < 1)

374  
	`mu…üddr_li°
(0, 
NULL
);

375 i‡(
	`m©ches
(*
¨gv
, "add") == 0)

376  
	`mu…üddr_modify
(
NEWADDR
, 
¨gc
-1, 
¨gv
+1);

377 i‡(
	`m©ches
(*
¨gv
, "delete") == 0)

378  
	`mu…üddr_modify
(
DELADDR
, 
¨gc
-1, 
¨gv
+1);

379 i‡(
	`m©ches
(*
¨gv
, "list") == 0 || matches(*argv, "show") == 0

380 || 
	`m©ches
(*
¨gv
, "lst") == 0)

381  
	`mu…üddr_li°
(
¨gc
-1, 
¨gv
+1);

382 
	`ußge
();

383 
	}
}

385 
	g¥e„ºed_Ámûy
 = 
AF_UNSPEC
;

386 
	gshow_°©s
 = 0;

387 
	gªsﬁve_ho°s
 = 0;

389 
	$maö
(
¨gc
, **
¨gv
)

391 *
ba£«me
;

393 #i‡
I18N


394 
	`£éoˇÀ
 (
LC_ALL
, "");

395 
	`bödãxtdomaö
("net-tools", "/usr/share/locale");

396 
	`ãxtdomaö
("net-tools");

399 
ba£«me
 = 
	`°ºchr
(
¨gv
[0], '/');

400 i‡(
ba£«me
 =
NULL
)

401 
ba£«me
 = 
¨gv
[0];

403 
ba£«me
++;

405 
¨gc
 > 1) {

406 i‡(
¨gv
[1][0] != '-')

408 i‡(
	`m©ches
(
¨gv
[1], "-family") == 0) {

409 
¨gc
--;

410 
¨gv
++;

411 i‡(
¨gc
 <= 1)

412 
	`ußge
();

413 i‡(
	`°rcmp
(
¨gv
[1], "inet") == 0)

414 
¥e„ºed_Ámûy
 = 
AF_INET
;

415 i‡(
	`°rcmp
(
¨gv
[1], "inet6") == 0)

416 
¥e„ºed_Ámûy
 = 
AF_INET6
;

418 
	`ußge
();

419 } i‡(
	`m©ches
(
¨gv
[1], "-stats") == 0 ||

420 
	`m©ches
(
¨gv
[1], "-statistics") == 0) {

421 ++
show_°©s
;

422 } i‡(
	`m©ches
(
¨gv
[1], "-resolve") == 0) {

423 ++
ªsﬁve_ho°s
;

424 } i‡((
	`m©ches
(
¨gv
[1], "-V") == 0) || matches(argv[1], "--version") == 0) {

425 
	`vîsi⁄
();

427 
	`ußge
();

428 
¨gc
--; 
¨gv
++;

431  
	`do_mu…üddr
(
¨gc
-1, 
¨gv
+1);

432 
	}
}

	@net-tools-1.60/iptunnel.c

20 
	~<°dio.h
>

21 
	~<°dlib.h
>

22 
	~<°rög.h
>

23 
	~<uni°d.h
>

24 
	~<sy¶og.h
>

25 
	~<f˙é.h
>

26 
	~<sys/sockë.h
>

27 
	~<sys/io˘l.h
>

28 
	~<√töë/ö.h
>

29 
	~<√töë/ù.h
>

30 
	~<¨∑/öë.h
>

31 #i‡
deföed
(
__GLIBC__
Ë&& (__GLIBC__ > 2 || (__GLIBC__ =2 && 
__GLIBC_MINOR__
 >= 1))

32 
	~<√t/if.h
>

33 
	~<√t/if_¨p.h
>

35 
	~<löux/if.h
>

36 
	~<löux/if_¨p.h
>

38 
	~<löux/ty≥s.h
>

39 
	~<löux/if_tu¬ñ.h
>

41 
	~"c⁄fig.h
"

42 
	~"öé.h
"

43 
	~"√t-suµ‹t.h
"

44 
	~"vîsi⁄.h
"

45 
	~"utû.h
"

47 #unde‡
GRE_CSUM


48 
	#GRE_CSUM
 
	`ht⁄s
(0x8000)

	)

49 #unde‡
GRE_ROUTING


50 
	#GRE_ROUTING
 
	`ht⁄s
(0x4000)

	)

51 #unde‡
GRE_KEY


52 
	#GRE_KEY
 
	`ht⁄s
(0x2000)

	)

53 #unde‡
GRE_SEQ


54 
	#GRE_SEQ
 
	`ht⁄s
(0x1000)

	)

55 #unde‡
GRE_STRICT


56 
	#GRE_STRICT
 
	`ht⁄s
(0x0800)

	)

57 #unde‡
GRE_REC


58 
	#GRE_REC
 
	`ht⁄s
(0x0700)

	)

59 #unde‡
GRE_FLAGS


60 
	#GRE_FLAGS
 
	`ht⁄s
(0x00F8)

	)

61 #unde‡
GRE_VERSION


62 
	#GRE_VERSION
 
	`ht⁄s
(0x0007)

	)

65 #i‡
__GLIBC__
 =2 && 
__GLIBC_MINOR__
 == 0

66 
	#IPPROTO_GRE
 47

	)

69 
	~"utû-™k.h
"

71 *
	gRñó£
 = 
RELEASE
,

72 *
	gVîsi⁄
 = "iptunnel 1.01",

73 *
	gSig«tuª
 = "Alexey Kuznetsov, <kuznet@ms2.inr.ac.ru>";

75 
	$vîsi⁄
()

77 
	`¥ötf
("%s\n%s\n%s\n", 
Rñó£
, 
Vîsi⁄
, 
Sig«tuª
);

78 
	`exô
(
E_VERSION
);

79 
	}
}

81 
	$ußge
(Ë
	`__©åibuã__
((
n‹ëu∫
));

83 
	$ußge
()

85 
	`Ârötf
(
°dîr
, 
	`_
("Usage: iptunnel {ádd | change | del | show } [ NAME ]\n"));

86 
	`Ârötf
(
°dîr
, 
	`_
(" [ mode { ipip | gre | sit } ] [Ñemote ADDR ] [Üocal ADDR ]\n"));

87 
	`Ârötf
(
°dîr
, 
	`_
(" [ [i|o]seq ] [ [i|o]key KEY ] [ [i|o]csum ]\n"));

88 
	`Ârötf
(
°dîr
, 
	`_
(" [Åtl TTL ] [Åos TOS ] [Çopmtudisc ] [ dev PHYS_DEV ]\n"));

89 
	`Ârötf
(
°dîr
, 
	`_
(" iptunnel -V | --version\n\n"));

90 
	`Ârötf
(
°dîr
, 
	`_
("Where: NAME := STRING\n"));

91 
	`Ârötf
(
°dîr
, 
	`_
(" ADDR := { IP_ADDRESS |ány }\n"));

92 
	`Ârötf
(
°dîr
, 
	`_
(" TOS := { NUMBER | inherit }\n"));

93 
	`Ârötf
(
°dîr
, 
	`_
(" TTL := { 1..255 | inherit }\n"));

94 
	`Ârötf
(
°dîr
, 
	`_
(" KEY := { DOTTED_QUAD | NUMBER }\n"));

95 
	`exô
(-1);

96 
	}
}

98 
	$do_io˘l_gë_ifödex
(*
dev
)

100 
i‰eq
 
i‰
;

101 
fd
;

102 
îr
;

104 
	`°r˝y
(
i‰
.
i‰_«me
, 
dev
);

105 
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

106 
îr
 = 
	`io˘l
(
fd
, 
SIOCGIFINDEX
, &
i‰
);

107 i‡(
îr
) {

108 
	`≥º‹
("ioctl");

111 
	`˛o£
(
fd
);

112  
i‰
.
i‰_ifödex
;

113 
	}
}

115 
	$do_io˘l_gë_i·y≥
(*
dev
)

117 
i‰eq
 
i‰
;

118 
fd
;

119 
îr
;

121 
	`°r˝y
(
i‰
.
i‰_«me
, 
dev
);

122 
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

123 
îr
 = 
	`io˘l
(
fd
, 
SIOCGIFHWADDR
, &
i‰
);

124 i‡(
îr
) {

125 
	`≥º‹
("ioctl");

128 
	`˛o£
(
fd
);

129  
i‰
.
i‰_addr
.
ß_Ámûy
;

130 
	}
}

133 * 
	$do_io˘l_gë_i‚ame
(
idx
)

135 
i‰eq
 
i‰
;

136 
fd
;

137 
îr
;

139 
i‰
.
i‰_ifödex
 = 
idx
;

140 
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

141 
îr
 = 
	`io˘l
(
fd
, 
SIOCGIFNAME
, &
i‰
);

142 i‡(
îr
) {

143 
	`≥º‹
("ioctl");

144  
NULL
;

146 
	`˛o£
(
fd
);

147  
i‰
.
i‰_«me
;

148 
	}
}

152 
	$do_gë_io˘l
(*
ba£dev
, 
ù_tu¬ñ_∑rm
 *
p
)

154 
i‰eq
 
i‰
;

155 
fd
;

156 
îr
;

158 
	`°r˝y
(
i‰
.
i‰_«me
, 
ba£dev
);

159 
i‰
.
i‰_i‰u
.
i‰u_d©a
 = (*)
p
;

160 
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

161 
îr
 = 
	`io˘l
(
fd
, 
SIOCGETTUNNEL
, &
i‰
);

162 i‡(
îr
)

163 
	`≥º‹
("ioctl");

164 
	`˛o£
(
fd
);

165  
îr
;

166 
	}
}

168 
	$do_add_io˘l
(
cmd
, *
ba£dev
, 
ù_tu¬ñ_∑rm
 *
p
)

170 
i‰eq
 
i‰
;

171 
fd
;

172 
îr
;

174 
	`°r˝y
(
i‰
.
i‰_«me
, 
ba£dev
);

175 
i‰
.
i‰_i‰u
.
i‰u_d©a
 = (*)
p
;

176 
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

177 
îr
 = 
	`io˘l
(
fd
, 
cmd
, &
i‰
);

178 i‡(
îr
)

179 
	`≥º‹
("ioctl");

180 
	`˛o£
(
fd
);

181  
îr
;

182 
	}
}

184 
	$do_dñ_io˘l
(*
ba£dev
, 
ù_tu¬ñ_∑rm
 *
p
)

186 
i‰eq
 
i‰
;

187 
fd
;

188 
îr
;

190 
	`°r˝y
(
i‰
.
i‰_«me
, 
ba£dev
);

191 
i‰
.
i‰_i‰u
.
i‰u_d©a
 = (*)
p
;

192 
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

193 
îr
 = 
	`io˘l
(
fd
, 
SIOCDELTUNNEL
, &
i‰
);

194 i‡(
îr
)

195 
	`≥º‹
("ioctl");

196 
	`˛o£
(
fd
);

197  
îr
;

198 
	}
}

200 
	$∑r£_¨gs
(
¨gc
, **
¨gv
, 
ù_tu¬ñ_∑rm
 *
p
)

202 
medium
[
IFNAMSIZ
];

204 
	`mem£t
(
p
, 0, (*p));

205 
	`mem£t
(&
medium
, 0, (medium));

207 
p
->
ùh
.
vîsi⁄
 = 4;

208 
p
->
ùh
.
ihl
 = 5;

209 #i‚de‡
IP_DF


210 
	#IP_DF
 0x4000

	)

212 
p
->
ùh
.
‰ag_off
 = 
	`ht⁄s
(
IP_DF
);

214 
¨gc
 > 0) {

215 i‡(
	`°rcmp
(*
¨gv
, "mode") == 0) {

216 
	`NEXT_ARG
();

217 i‡(
	`°rcmp
(*
¨gv
, "ipip") == 0) {

218 i‡(
p
->
ùh
.
¥Ÿocﬁ
)

219 
	`ußge
();

220 
p
->
ùh
.
¥Ÿocﬁ
 = 
IPPROTO_IPIP
;

221 } i‡(
	`°rcmp
(*
¨gv
, "gre") == 0) {

222 i‡(
p
->
ùh
.
¥Ÿocﬁ
)

223 
	`ußge
();

224 
p
->
ùh
.
¥Ÿocﬁ
 = 
IPPROTO_GRE
;

225 } i‡(
	`°rcmp
(*
¨gv
, "sit") == 0) {

226 i‡(
p
->
ùh
.
¥Ÿocﬁ
)

227 
	`ußge
();

228 
p
->
ùh
.
¥Ÿocﬁ
 = 
IPPROTO_IPV6
;

230 
	`ußge
();

231 } i‡(
	`°rcmp
(*
¨gv
, "key") == 0) {

232 
uvÆ
;

233 
	`NEXT_ARG
();

234 
p
->
i_Êags
 |
GRE_KEY
;

235 
p
->
o_Êags
 |
GRE_KEY
;

236 i‡(
	`°rchr
(*
¨gv
, '.'))

237 
p
->
i_key
 =Ö->
o_key
 = 
	`gë_addr32
(*
¨gv
);

239 i‡(
	`sˇn_numbî
(*
¨gv
, &
uvÆ
)<0)

240 
	`ußge
();

241 
p
->
i_key
 =Ö->
o_key
 = 
	`ht⁄l
(
uvÆ
);

243 } i‡(
	`°rcmp
(*
¨gv
, "ikey") == 0) {

244 
uvÆ
;

245 
	`NEXT_ARG
();

246 
p
->
i_Êags
 |
GRE_KEY
;

247 i‡(
	`°rchr
(*
¨gv
, '.'))

248 
p
->
o_key
 = 
	`gë_addr32
(*
¨gv
);

250 i‡(
	`sˇn_numbî
(*
¨gv
, &
uvÆ
)<0)

251 
	`ußge
();

252 
p
->
i_key
 = 
	`ht⁄l
(
uvÆ
);

254 } i‡(
	`°rcmp
(*
¨gv
, "okey") == 0) {

255 
uvÆ
;

256 
	`NEXT_ARG
();

257 
p
->
o_Êags
 |
GRE_KEY
;

258 i‡(
	`°rchr
(*
¨gv
, '.'))

259 
p
->
o_key
 = 
	`gë_addr32
(*
¨gv
);

261 i‡(
	`sˇn_numbî
(*
¨gv
, &
uvÆ
)<0)

262 
	`ußge
();

263 
p
->
o_key
 = 
	`ht⁄l
(
uvÆ
);

265 } i‡(
	`°rcmp
(*
¨gv
, "seq") == 0) {

266 
p
->
i_Êags
 |
GRE_SEQ
;

267 
p
->
o_Êags
 |
GRE_SEQ
;

268 } i‡(
	`°rcmp
(*
¨gv
, "iseq") == 0) {

269 
p
->
i_Êags
 |
GRE_SEQ
;

270 } i‡(
	`°rcmp
(*
¨gv
, "oseq") == 0) {

271 
p
->
o_Êags
 |
GRE_SEQ
;

272 } i‡(
	`°rcmp
(*
¨gv
, "csum") == 0) {

273 
p
->
i_Êags
 |
GRE_CSUM
;

274 
p
->
o_Êags
 |
GRE_CSUM
;

275 } i‡(
	`°rcmp
(*
¨gv
, "icsum") == 0) {

276 
p
->
i_Êags
 |
GRE_CSUM
;

277 } i‡(
	`°rcmp
(*
¨gv
, "ocsum") == 0) {

278 
p
->
o_Êags
 |
GRE_CSUM
;

279 } i‡(
	`°rcmp
(*
¨gv
, "nopmtudisc") == 0) {

280 
p
->
ùh
.
‰ag_off
 = 0;

281 } i‡(
	`°rcmp
(*
¨gv
, "remote") == 0) {

282 
	`NEXT_ARG
();

283 i‡(
	`°rcmp
(*
¨gv
, "any"))

284 
p
->
ùh
.
daddr
 = 
	`gë_addr32
(*
¨gv
);

285 } i‡(
	`°rcmp
(*
¨gv
, "local") == 0) {

286 
	`NEXT_ARG
();

287 i‡(
	`°rcmp
(*
¨gv
, "any"))

288 
p
->
ùh
.
ßddr
 = 
	`gë_addr32
(*
¨gv
);

289 } i‡(
	`°rcmp
(*
¨gv
, "dev") == 0) {

290 
	`NEXT_ARG
();

291 
	`ß„_°∫˝y
(
medium
, *
¨gv
, 
IFNAMSIZ
-1);

292 } i‡(
	`°rcmp
(*
¨gv
, "ttl") == 0) {

293 
uvÆ
;

294 
	`NEXT_ARG
();

295 i‡(
	`°rcmp
(*
¨gv
, "inherit") != 0) {

296 i‡(
	`sˇn_numbî
(*
¨gv
, &
uvÆ
)<0)

297 
	`ußge
();

298 i‡(
uvÆ
 > 255)

299 
	`ußge
();

300 
p
->
ùh
.
âl
 = 
uvÆ
;

302 } i‡(
	`°rcmp
(*
¨gv
, "tos") == 0) {

303 
uvÆ
;

304 
	`NEXT_ARG
();

305 i‡(
	`°rcmp
(*
¨gv
, "inherit") != 0) {

306 i‡(
	`sˇn_numbî
(*
¨gv
, &
uvÆ
)<0)

307 
	`ußge
();

308 i‡(
uvÆ
 > 255)

309 
	`ußge
();

310 
p
->
ùh
.
tos
 = 
uvÆ
;

312 
p
->
ùh
.
tos
 = 1;

314 i‡(
p
->
«me
[0])

315 
	`ußge
();

316 
	`ß„_°∫˝y
(
p
->
«me
, *
¨gv
, 
IFNAMSIZ
);

318 
¨gc
--; 
¨gv
++;

321 i‡(
p
->
ùh
.
¥Ÿocﬁ
 == 0) {

322 i‡(
	`memcmp
(
p
->
«me
, "gre", 3) == 0)

323 
p
->
ùh
.
¥Ÿocﬁ
 = 
IPPROTO_GRE
;

324 i‡(
	`memcmp
(
p
->
«me
, "ipip", 4) == 0)

325 
p
->
ùh
.
¥Ÿocﬁ
 = 
IPPROTO_IPIP
;

326 i‡(
	`memcmp
(
p
->
«me
, "sit", 3) == 0)

327 
p
->
ùh
.
¥Ÿocﬁ
 = 
IPPROTO_IPV6
;

330 i‡(
p
->
ùh
.
¥Ÿocﬁ
 =
IPPROTO_IPIP
 ||Ö->ùh.¥Ÿocﬁ =
IPPROTO_IPV6
) {

331 i‡((
p
->
i_Êags
 & 
GRE_KEY
Ë|| (p->
o_Êags
 & GRE_KEY)) {

332 
	`Ârötf
(
°dîr
, 
	`_
("KeysáreÇotállowed with ipipánd sit.\n"));

337 i‡(
medium
[0]) {

338 
p
->
lök
 = 
	`do_io˘l_gë_ifödex
(
medium
);

339 i‡(
p
->
lök
 == 0)

343 i‡(
p
->
i_key
 =0 && 
	`IN_MULTICAST
(
	`¡ohl
’->
ùh
.
daddr
))) {

344 
p
->
i_key
 =Ö->
ùh
.
daddr
;

345 
p
->
i_Êags
 |
GRE_KEY
;

347 i‡(
p
->
o_key
 =0 && 
	`IN_MULTICAST
(
	`¡ohl
’->
ùh
.
daddr
))) {

348 
p
->
o_key
 =Ö->
ùh
.
daddr
;

349 
p
->
o_Êags
 |
GRE_KEY
;

351 i‡(
	`IN_MULTICAST
(
	`¡ohl
(
p
->
ùh
.
daddr
)Ë&& !p->ùh.
ßddr
) {

352 
	`Ârötf
(
°dîr
, 
	`_
("BroadcastÅunnelÑequiresá sourceáddress.\n"));

356 
	}
}

359 
	$do_add
(
cmd
, 
¨gc
, **
¨gv
)

361 
ù_tu¬ñ_∑rm
 
p
;

363 i‡(
	`∑r£_¨gs
(
¨gc
, 
¨gv
, &
p
) < 0)

366 i‡(
p
.
ùh
.
âl
 &&Ö.ùh.
‰ag_off
 == 0) {

367 
	`Ârötf
(
°dîr
, 
	`_
("ttl != 0ándÇoptmudiscáre incompatible\n"));

371 
p
.
ùh
.
¥Ÿocﬁ
) {

372 
IPPROTO_IPIP
:

373  
	`do_add_io˘l
(
cmd
, "tu∆0", &
p
);

374 
IPPROTO_GRE
:

375  
	`do_add_io˘l
(
cmd
, "gª0", &
p
);

376 
IPPROTO_IPV6
:

377  
	`do_add_io˘l
(
cmd
, "sô0", &
p
);

379 
	`Ârötf
(
°dîr
, 
	`_
("cannot determineÅunnel mode (ipip, gre or sit)\n"));

383 
	}
}

385 
	$do_dñ
(
¨gc
, **
¨gv
)

387 
ù_tu¬ñ_∑rm
 
p
;

389 i‡(
	`∑r£_¨gs
(
¨gc
, 
¨gv
, &
p
) < 0)

392 
p
.
ùh
.
¥Ÿocﬁ
) {

393 
IPPROTO_IPIP
:

394  
	`do_dñ_io˘l
(
p
.
«me
[0] ?Ö.name : "tunl0", &p);

395 
IPPROTO_GRE
:

396  
	`do_dñ_io˘l
(
p
.
«me
[0] ?Ö.name : "gre0", &p);

397 
IPPROTO_IPV6
:

398  
	`do_dñ_io˘l
(
p
.
«me
[0] ?Ö.name : "sit0", &p);

400  
	`do_dñ_io˘l
(
p
.
«me
, &p);

403 
	}
}

405 
	$¥öt_tu¬ñ
(
ù_tu¬ñ_∑rm
 *
p
)

407 
s1
[256];

408 
s2
[256];

409 
s3
[64];

410 
s4
[64];

412 
	`f‹m©_ho°
(
AF_INET
, &
p
->
ùh
.
daddr
, 
s1
, (s1));

413 
	`f‹m©_ho°
(
AF_INET
, &
p
->
ùh
.
ßddr
, 
s2
, (s2));

414 
	`öë_¡›
(
AF_INET
, &
p
->
i_key
, 
s3
, (s3));

415 
	`öë_¡›
(
AF_INET
, &
p
->
o_key
, 
s4
, (s4));

417 
	`¥ötf
(
	`_
("%s: %s/ipÑemote %sÜocal %s "),

418 
p
->
«me
,

419 
p
->
ùh
.
¥Ÿocﬁ
 =
IPPROTO_IPIP
 ? "ip" :

420 (
p
->
ùh
.
¥Ÿocﬁ
 =
IPPROTO_GRE
 ? "gre" :

421 (
p
->
ùh
.
¥Ÿocﬁ
 =
IPPROTO_IPV6
 ? "ùv6" : 
	`_
("unknown"))),

422 
p
->
ùh
.
daddr
 ? 
s1
 : "™y",Ö->ùh.
ßddr
 ? 
s2
 : "any");

423 i‡(
p
->
lök
) {

424 *
n
 = 
	`do_io˘l_gë_i‚ame
(
p
->
lök
);

425 i‡(
n
)

426 
	`¥ötf
(" dev %†", 
n
);

428 i‡(
p
->
ùh
.
âl
)

429 
	`¥ötf
("Åé %d ", 
p
->
ùh
.
âl
);

431 
	`¥ötf
("Åtl inherit ");

432 i‡(
p
->
ùh
.
tos
) {

433 
	`¥ötf
("Åos");

434 i‡(
p
->
ùh
.
tos
&1)

435 
	`¥ötf
(" inherit");

436 i‡(
p
->
ùh
.
tos
&~1)

437 
	`¥ötf
("%c%02x ", 
p
->
ùh
.
tos
&1 ? '/' : ' ',Ö->iph.tos&~1);

439 i‡(!(
p
->
ùh
.
‰ag_off
&
	`ht⁄s
(
IP_DF
)))

440 
	`¥ötf
("Çopmtudisc");

442 i‡((
p
->
i_Êags
&
GRE_KEY
Ë&& (p->
o_Êags
&GRE_KEYË&&Ö->
o_key
 =p->
i_key
)

443 
	`¥ötf
(" key %s", 
s3
);

444 i‡((
p
->
i_Êags
|p->
o_Êags
)&
GRE_KEY
) {

445 i‡(
p
->
i_Êags
&
GRE_KEY
)

446 
	`¥ötf
(" ikey %†", 
s3
);

447 i‡(
p
->
o_Êags
&
GRE_KEY
)

448 
	`¥ötf
(" okey %†", 
s4
);

450 
	`¥ötf
("\n");

452 i‡(
p
->
i_Êags
&
GRE_SEQ
)

453 
	`¥ötf
(
	`_
(" DropÖackets out of sequence.\n"));

454 i‡(
p
->
i_Êags
&
GRE_CSUM
)

455 
	`¥ötf
(
	`_
(" Checksum inÑeceivedÖacket isÑequired.\n"));

456 i‡(
p
->
o_Êags
&
GRE_SEQ
)

457 
	`¥ötf
(
	`_
(" SequenceÖackets on output.\n"));

458 i‡(
p
->
o_Êags
&
GRE_CSUM
)

459 
	`¥ötf
(
	`_
(" Checksum outputÖackets.\n"));

460 
	}
}

462 
	$do_tu¬ñs_li°
(
ù_tu¬ñ_∑rm
 *
p
)

464 
«me
[
IFNAMSIZ
];

465 
rx_byãs
, 
rx_∑ckës
, 
rx_îrs
, 
rx_dr›s
,

466 
rx_fifo
, 
rx_‰ame
,

467 
tx_byãs
, 
tx_∑ckës
, 
tx_îrs
, 
tx_dr›s
,

468 
tx_fifo
, 
tx_cﬁls
, 
tx_ˇºõr
, 
rx_mu…i
;

469 
ty≥
;

470 
ù_tu¬ñ_∑rm
 
p1
;

472 
buf
[512];

473 
FILE
 *
Â
 = 
	`f›í
("/proc/net/dev", "r");

474 i‡(
Â
 =
NULL
) {

475 
	`≥º‹
("fopen");

479 
	`fgës
(
buf
, (buf), 
Â
);

480 
	`fgës
(
buf
, (buf), 
Â
);

482 
	`fgës
(
buf
, (buf), 
Â
Ë!
NULL
) {

483 *
±r
;

484 
buf
[(buf) - 1] = 0;

485 i‡((
±r
 = 
	`°rchr
(
buf
, ':')Ë=
NULL
 ||

486 (*
±r
++ = 0, 
	`ssˇnf
(
buf
, "%s", 
«me
) != 1)) {

487 
	`Ârötf
(
°dîr
, 
	`_
("Wrong format of /proc/net/dev. Sorry.\n"));

490 i‡(
	`ssˇnf
(
±r
, "%ld%ld%ld%ld%ld%ld%ld%*d%ld%ld%ld%ld%ld%ld%ld",

491 &
rx_byãs
, &
rx_∑ckës
, &
rx_îrs
, &
rx_dr›s
,

492 &
rx_fifo
, &
rx_‰ame
, &
rx_mu…i
,

493 &
tx_byãs
, &
tx_∑ckës
, &
tx_îrs
, &
tx_dr›s
,

494 &
tx_fifo
, &
tx_cﬁls
, &
tx_ˇºõr
) != 14)

496 i‡(
p
->
«me
[0] && 
	`°rcmp
(p->name,Çame))

498 
ty≥
 = 
	`do_io˘l_gë_i·y≥
(
«me
);

499 i‡(
ty≥
 == -1) {

500 
	`Ârötf
(
°dîr
, 
	`_
("FaûedÅÿgëÅy≥ o‡[%s]\n"), 
«me
);

503 i‡(
ty≥
 !
ARPHRD_TUNNEL
 &&Åy≥ !
ARPHRD_IPGRE
 &&Åy≥ !
ARPHRD_SIT
)

505 
	`mem£t
(&
p1
, 0, (p1));

506 i‡(
	`do_gë_io˘l
(
«me
, &
p1
))

508 i‡((
p
->
lök
 && 
p1
.link !=Ö->link) ||

509 (
p
->
«me
[0] && 
	`°rcmp
(
p1
.name,Ö->name)) ||

510 (
p
->
ùh
.
daddr
 && 
p1
.iph.daddr !=Ö->iph.daddr) ||

511 (
p
->
ùh
.
ßddr
 && 
p1
.iph.saddr !=Ö->iph.saddr) ||

512 (
p
->
i_key
 && 
p1
.i_key !=Ö->i_key))

514 
	`¥öt_tu¬ñ
(&
p1
);

515 i‡(
show_°©s
) {

516 
	`¥ötf
(
	`_
("RX: Packets Bytes Errors CsumErrs OutOfSeq Mcasts\n"));

517 
	`¥ötf
(" %-10ld %-12ld %-6ld %-8ld %-8ld %-8ld\n",

518 
rx_∑ckës
, 
rx_byãs
, 
rx_îrs
, 
rx_‰ame
, 
rx_fifo
, 
rx_mu…i
);

519 
	`¥ötf
(
	`_
("TX: Packets Bytes Errors DeadLoop NoRoute NoBufs\n"));

520 
	`¥ötf
(" %-10ld %-12ld %-6ld %-8ld %-8ld %-6ld\n\n",

521 
tx_∑ckës
, 
tx_byãs
, 
tx_îrs
, 
tx_cﬁls
, 
tx_ˇºõr
, 
tx_dr›s
);

525 
	}
}

527 
	$do_show
(
¨gc
, **
¨gv
)

529 
îr
;

530 
ù_tu¬ñ_∑rm
 
p
;

532 i‡(
	`∑r£_¨gs
(
¨gc
, 
¨gv
, &
p
) < 0)

535 
p
.
ùh
.
¥Ÿocﬁ
) {

536 
IPPROTO_IPIP
:

537 
îr
 = 
	`do_gë_io˘l
(
p
.
«me
[0] ?Ö.name : "tunl0", &p);

539 
IPPROTO_GRE
:

540 
îr
 = 
	`do_gë_io˘l
(
p
.
«me
[0] ?Ö.name : "gre0", &p);

542 
IPPROTO_IPV6
:

543 
îr
 = 
	`do_gë_io˘l
(
p
.
«me
[0] ?Ö.name : "sit0", &p);

546 
	`do_tu¬ñs_li°
(&
p
);

549 i‡(
îr
)

552 
	`¥öt_tu¬ñ
(&
p
);

554 
	}
}

556 
	$do_ùtu¬ñ
(
¨gc
, **
¨gv
)

558 i‡(
¨gc
 > 0) {

559 i‡(
	`m©ches
(*
¨gv
, "add") == 0)

560  
	`do_add
(
SIOCADDTUNNEL
, 
¨gc
-1, 
¨gv
+1);

561 i‡(
	`m©ches
(*
¨gv
, "change") == 0)

562  
	`do_add
(
SIOCCHGTUNNEL
, 
¨gc
-1, 
¨gv
+1);

563 i‡(
	`m©ches
(*
¨gv
, "del") == 0)

564  
	`do_dñ
(
¨gc
-1, 
¨gv
+1);

565 i‡(
	`m©ches
(*
¨gv
, "show") == 0 ||

566 
	`m©ches
(*
¨gv
, "lst") == 0 ||

567 
	`m©ches
(*
¨gv
, "list") == 0)

568  
	`do_show
(
¨gc
-1, 
¨gv
+1);

570  
	`do_show
(0, 
NULL
);

572 
	`ußge
();

573 
	}
}

576 
	g¥e„ºed_Ámûy
 = 
AF_UNSPEC
;

577 
	gshow_°©s
 = 0;

578 
	gªsﬁve_ho°s
 = 0;

580 
	$maö
(
¨gc
, **
¨gv
)

582 *
ba£«me
;

584 #i‡
I18N


585 
	`£éoˇÀ
 (
LC_ALL
, "");

586 
	`bödãxtdomaö
("net-tools", "/usr/share/locale");

587 
	`ãxtdomaö
("net-tools");

590 
ba£«me
 = 
	`°ºchr
(
¨gv
[0], '/');

591 i‡(
ba£«me
 =
NULL
)

592 
ba£«me
 = 
¨gv
[0];

594 
ba£«me
++;

596 
¨gc
 > 1) {

597 i‡(
¨gv
[1][0] != '-')

599 i‡(
	`m©ches
(
¨gv
[1], "-family") == 0) {

600 
¨gc
--;

601 
¨gv
++;

602 i‡(
¨gc
 <= 1)

603 
	`ußge
();

604 i‡(
	`°rcmp
(
¨gv
[1], "inet") == 0)

605 
¥e„ºed_Ámûy
 = 
AF_INET
;

606 i‡(
	`°rcmp
(
¨gv
[1], "inet6") == 0)

607 
¥e„ºed_Ámûy
 = 
AF_INET6
;

609 
	`ußge
();

610 } i‡(
	`m©ches
(
¨gv
[1], "-stats") == 0 ||

611 
	`m©ches
(
¨gv
[1], "-statistics") == 0) {

612 ++
show_°©s
;

613 } i‡(
	`m©ches
(
¨gv
[1], "-resolve") == 0) {

614 ++
ªsﬁve_ho°s
;

615 } i‡((
	`m©ches
(
¨gv
[1], "-V") == 0) || (matches(argv[1], "--version") == 0)) {

616 
	`vîsi⁄
();

618 
	`ußge
();

619 
¨gc
--; 
¨gv
++;

622  
	`do_ùtu¬ñ
(
¨gc
-1, 
¨gv
+1);

623 
	}
}

	@net-tools-1.60/lib/activate.c

26 
	~<°dio.h
>

27 
	~<°rög.h
>

28 
	~"√t-suµ‹t.h
"

29 
	~"∑th«mes.h
"

30 
	~"vîsi⁄.h
"

31 
	~"c⁄fig.h
"

32 
	~"öé.h
"

34 
hwty≥
 
¶ù_hwty≥
;

35 
hwty≥
 
c¶ù_hwty≥
;

36 
hwty≥
 
¶ù6_hwty≥
;

37 
hwty≥
 
c¶ù6_hwty≥
;

38 
hwty≥
 
ad≠tive_hwty≥
;

39 
hwty≥
 
µp_hwty≥
;

41 
SLIP_a˘iv©e
(
fd
);

42 
CSLIP_a˘iv©e
(
fd
);

43 
SLIP6_a˘iv©e
(
fd
);

44 
CSLIP6_a˘iv©e
(
fd
);

45 
ADAPTIVE_a˘iv©e
(
fd
);

46 
PPP_a˘iv©e
(
fd
);

48 
	$a˘iv©e_öô
()

50 #i‡
HAVE_HWSLIP


51 
¶ù_hwty≥
.
a˘iv©e
 = 
SLIP_a˘iv©e
;

52 
c¶ù_hwty≥
.
a˘iv©e
 = 
CSLIP_a˘iv©e
;

53 
¶ù6_hwty≥
.
a˘iv©e
 = 
SLIP6_a˘iv©e
;

54 
c¶ù6_hwty≥
.
a˘iv©e
 = 
CSLIP6_a˘iv©e
;

55 
ad≠tive_hwty≥
.
a˘iv©e
 = 
ADAPTIVE_a˘iv©e
;

57 #i‡
HAVE_HWPPP


58 
µp_hwty≥
.
a˘iv©e
 = 
PPP_a˘iv©e
;

60 
	}
}

62 
	$a˘iv©e_ld
(c⁄° *
hw«me
, 
fd
)

64 
hwty≥
 *
hw
;

66 
hw
 = 
	`gë_hwty≥
(
hw«me
);

68 i‡(!
hw
) {

69 
	`Ârötf
(
°dîr
, 
	`_
("H¨dw¨êty≥ `%s'ÇŸ suµ‹ãd.\n"), 
hw«me
);

70  (
E_NOSUPP
);

72 i‡(!
hw
->
a˘iv©e
) {

73 
	`Ârötf
(
°dîr
, 
	`_
("C™nŸ ch™gêlöêdiscùlöêtÿ`%s'.\n"), 
hw
->
«me
);

74  (
E_OPTERR
);

76  (
hw
->
	`a˘iv©e
(
fd
));

77 
	}
}

	@net-tools-1.60/lib/af.c

16 
	~<sys/ty≥s.h
>

17 
	~<sys/sockë.h
>

18 
	~<°dlib.h
>

19 
	~<°dio.h
>

20 
	~<î∫o.h
>

21 
	~<˘y≥.h
>

22 
	~<°rög.h
>

23 
	~<uni°d.h
>

24 
	~"c⁄fig.h
"

25 
	~"√t-suµ‹t.h
"

26 
	~"∑th«mes.h
"

27 
	~"öé.h
"

28 
	~"utû.h
"

30 
	gÊag_unx
;

31 
	gÊag_ùx
;

32 
	gÊag_ax25
;

33 
	gÊag_ddp
;

34 
	gÊag_√åom
;

35 
	gÊag_öë
;

36 
	gÊag_öë6
;

37 
	gÊag_ec⁄ë
;

38 
	gÊag_x25
 = 0;

39 
	gÊag_ash
;

42 
	sa·øns_t
 {

43 *
	mÆüs
;

44 *
	m«me
;

45 *
	mÊag
;

46 } 
	ga·øns
[] = {

49 "ax25", "ax25", &
Êag_ax25


52 "ù", "öë", &
Êag_öë


55 "ù6", "öë6", &
Êag_öë6


58 "ùx", "ùx", &
Êag_ùx


61 "≠∂ëÆk", "ddp", &
Êag_ddp


64 "√åom", "√åom", &
Êag_√åom


67 "öë", "öë", &
Êag_öë


70 "öë6", "öë6", &
Êag_öë6


73 "ddp", "ddp", &
Êag_ddp


76 "unix", "unix", &
Êag_unx


79 "t˝ù", "öë", &
Êag_öë


82 "ec⁄ë", "ec", &
Êag_ec⁄ë


85 "x25", "x25", &
Êag_x25


88 "ash", "ash", &
Êag_ash


95 
	ga‚ame
[256] = "";

97 
a·y≥
 
un•ec_a·y≥
;

98 
a·y≥
 
unix_a·y≥
;

99 
a·y≥
 
öë_a·y≥
;

100 
a·y≥
 
öë6_a·y≥
;

101 
a·y≥
 
ax25_a·y≥
;

102 
a·y≥
 
√åom_a·y≥
;

103 
a·y≥
 
ùx_a·y≥
;

104 
a·y≥
 
ddp_a·y≥
;

105 
a·y≥
 
ec_a·y≥
;

106 
a·y≥
 
x25_a·y≥
;

107 
a·y≥
 
ro£_a·y≥
;

108 
a·y≥
 
ash_a·y≥
;

110 
	gsVaföô
 = 0;

112 
a·y≥
 *
	ga·y≥s
[] =

114 #i‡
HAVE_AFUNIX


115 &
unix_a·y≥
,

117 #i‡
HAVE_AFINET


118 &
öë_a·y≥
,

120 #i‡
HAVE_AFINET6


121 &
öë6_a·y≥
,

123 #i‡
HAVE_AFAX25


124 &
ax25_a·y≥
,

126 #i‡
HAVE_AFNETROM


127 &
√åom_a·y≥
,

129 #i‡
HAVE_AFROSE


130 &
ro£_a·y≥
,

132 #i‡
HAVE_AFIPX


133 &
ùx_a·y≥
,

135 #i‡
HAVE_AFATALK


136 &
ddp_a·y≥
,

138 #i‡
HAVE_AFECONET


139 &
ec_a·y≥
,

141 #i‡
HAVE_AFASH


142 &
ash_a·y≥
,

144 #i‡
HAVE_AFX25


145 &
x25_a·y≥
,

147 &
un•ec_a·y≥
,

148 
NULL


151 
	$aföô
()

153 
un•ec_a·y≥
.
tôÀ
 = 
	`_
("UNSPEC");

154 #i‡
HAVE_AFUNIX


155 
unix_a·y≥
.
tôÀ
 = 
	`_
("UNIX Domain");

157 #i‡
HAVE_AFINET


158 
öë_a·y≥
.
tôÀ
 = 
	`_
("DARPA Internet");

160 #i‡
HAVE_AFINET6


161 
öë6_a·y≥
.
tôÀ
 = 
	`_
("IPv6");

163 #i‡
HAVE_AFAX25


164 
ax25_a·y≥
.
tôÀ
 = 
	`_
("AMPR AX.25");

166 #i‡
HAVE_AFNETROM


167 
√åom_a·y≥
.
tôÀ
 = 
	`_
("AMPR NET/ROM");

169 #i‡
HAVE_AFIPX


170 
ùx_a·y≥
.
tôÀ
 = 
	`_
("Novell IPX");

172 #i‡
HAVE_AFATALK


173 
ddp_a·y≥
.
tôÀ
 = 
	`_
("Appletalk DDP");

175 #i‡
HAVE_AFECONET


176 
ec_a·y≥
.
tôÀ
 = 
	`_
("Econet");

178 #i‡
HAVE_AFX25


179 
x25_a·y≥
.
tôÀ
 = 
	`_
("CCITT X.25");

181 #i‡
HAVE_AFROSE


182 
ro£_a·y≥
.
tôÀ
 = 
	`_
("AMPR ROSE");

184 #i‡
HAVE_AFASH


185 
ash_a·y≥
.
tôÀ
 = 
	`_
("Ash");

187 
sVaföô
 = 1;

188 
	}
}

191 
	$a·øns_def
(*
toﬁ
, *
¨gv0
, *
dÊt
)

193 *
tmp
;

194 *
buf
;

196 
	`°r˝y
(
a‚ame
, 
dÊt
);

198 i‡(!(
tmp
 = 
	`°ºchr
(
¨gv0
, '/')))

199 
tmp
 = 
¨gv0
;

201 
tmp
++;

203 i‡(!(
buf
 = 
	`°rdup
(
tmp
)))

206 i‡(
	`°æí
(
toﬁ
Ë>°æí(
tmp
)) {

207 
	`‰ì
(
buf
);

210 
tmp
 = 
buf
 + (
	`°æí
—mpË- såÀn(
toﬁ
));

212 i‡(
	`°rcmp
(
tmp
, 
toﬁ
) != 0) {

213 
	`‰ì
(
buf
);

216 *
tmp
 = '\0';

217 i‡((
tmp
 = 
	`°rchr
(
buf
, '_')))

218 *
tmp
 = '\0';

220 
a‚ame
[0] = '\0';

221 i‡(
	`a·øns_›t
(
buf
))

222 
	`°r˝y
(
a‚ame
, 
buf
);

224 
	`‰ì
(
buf
);

225 
	}
}

229 
a·y≥
 *
	$gë_a·y≥
(c⁄° *
«me
)

231 
a·y≥
 **
aÂ
;

233 i‡(!
sVaföô
)

234 
	`aföô
();

236 
aÂ
 = 
a·y≥s
;

237 *
aÂ
 !
NULL
) {

238 i‡(!
	`°rcmp
((*
aÂ
)->
«me
,Çame))

239  (*
aÂ
);

240 
aÂ
++;

242 i‡(
	`ödex
(
«me
, ','))

243 
	`Ârötf
(
°dîr
, 
	`_
("Please don't supply moreÅhan oneáddress family.\n"));

244  (
NULL
);

245 
	}
}

249 
a·y≥
 *
	$gë_a‚ty≥
(
af
)

251 
a·y≥
 **
aÂ
;

253 i‡(!
sVaföô
)

254 
	`aföô
();

256 
aÂ
 = 
a·y≥s
;

257 *
aÂ
 !
NULL
) {

258 i‡((*
aÂ
)->
af
 ==áf)

259  (*
aÂ
);

260 
aÂ
++;

262  (
NULL
);

263 
	}
}

266 
	$gë_sockë_f‹_af
(
af
)

268 
a·y≥
 **
aÂ
;

270 i‡(!
sVaföô
)

271 
	`aföô
();

273 
aÂ
 = 
a·y≥s
;

274 *
aÂ
 !
NULL
) {

275 i‡((*
aÂ
)->
af
 ==áf)

276  (*
aÂ
)->
fd
;

277 
aÂ
++;

280 
	}
}

282 
	$a·øns_›t
(c⁄° *
¨g
)

284 
a·øns_t
 *
∑·
;

285 *
tmp1
, *
tmp2
;

286 
buf
[256];

288 
	`ß„_°∫˝y
(
buf
, 
¨g
, (buf));

290 
tmp1
 = 
buf
;

292 
tmp1
) {

294 
tmp2
 = 
	`ödex
(
tmp1
, ',');

296 i‡(
tmp2
)

297 *(
tmp2
++) = '\0';

299 
∑·
 = 
a·øns
;

300 
∑·
 = 
a·øns
;Öa·->
Æüs
;Öaft++) {

301 i‡(
	`°rcmp
(
tmp1
, 
∑·
->
Æüs
))

303 i‡(
	`°æí
(
∑·
->
«me
Ë+ såÀn(
a‚ame
) + 1 >= (afname)) {

304 
	`Ârötf
(
°dîr
, 
	`_
("Too mucháddress familyárguments.\n"));

307 i‡(
∑·
->
Êag
)

308 (*
∑·
->
Êag
)++;

309 i‡(
a‚ame
[0])

310 
	`°rˇt
(
a‚ame
, ",");

311 
	`°rˇt
(
a‚ame
, 
∑·
->
«me
);

314 i‡(!
∑·
->
Æüs
) {

315 
	`Ârötf
(
°dîr
, 
	`_
("Unknow¿addªs†Ámûy `%s'.\n"), 
tmp1
);

318 
tmp1
 = 
tmp2
;

322 
	}
}

325 
	$¥öt_aÊi°
(
ty≥
) {

326 
cou¡
 = 0;

327 * 
txt
;

328 
a·y≥
 **
aÂ
;

330 i‡(!
sVaföô
)

331 
	`aföô
();

333 
aÂ
 = 
a·y≥s
;

334 *
aÂ
 !
NULL
) {

335 i‡((
ty≥
 =1 && ((*
aÂ
)->
Ωröt
 =
NULL
)Ë|| ((*aÂ)->
af
 == 0)) {

336 
aÂ
++; ;

338 i‡((
cou¡
 % 3Ë=0Ë
	`Ârötf
(
°dîr
,count?"\n ":" ");

339 
txt
 = (*
aÂ
)->
«me
; if (!txt)Åxt = "..";

340 
	`Ârötf
(
°dîr
,"%†(%sË",
txt
,(*
aÂ
)->
tôÀ
);

341 
cou¡
++;

342 
aÂ
++;

344 
	`Ârötf
(
°dîr
,"\n");

345 
	}
}

	@net-tools-1.60/lib/arcnet.c

16 
	~"c⁄fig.h
"

18 #i‡
HAVE_HWARC


19 
	~<sys/ty≥s.h
>

20 
	~<sys/sockë.h
>

21 
	~<√t/if_¨p.h
>

22 
	~<löux/if_ëhî.h
>

23 
	~<°dlib.h
>

24 
	~<°dio.h
>

25 
	~<î∫o.h
>

26 
	~<˘y≥.h
>

27 
	~<°rög.h
>

28 
	~<uni°d.h
>

29 
	~"√t-suµ‹t.h
"

30 
	~"∑th«mes.h
"

31 
	~"öé.h
"

32 
	~"utû.h
"

34 
hwty≥
 
¨˙ë_hwty≥
;

38 *
	$¥_¨˙ë
(*
±r
)

40 
buff
[64];

42 
	`¢¥ötf
(
buff
, (buff), "%02X", (
±r
[0] & 0377));

43  (
buff
);

44 
	}
}

48 
	$ö_¨˙ë
(*
buÂ
, 
sockaddr
 *
ßp
)

50 *
±r
;

51 
c
, *
‹ig
;

52 
i
, 
vÆ
;

54 
ßp
->
ß_Ámûy
 = 
¨˙ë_hwty≥
.
ty≥
;

55 
±r
 = 
ßp
->
ß_d©a
;

57 
i
 = 0;

58 
‹ig
 = 
buÂ
;

59 (*
buÂ
 !'\0'Ë&& (
i
 < 1)) {

60 
vÆ
 = 0;

61 
c
 = *
buÂ
++;

62 i‡(
	`isdigô
(
c
))

63 
vÆ
 = 
c
 - '0';

64 i‡(
c
 >= 'a' && c <= 'f')

65 
vÆ
 = 
c
 - 'a' + 10;

66 i‡(
c
 >= 'A' && c <= 'F')

67 
vÆ
 = 
c
 - 'A' + 10;

69 #ifde‡
DEBUG


70 
	`Ârötf
(
°dîr
, 
	`_
("ö_¨˙ë(%s): invÆidár˙ëáddªss!\n"), 
‹ig
);

72 
î∫o
 = 
EINVAL
;

75 
vÆ
 <<= 4;

76 
c
 = *
buÂ
++;

77 i‡(
	`isdigô
(
c
))

78 
vÆ
 |
c
 - '0';

79 i‡(
c
 >= 'a' && c <= 'f')

80 
vÆ
 |
c
 - 'a' + 10;

81 i‡(
c
 >= 'A' && c <= 'F')

82 
vÆ
 |
c
 - 'A' + 10;

84 #ifde‡
DEBUG


85 
	`Ârötf
(
°dîr
, 
	`_
("ö_¨˙ë(%s): invÆidár˙ëáddªss!\n"), 
‹ig
);

87 
î∫o
 = 
EINVAL
;

90 *
±r
++ = (Ë(
vÆ
 & 0377);

91 
i
++;

94 i‡(*
buÂ
 == ':') {

95 i‡(
i
 =
ETH_ALEN
) {

96 #ifde‡
DEBUG


97 
	`Ârötf
(
°dîr
, 
	`_
("in_arcnet(%s):Årailing : ignored!\n"),

98 
‹ig
)

102 
buÂ
++;

107 i‡((
i
 =
ETH_ALEN
Ë&& (*
buÂ
 != '\0')) {

108 #ifde‡
DEBUG


109 
	`Ârötf
(
°dîr
, 
	`_
("ö_¨˙ë(%s):Åøûög junk!\n"), 
‹ig
);

110 
î∫o
 = 
EINVAL
;

114 #ifde‡
DEBUG


115 
	`Ârötf
(
°dîr
, "ö_¨˙ë(%s): %s\n", 
‹ig
, 
	`¥_¨˙ë
(
ßp
->
ß_d©a
));

119 
	}
}

122 
hwty≥
 
	g¨˙ë_hwty≥
 =

124 "¨˙ë", 
NULL
, 
ARPHRD_ARCNET
, 1,

125 
¥_¨˙ë
, 
ö_¨˙ë
, 
NULL


	@net-tools-1.60/lib/ash.c

7 
	~"c⁄fig.h
"

9 #i‡
HAVE_HWASH
 || 
HAVE_AFASH


11 
	~<sys/ty≥s.h
>

12 
	~<sys/sockë.h
>

13 
	~<√t/if_¨p.h
>

14 
	~<°dlib.h
>

15 
	~<°dio.h
>

16 
	~<î∫o.h
>

17 
	~<˘y≥.h
>

18 
	~<°rög.h
>

19 
	~<uni°d.h
>

20 
	~"√t-suµ‹t.h
"

21 
	~"∑th«mes.h
"

22 
	~"öé.h
"

23 
	~"utû.h
"

25 
	#ASH_ALEN
 64

	)

27 
	ghammög
[16] =

35 
	$¥_ash
(*
±r
)

37 
buff
[128];

38 *
p
 = 
buff
;

39 
i
 = 0;

41 
p
[0] = '[';

42 
p
++;

43 
±r
[
i
] !0xc9 &&Öå[i] !0xf‡&& (ò< 
ASH_ALEN
))

44 
	`•rötf
(
p
++, "%1x", 
±r
[
i
++]);

45 *(
p
++) = ']';

46 *
p
 = 0;

48  
buff
;

49 
	}
}

51 #i‡
HAVE_HWASH


53 #i‚de‡
ARPHRD_ASH


55 
	#ARPHRD_ASH
 517

	)

58 
hwty≥
 
	gash_hwty≥
;

61 
	$ö_ash
(*
buÂ
, 
sockaddr
 *
ßp
)

63 *
±r
;

64 
i
 = 0;

66 
ßp
->
ß_Ámûy
 = 
ash_hwty≥
.
ty≥
;

67 
±r
 = 
ßp
->
ß_d©a
;

69 
buÂ
 && 
i
 < 
ASH_ALEN
) {

70 *
√xt
;

71 
h›
 = 
	`°πﬁ
(
buÂ
, &
√xt
, 16);

72 
±r
[
i
++] = 
hammög
[
h›
];

73 *
√xt
) {

75 
buÂ
 = 
√xt
 + 1;

78 
buÂ
 = 
NULL
;

81 
	`Ârötf
(
°dîr
, 
	`_
("Malformed Asháddress"));

82 
	`mem£t
(
±r
, 0xc9, 
ASH_ALEN
);

87 
i
 < 
ASH_ALEN
)

88 
±r
[
i
++] = 0xc9;

91 
	}
}

93 
hwty≥
 
	gash_hwty≥
 =

95 "ash", 
NULL
, 
ARPHRD_ASH
, 
ASH_ALEN
,

96 
¥_ash
, 
ö_ash
, 
NULL
,

102 #i‡
HAVE_AFASH


106 
	$¥_ßsh
(
sockaddr
 *
ßp
, 
numîic
)

108 
buf
[64];

110 i‡(
ßp
->
ß_Ámûy
 !
AF_ASH
)

111  
	`ß„_°∫˝y
(
buf
, "[NONE SET]", 64);

112  
	`¥_ash
(
ßp
->
ß_d©a
);

113 
	}
}

115 
a·y≥
 
	gash_a·y≥
 =

117 "ash", 
NULL
, 
AF_ASH
, 0,

118 
¥_ash
, 
¥_ßsh
, 
NULL
, NULL,

119 
NULL
, NULL, NULL,

	@net-tools-1.60/lib/ax25.c

21 
	~"c⁄fig.h
"

23 #i‡
HAVE_AFAX25
 || 
HAVE_HWAX25


24 
	~<sys/ty≥s.h
>

25 
	~<sys/io˘l.h
>

26 
	~<sys/sockë.h
>

27 #i‡(
__GLIBC__
 > 2Ë|| (__GLIBC__ =2 && 
__GLIBC_MINOR__
 >= 1)

28 
	~<√èx25/ax25.h
>

30 
	~<löux/ax25.h
>

32 
	~<√t/if_¨p.h
>

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

35 
	~<˘y≥.h
>

36 
	~<î∫o.h
>

37 
	~<f˙é.h
>

38 
	~<°rög.h
>

39 
	~<ãrmios.h
>

40 
	~<uni°d.h
>

41 
	~"√t-suµ‹t.h
"

42 
	~"∑th«mes.h
"

43 
	~"öé.h
"

44 
	~"utû.h
"

46 
	gAX25_îrmsg
[128];

48 
a·y≥
 
ax25_a·y≥
;

50 *
	$AX25_¥öt
(*
±r
)

52 
buff
[8];

53 
i
;

55 
i
 = 0; i < 6; i++) {

56 
buff
[
i
] = ((
±r
[i] & 0377) >> 1);

57 i‡(
buff
[
i
] == ' ')

58 
buff
[
i
] = '\0';

60 
buff
[6] = '\0';

61 
i
 = ((
±r
[6] & 0x1E) >> 1);

62 i‡(
i
 != 0)

63 
	`•rötf
(&
buff
[
	`°æí
(buff)], "-%d", 
i
);

64  (
buff
);

65 
	}
}

70 
	$AX25_•röt
(
sockaddr
 *
ßp
, 
numîic
)

72 
buf
[64];

74 i‡(
ßp
->
ß_Ámûy
 == 0xFFFF || sap->sa_family == 0)

75  
	`ß„_°∫˝y
(
buf
, 
	`_
("[NONE SET]"), (buf));

76  (
	`AX25_¥öt
(((
sockaddr_ax25
 *Ë
ßp
)->
ßx25_ˇŒ
.
ax25_ˇŒ
));

77 
	}
}

80 
	$AX25_öput
(
ty≥
, *
buÂ
, 
sockaddr
 *
ßp
)

82 *
±r
;

83 *
‹ig
, 
c
;

84 
i
;

86 
ßp
->
ß_Ámûy
 = 
ax25_a·y≥
.
af
;

87 
±r
 = ((
sockaddr_ax25
 *Ë
ßp
)->
ßx25_ˇŒ
.
ax25_ˇŒ
;

90 
‹ig
 = 
buÂ
;

91 
i
 = 0;

92 (*
buÂ
 !'\0'Ë&& (*buÂ !'-'Ë&& (
i
 < 6)) {

93 
c
 = *
buÂ
++;

94 i‡(
	`i¶owî
(
c
))

95 
c
 = 
	`touµî
(c);

96 i‡(!(
	`isuµî
(
c
Ë|| 
	`isdigô
(c))) {

97 
	`ß„_°∫˝y
(
AX25_îrmsg
, 
	`_
("Invalid callsign"), (AX25_errmsg));

98 #ifde‡
DEBUG


99 
	`Ârötf
(
°dîr
, "ax25_öput(%s): %†!\n", 
AX25_îrmsg
, 
‹ig
);

101 
î∫o
 = 
EINVAL
;

104 *
±r
++ = (Ë((
c
 << 1) & 0xFE);

105 
i
++;

109 i‡((
i
 =6Ë&& (*
buÂ
 != '-') && (*bufp != '\0')) {

110 
	`°r˝y
(
AX25_îrmsg
, 
	`_
("CallsignÅooÜong"));

111 #ifde‡
DEBUG


112 
	`Ârötf
(
°dîr
, "ax25_öput(%s): %†!\n", 
AX25_îrmsg
, 
‹ig
);

114 
î∫o
 = 
E2BIG
;

118 
i
++ < (
ax25_addªss
) - 1) {

119 *
±r
++ = () ((' ' << 1) & 0xFE);

123 i‡(*
buÂ
 == '-') {

124 
i
 = 
	`©oi
(++
buÂ
);

125 *
±r
 = (Ë((
i
 << 1) & 0xFE);

127 *
±r
 = () '\0';

131 #ifde‡
DEBUG


132 
	`Ârötf
(
°dîr
, "ax25_öput(%s): ", 
‹ig
);

133 
i
 = 0; i < (
ax25_addªss
); i++)

134 
	`Ârötf
(
°dîr
, "%02X ", 
ßp
->
ß_d©a
[
i
] & 0377);

135 
	`Ârötf
(
°dîr
, "\n");

139 
	}
}

143 
	$AX25_hîr‹
(*
ãxt
)

145 i‡(
ãxt
 =
NULL
)

146 
	`Ârötf
(
°dîr
, "%s\n", 
AX25_îrmsg
);

148 
	`Ârötf
(
°dîr
, "%s: %s\n", 
ãxt
, 
AX25_îrmsg
);

149 
	}
}

152 
	$AX25_höput
(*
buÂ
, 
sockaddr
 *
ßp
)

154 i‡(
	`AX25_öput
(0, 
buÂ
, 
ßp
) < 0)

156 
ßp
->
ß_Ámûy
 = 
ARPHRD_AX25
;

158 
	}
}

162 
	$KISS_£t_disc
(
fd
, 
disc
)

164 i‡(
	`io˘l
(
fd
, 
TIOCSETD
, &
disc
) < 0) {

165 
	`Ârötf
(
°dîr
, "KISS_£t_disc(%d): %s\n", 
disc
, 
	`°ªº‹
(
î∫o
));

166  (-
î∫o
);

169 
	}
}

173 
	$KISS_öô
(
fd
)

175 i‡(
	`KISS_£t_disc
(
fd
, 
N_SLIP
) < 0)

177 i‡(
	`io˘l
(
fd
, 
SIOCSIFENCAP
, 4) < 0)

180 
	}
}

183 
hwty≥
 
	gax25_hwty≥
 =

185 "ax25", 
NULL
, 
ARPHRD_AX25
, 7,

186 
AX25_¥öt
, 
AX25_höput
, 
NULL


189 
a·y≥
 
	gax25_a·y≥
 =

191 "ax25", 
NULL
, 
AF_AX25
, 7,

192 
AX25_¥öt
, 
AX25_•röt
, 
AX25_öput
, 
AX25_hîr‹
,

193 
NULL
, NULL, NULL,

	@net-tools-1.60/lib/ax25_gr.c

17 
	~"c⁄fig.h
"

19 #i‡
HAVE_AFAX25


21 
	~<sys/ty≥s.h
>

22 
	~<sys/io˘l.h
>

23 
	~<sys/sockë.h
>

24 
	~<löux/ax25.h
>

25 
	~<löux/if_¨p.h
>

26 
	~<˘y≥.h
>

27 
	~<î∫o.h
>

28 
	~<f˙é.h
>

29 
	~<°rög.h
>

30 
	~<ãrmios.h
>

32 
	~<°dlib.h
>

33 
	~<°dio.h
>

34 
	~<uni°d.h
>

35 
	~"√t-suµ‹t.h
"

36 
	~"∑th«mes.h
"

37 
	~"öé.h
"

39 
	$AX25_Ωröt
(
›ti⁄s
)

41 
FILE
 *
f
 = 
	`f›í
(
_PATH_PROCNET_AX25_ROUTE
, "r");

42 
buf„r
[256];

43 
u£
;

45 i‡(
f
 =
NULL
) {

46 
	`≥º‹
(
_PATH_PROCNET_AX25_ROUTE
);

47 
	`¥ötf
(
	`_
("AX.25Çot configured inÅhis system.\n"));

50 
	`¥ötf
(
	`_
("Kernel AX.25ÑoutingÅable\n"));

51 
	`¥ötf
(
	`_
("Destination Iface Use\n"));

52 
	`fgës
(
buf„r
, 256, 
f
);

53 
	`fgës
(
buf„r
, 256, 
f
)) {

54 
buf„r
[9] = 0;

55 
buf„r
[14] = 0;

56 
u£
 = 
	`©oi
(
buf„r
 + 15);

57 
	`¥ötf
("%-9s %-5s %5d\n",

58 
buf„r
, buf„∏+ 10, 
u£
);

60 
	`f˛o£
(
f
);

62 
	}
}

	@net-tools-1.60/lib/ddp.c

15 
	~"c⁄fig.h
"

17 #i‡
HAVE_AFATALK


18 
	~<asm/ty≥s.h
>

19 
	~<sys/ty≥s.h
>

20 
	~<sys/sockë.h
>

21 
	~<löux/©Æk.h
>

22 
	~<°dlib.h
>

23 
	~<°dio.h
>

24 
	~<î∫o.h
>

25 
	~<˘y≥.h
>

26 
	~<°rög.h
>

27 
	~<uni°d.h
>

28 
	~<√töë/ö.h
>

29 
	~"√t-suµ‹t.h
"

30 
	~"∑th«mes.h
"

31 
	~"öé.h
"

32 
	~"utû.h
"

35 *
	$ddp_¥öt
(*
±r
)

37 
buff
[64];

38 
sockaddr_©
 *
ßt
 = (sockaddr_© *Ë(
±r
 - 2);

39 
	`•rötf
(
buff
, "%d/%d", (Ë
	`¡ohs
(
ßt
->
ßt_addr
.
s_√t
), (Ëßt->ßt_addr.
s_node
);

40  (
buff
);

41 
	}
}

45 *
	$ddp_•röt
(
sockaddr
 *
ßp
, 
numîic
)

47 
buf
[64];

49 i‡(
ßp
->
ß_Ámûy
 !
AF_APPLETALK
)

50  
	`ß„_°∫˝y
(
buf
, 
	`_
("[NONE SET]"), (buf));

51  (
	`ddp_¥öt
(
ßp
->
ß_d©a
));

52 
	}
}

55 
a·y≥
 
	gddp_a·y≥
 =

57 "ddp", 
NULL
, 
AF_APPLETALK
, 0,

58 
ddp_¥öt
, 
ddp_•röt
, 
NULL
, NULL,

59 
NULL
 , NULL, NULL,

	@net-tools-1.60/lib/ddp_gr.c

1 
	~"c⁄fig.h
"

3 #i‡
HAVE_AFATALK


4 
	~<asm/ty≥s.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/sockë.h
>

7 
	~<löux/©Æk.h
>

8 
	~<°dlib.h
>

9 
	~<°dio.h
>

10 
	~<î∫o.h
>

11 
	~<˘y≥.h
>

12 
	~<°rög.h
>

13 
	~<uni°d.h
>

14 
	~<√töë/ö.h
>

15 
	~"√t-suµ‹t.h
"

16 
	~"∑th«mes.h
"

17 
	~"öé.h
"

19 
	$DDP_Ωröt
(
›ti⁄s
)

21 
	`Ârötf
(
°dîr
, 
	`_
("RoutingÅable for `ddp'Çot yet supported.\n"));

23 
	}
}

	@net-tools-1.60/lib/ec_hw.c

15 
	~"c⁄fig.h
"

17 #i‡
HAVE_HWEC


19 
	~<√t/if_¨p.h
>

20 
	~"√t-suµ‹t.h
"

22 
hwty≥
 
	gec_hwty≥
 =

24 "ec", 
NULL
 , 
ARPHRD_ECONET
, 0,

25 
NULL
, NULL, NULL

	@net-tools-1.60/lib/econet.c

19 
	~"c⁄fig.h
"

21 #i‡
HAVE_AFECONET


23 
	~<sys/ty≥s.h
>

24 
	~<sys/sockë.h
>

25 
	~<°dio.h
>

26 
	~<√ãc⁄ë/ec.h
>

28 
	~"vîsi⁄.h
"

29 
	~"√t-suµ‹t.h
"

30 
	~"∑th«mes.h
"

31 
	~"öé.h
"

36 
	$ec_¥öt
(*
±r
)

38 
buff
[64];

39 
ec_addr
 *
ec
 = (ec_add∏*Ë
±r
;

40 
	`•rötf
(
buff
, "%d.%d", 
ec
->
√t
,Éc->
°©i⁄
);

41  
buff
;

42 
	}
}

47 
	$ec_•röt
(
sockaddr
 *
ßp
, 
numîic
)

49 
sockaddr_ec
 *
£c
 = (sockaddr_e¯*Ë
ßp
;

51 i‡(
ßp
->
ß_Ámûy
 !
AF_ECONET
)

52  
	`_
("[NONE SET]");

54  
	`ec_¥öt
((*Ë&
£c
->
addr
);

55 
	}
}

58 
	$ec_öput
(
ty≥
, *
buÂ
, 
sockaddr
 *
ßp
)

60 
sockaddr_ec
 *
£c
 = (sockaddr_e¯*Ë
ßp
;

61 
√t
, 
°n
;

62 
	`ssˇnf
(
buÂ
, "%d.%d", &
√t
, &
°n
)) {

64 
£c
->
addr
.
°©i⁄
 = 
°n
;

65 
£c
->
addr
.
√t
 =Çet;

68 i‡(
	`ssˇnf
(
buÂ
, "%d", &
°n
) == 1) {

69 
£c
->
addr
.
√t
 = 0;

70 
£c
->
addr
.
°©i⁄
 = 
°n
;

75 
	}
}

77 
a·y≥
 
	gec_a·y≥
 =

79 "ec", 
NULL
, 
AF_ECONET
, 0,

80 
ec_¥öt
, 
ec_•röt
, 
ec_öput
, 
NULL
,

81 
NULL
, NULL, NULL,

	@net-tools-1.60/lib/ether.c

16 
	~"c⁄fig.h
"

18 #i‡
HAVE_HWETHER


19 
	~<sys/ty≥s.h
>

20 
	~<sys/sockë.h
>

21 
	~<√t/if_¨p.h
>

22 
	~<löux/if_ëhî.h
>

23 
	~<°dlib.h
>

24 
	~<°dio.h
>

25 
	~<î∫o.h
>

26 
	~<˘y≥.h
>

27 
	~<°rög.h
>

28 
	~<uni°d.h
>

29 
	~"√t-suµ‹t.h
"

30 
	~"∑th«mes.h
"

31 
	~"öé.h
"

32 
	~"utû.h
"

34 
hwty≥
 
ëhî_hwty≥
;

38 *
	$¥_ëhî
(*
±r
)

40 
buff
[64];

42 
	`¢¥ötf
(
buff
, (buff), "%02X:%02X:%02X:%02X:%02X:%02X",

43 (
±r
[0] & 0377), (ptr[1] & 0377), (ptr[2] & 0377),

44 (
±r
[3] & 0377), (ptr[4] & 0377), (ptr[5] & 0377)

46  (
buff
);

47 
	}
}

51 
	$ö_ëhî
(*
buÂ
, 
sockaddr
 *
ßp
)

53 *
±r
;

54 
c
, *
‹ig
;

55 
i
;

56 
vÆ
;

58 
ßp
->
ß_Ámûy
 = 
ëhî_hwty≥
.
ty≥
;

59 
±r
 = 
ßp
->
ß_d©a
;

61 
i
 = 0;

62 
‹ig
 = 
buÂ
;

63 (*
buÂ
 !'\0'Ë&& (
i
 < 
ETH_ALEN
)) {

64 
vÆ
 = 0;

65 
c
 = *
buÂ
++;

66 i‡(
	`isdigô
(
c
))

67 
vÆ
 = 
c
 - '0';

68 i‡(
c
 >= 'a' && c <= 'f')

69 
vÆ
 = 
c
 - 'a' + 10;

70 i‡(
c
 >= 'A' && c <= 'F')

71 
vÆ
 = 
c
 - 'A' + 10;

73 #ifde‡
DEBUG


74 
	`Ârötf
(
°dîr
, 
	`_
("ö_ëhî(%s): invÆidÉthîáddªss!\n"), 
‹ig
);

76 
î∫o
 = 
EINVAL
;

79 
vÆ
 <<= 4;

80 
c
 = *
buÂ
;

81 i‡(
	`isdigô
(
c
))

82 
vÆ
 |
c
 - '0';

83 i‡(
c
 >= 'a' && c <= 'f')

84 
vÆ
 |
c
 - 'a' + 10;

85 i‡(
c
 >= 'A' && c <= 'F')

86 
vÆ
 |
c
 - 'A' + 10;

87 i‡(
c
 == ':' || c == 0)

88 
vÆ
 >>= 4;

90 #ifde‡
DEBUG


91 
	`Ârötf
(
°dîr
, 
	`_
("ö_ëhî(%s): invÆidÉthîáddªss!\n"), 
‹ig
);

93 
î∫o
 = 
EINVAL
;

96 i‡(
c
 != 0)

97 
buÂ
++;

98 *
±r
++ = (Ë(
vÆ
 & 0377);

99 
i
++;

102 i‡(*
buÂ
 == ':') {

103 i‡(
i
 =
ETH_ALEN
) {

104 #ifde‡
DEBUG


105 
	`Ârötf
(
°dîr
, 
	`_
("in_ether(%s):Årailing : ignored!\n"),

106 
‹ig
)

110 
buÂ
++;

115 i‡((
i
 =
ETH_ALEN
Ë&& (*
buÂ
 != '\0')) {

116 #ifde‡
DEBUG


117 
	`Ârötf
(
°dîr
, 
	`_
("ö_ëhî(%s):Åøûög junk!\n"), 
‹ig
);

118 
î∫o
 = 
EINVAL
;

122 #ifde‡
DEBUG


123 
	`Ârötf
(
°dîr
, "ö_ëhî(%s): %s\n", 
‹ig
, 
	`¥_ëhî
(
ßp
->
ß_d©a
));

127 
	}
}

130 
hwty≥
 
	gëhî_hwty≥
 =

132 "ëhî", 
NULL
, 
ARPHRD_ETHER
, 
ETH_ALEN
,

133 
¥_ëhî
, 
ö_ëhî
, 
NULL


	@net-tools-1.60/lib/fddi.c

17 
	~"c⁄fig.h
"

19 
	~<„©uªs.h
>

21 #i‡
HAVE_HWFDDI


22 
	~<sys/ty≥s.h
>

23 
	~<sys/sockë.h
>

24 
	~<√t/if_¨p.h
>

25 #i‚de‡
ARPHRD_FDDI


29 #i‡
__GLIBC__
 >= 2

30 
	~<√töë/if_fddi.h
>

32 
	~<löux/if_fddi.h
>

34 
	~<°dlib.h
>

35 
	~<°dio.h
>

36 
	~<î∫o.h
>

37 
	~<˘y≥.h
>

38 
	~<°rög.h
>

39 
	~<uni°d.h
>

40 
	~"√t-suµ‹t.h
"

41 
	~"∑th«mes.h
"

42 
	~"öé.h
"

43 
	~"utû.h
"

45 
hwty≥
 
fddi_hwty≥
;

49 *
	$¥_fddi
(*
±r
)

51 
buff
[64];

53 
	`¢¥ötf
(
buff
, (buff), "%02X-%02X-%02X-%02X-%02X-%02X",

54 (
±r
[0] & 0377), (ptr[1] & 0377), (ptr[2] & 0377),

55 (
±r
[3] & 0377), (ptr[4] & 0377), (ptr[5] & 0377)

57  (
buff
);

58 
	}
}

62 
	$ö_fddi
(*
buÂ
, 
sockaddr
 *
ßp
)

64 *
±r
;

65 
c
, *
‹ig
;

66 
i
, 
vÆ
;

68 
ßp
->
ß_Ámûy
 = 
fddi_hwty≥
.
ty≥
;

69 
±r
 = 
ßp
->
ß_d©a
;

71 
i
 = 0;

72 
‹ig
 = 
buÂ
;

73 (*
buÂ
 !'\0'Ë&& (
i
 < 
FDDI_K_ALEN
)) {

74 
vÆ
 = 0;

75 
c
 = *
buÂ
++;

76 i‡(
	`isdigô
(
c
))

77 
vÆ
 = 
c
 - '0';

78 i‡(
c
 >= 'a' && c <= 'f')

79 
vÆ
 = 
c
 - 'a' + 10;

80 i‡(
c
 >= 'A' && c <= 'F')

81 
vÆ
 = 
c
 - 'A' + 10;

83 #ifde‡
DEBUG


84 
	`Ârötf
(
°dîr
, 
	`_
("ö_fddi(%s): invÆid fddòaddªss!\n"), 
‹ig
);

86 
î∫o
 = 
EINVAL
;

89 
vÆ
 <<= 4;

90 
c
 = *
buÂ
++;

91 i‡(
	`isdigô
(
c
))

92 
vÆ
 |
c
 - '0';

93 i‡(
c
 >= 'a' && c <= 'f')

94 
vÆ
 |
c
 - 'a' + 10;

95 i‡(
c
 >= 'A' && c <= 'F')

96 
vÆ
 |
c
 - 'A' + 10;

98 #ifde‡
DEBUG


99 
	`Ârötf
(
°dîr
, 
	`_
("ö_fddi(%s): invÆid fddòaddªss!\n"), 
‹ig
);

101 
î∫o
 = 
EINVAL
;

104 *
±r
++ = (Ë(
vÆ
 & 0377);

105 
i
++;

108 i‡(*
buÂ
 == ':') {

109 i‡(
i
 =
FDDI_K_ALEN
) {

110 #ifde‡
DEBUG


111 
	`Ârötf
(
°dîr
, 
	`_
("in_fddi(%s):Årailing : ignored!\n"),

112 
‹ig
)

116 
buÂ
++;

121 i‡((
i
 =
FDDI_K_ALEN
Ë&& (*
buÂ
 != '\0')) {

122 #ifde‡
DEBUG


123 
	`Ârötf
(
°dîr
, 
	`_
("ö_fddi(%s):Åøûög junk!\n"), 
‹ig
);

124 
î∫o
 = 
EINVAL
;

128 #ifde‡
DEBUG


129 
	`Ârötf
(
°dîr
, "ö_fddi(%s): %s\n", 
‹ig
, 
	`¥_fddi
(
ßp
->
ß_d©a
));

133 
	}
}

136 
hwty≥
 
	gfddi_hwty≥
 =

138 "fddi", 
NULL
, 
ARPHRD_FDDI
, 
FDDI_K_ALEN
,

139 
¥_fddi
, 
ö_fddi
, 
NULL


	@net-tools-1.60/lib/frame.c

21 
	~"c⁄fig.h
"

23 #i‡
HAVE_HWFR


25 
	~<sys/ty≥s.h
>

26 
	~<sys/io˘l.h
>

27 
	~<sys/sockë.h
>

28 
	~<√t/if_¨p.h
>

29 
	~<°dlib.h
>

30 
	~<°dio.h
>

31 
	~<˘y≥.h
>

32 
	~<î∫o.h
>

33 
	~<f˙é.h
>

34 
	~<°rög.h
>

35 
	~<ãrmios.h
>

36 
	~<uni°d.h
>

37 
	~"√t-suµ‹t.h
"

38 
	~"∑th«mes.h
"

40 *
	$¥_dlci
(*
±r
)

42 
buf
[12];

44 
	`¢¥ötf
(
buf
, (buf), "%i", *(*Ë
±r
);

45  (
buf
);

46 
	}
}

48 
hwty≥
 
	gdlci_hwty≥
 =

50 "dlci", 
NULL
, 
ARPHRD_DLCI
, 3,

51 
¥_dlci
, 
NULL
, NULL, 0

54 
hwty≥
 
	g‰ad_hwty≥
 =

56 "‰ad", 
NULL
, 
ARPHRD_FRAD
, 0,

57 
NULL
, NULL, NULL, 0

	@net-tools-1.60/lib/getargs.c

15 
	~"c⁄fig.h
"

16 
	~<sys/ty≥s.h
>

17 
	~<sys/sockë.h
>

18 
	~<√t/if.h
>

19 
	~<î∫o.h
>

20 
	~<sig«l.h
>

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<uni°d.h
>

25 
	~"√t-suµ‹t.h
"

26 
	~"∑th«mes.h
"

30 
	$gë¨gs
(*
°rög
, *
¨gumíts
[])

32 
Àn
 = 
	`°æí
(
°rög
);

33 
ãmp
[
Àn
+1];

34 *
•
, *
±r
;

35 
i
, 
¨gc
;

36 
w™t
;

42 
•
 = 
°rög
;

43 
i
 = 0;

44 
	`°r˝y
(
ãmp
, 
°rög
);

45 
±r
 = 
ãmp
;

51 *
±r
 !'\0' && 
i
 < 31) {

53 *
±r
 == ' ' || *ptr == '\t')

54 
±r
++;

57 
¨gumíts
[
i
++] = 
•
;

60 i‡(*
±r
 == '"' || *ptr == '\'') {

66 
w™t
 = *
±r
++;

67 *
±r
 != '\0') {

68 i‡(*
±r
 =
w™t
 && *(ptr - 1) != '\\') {

69 
±r
++;

72 *
•
++ = *
±r
++;

76 *
±r
 != '\0' && *ptr != ' ' && *ptr != '\t')

77 *
•
++ = *
±r
++;

79 *
•
++ = '\0';

82 i‡(*
±r
 != '\0') {

83 *
±r
 == ' ' || *ptr == '\t')

84 
±r
++;

87 
¨gc
 = 
i
;

88 
i
 < 32)

89 
¨gumíts
[
i
++] = (*Ë
NULL
;

90  (
¨gc
);

91 
	}
}

	@net-tools-1.60/lib/getroute.c

32 
	~<°dio.h
>

33 
	~<°rög.h
>

34 
	~"√t-suµ‹t.h
"

35 
	~"∑th«mes.h
"

36 
	~"vîsi⁄.h
"

37 
	~"c⁄fig.h
"

38 
	~"öé.h
"

39 
	~"utû.h
"

41 
a·y≥
 
un•ec_a·y≥
;

42 
a·y≥
 
unix_a·y≥
;

43 
a·y≥
 
öë_a·y≥
;

44 
a·y≥
 
öë6_a·y≥
;

45 
a·y≥
 
ax25_a·y≥
;

46 
a·y≥
 
√åom_a·y≥
;

47 
a·y≥
 
ùx_a·y≥
;

48 
a·y≥
 
ddp_a·y≥
;

49 
a·y≥
 
x25_a·y≥
;

51 
	$gërouã_öô
()

53 #i‡
HAVE_AFINET


54 
öë_a·y≥
.
Ωröt
 = 
INET_Ωröt
;

56 #i‡
HAVE_AFINET6


57 
öë6_a·y≥
.
Ωröt
 = 
INET6_Ωröt
;

59 #i‡
HAVE_AFNETROM


60 
√åom_a·y≥
.
Ωröt
 = 
NETROM_Ωröt
;

62 #i‡
HAVE_AFAX25


63 
ax25_a·y≥
.
Ωröt
 = 
AX25_Ωröt
;

65 #i‡
HAVE_AFIPX


66 
ùx_a·y≥
.
Ωröt
 = 
IPX_Ωröt
;

68 #i‡
HAVE_AFATALK


69 
ddp_a·y≥
.
Ωröt
 = 
DDP_Ωröt
;

71 #i‡
HAVE_AFX25


72 
x25_a·y≥
.
Ωröt
 = 
X25_Ωröt
;

74 
	}
}

76 
	$rouã_öfo
(c⁄° *
a‚ame
, 
›ti⁄s
)

78 
a·y≥
 *
≠
;

79 *
tmp1
, *
tmp2
;

80 
found
 = 
E_NOTFOUND
, 
rc
;

81 
buf
[256];

83 
	`ß„_°∫˝y
(
buf
, 
a‚ame
, (buf));

85 
tmp1
 = 
buf
;

87 
tmp1
) {

89 
≠
 = 
NULL
;

91 i‡((
tmp2
 = 
	`ödex
(
tmp1
, ',')))

92 *
tmp2
++ = '\0';

94 i‡(!
tmp1
[0]) {

95 
tmp1
 = 
tmp2
;

98 
≠
 = 
	`gë_a·y≥
(
tmp1
);

100 i‡(!
≠
) {

101 
	`Ârötf
(
°dîr
, 
	`_
("Addªs†Ámûy `%s'ÇŸ suµ‹ãd.\n"), 
tmp1
);

102  (
E_OPTERR
);

104 
tmp1
 = 
tmp2
;

106 i‡(!
≠
->
Ωröt
) {

107 
	`Ârötf
(
°dîr
, 
	`_
("Nÿroutög f‹áddªs†Ámûy `%s'.\n"), 
≠
->
«me
);

108  (
E_OPTERR
);

110 
found
 = 0;

112 i‡((
rc
 = 
≠
->
	`Ωröt
(
›ti⁄s
)))

113  (
rc
);

116  (
found
);

117 
	}
}

	@net-tools-1.60/lib/hdlclapb.c

20 
	~"c⁄fig.h
"

22 #i‡
HAVE_HWHDLCLAPB


24 
	~<sys/ty≥s.h
>

25 
	~<sys/io˘l.h
>

26 
	~<sys/sockë.h
>

27 
	~<√t/if_¨p.h
>

28 
	~<°dlib.h
>

29 
	~<°dio.h
>

30 
	~<˘y≥.h
>

31 
	~<î∫o.h
>

32 
	~<f˙é.h
>

33 
	~<°rög.h
>

34 
	~<ãrmios.h
>

35 
	~<uni°d.h
>

36 
	~"√t-suµ‹t.h
"

37 
	~"∑th«mes.h
"

39 #i‚de‡
ARPHRD_HDLC


41 
	#ARPHRD_HDLC
 513

	)

44 #i‚de‡
ARPHRD_LAPB


46 
	#ARPHRD_LAPB
 516

	)

49 
hwty≥
 
	ghdlc_hwty≥
 =

51 "hdlc", 
NULL
, 
ARPHRD_HDLC
, 0,

52 
NULL
, NULL, NULL, 0

54 
hwty≥
 
	gœpb_hwty≥
 =

56 "œpb", 
NULL
, 
ARPHRD_LAPB
, 0,

57 
NULL
, NULL, NULL, 0

	@net-tools-1.60/lib/hippi.c

18 
	~"c⁄fig.h
"

20 #i‡
HAVE_HWHIPPI


21 
	~<sys/ty≥s.h
>

22 
	~<sys/sockë.h
>

23 
	~<√t/if_¨p.h
>

24 
	~<°dlib.h
>

25 
	~<°dio.h
>

26 
	~<î∫o.h
>

27 
	~<˘y≥.h
>

28 
	~<°rög.h
>

29 
	~<uni°d.h
>

30 
	~"√t-suµ‹t.h
"

31 
	~"∑th«mes.h
"

32 
	~"öé.h
"

33 
	~"utû.h
"

39 
	#HIPPI_ALEN
 6

	)

40 #i‚de‡
ARPHRD_HIPPI


41 
	#ARPHRD_HIPPI
 780

	)

45 
hwty≥
 
hùpi_hwty≥
;

49 *
	$¥_hùpi
(*
±r
)

51 
buff
[64];

53 
	`•rötf
(
buff
, "%02X:%02X:%02X:%02X:%02X:%02X",

54 (
±r
[0] & 0377), (ptr[1] & 0377), (ptr[2] & 0377),

55 (
±r
[3] & 0377), (ptr[4] & 0377), (ptr[5] & 0377)

57  (
buff
);

58 
	}
}

62 
	$ö_hùpi
(*
buÂ
, 
sockaddr
 *
ßp
)

64 *
±r
;

65 
c
, *
‹ig
;

66 
i
, 
vÆ
;

68 
ßp
->
ß_Ámûy
 = 
hùpi_hwty≥
.
ty≥
;

69 
±r
 = 
ßp
->
ß_d©a
;

71 
i
 = 0;

72 
‹ig
 = 
buÂ
;

73 (*
buÂ
 !'\0'Ë&& (
i
 < 
HIPPI_ALEN
)) {

74 
vÆ
 = 0;

75 
c
 = *
buÂ
++;

76 i‡(
	`isdigô
(
c
))

77 
vÆ
 = 
c
 - '0';

78 i‡(
c
 >= 'a' && c <= 'f')

79 
vÆ
 = 
c
 - 'a' + 10;

80 i‡(
c
 >= 'A' && c <= 'F')

81 
vÆ
 = 
c
 - 'A' + 10;

83 #ifde‡
DEBUG


84 
	`Ârötf
(
°dîr
, 
	`_
("ö_hùpi(%s): invÆid hùpòaddªss!\n"), 
‹ig
);

86 
î∫o
 = 
EINVAL
;

89 
vÆ
 <<= 4;

90 
c
 = *
buÂ
++;

91 i‡(
	`isdigô
(
c
))

92 
vÆ
 |
c
 - '0';

93 i‡(
c
 >= 'a' && c <= 'f')

94 
vÆ
 |
c
 - 'a' + 10;

95 i‡(
c
 >= 'A' && c <= 'F')

96 
vÆ
 |
c
 - 'A' + 10;

98 #ifde‡
DEBUG


99 
	`Ârötf
(
°dîr
, 
	`_
("ö_hùpi(%s): invÆid hùpòaddªss!\n"), 
‹ig
);

101 
î∫o
 = 
EINVAL
;

104 *
±r
++ = (Ë(
vÆ
 & 0377);

105 
i
++;

108 i‡(*
buÂ
 == ':') {

109 i‡(
i
 =
HIPPI_ALEN
) {

110 #ifde‡
DEBUG


111 
	`Ârötf
(
°dîr
, 
	`_
("ö_hùpi(%s):Åøûög : ign‹ed!\n"), 
‹ig
)

115 
buÂ
++;

120 i‡((
i
 =
HIPPI_ALEN
Ë&& (*
buÂ
 != '\0')) {

121 #ifde‡
DEBUG


122 
	`Ârötf
(
°dîr
, 
	`_
("ö_hùpi(%s):Åøûög junk!\n"), 
‹ig
);

123 
î∫o
 = 
EINVAL
;

127 #ifde‡
DEBUG


128 
	`Ârötf
(
°dîr
, "ö_hùpi(%s): %s\n", 
‹ig
, 
	`¥_hùpi
(
ßp
->
ß_d©a
));

132 
	}
}

135 
hwty≥
 
	ghùpi_hwty≥
 =

137 "hùpi", 
NULL
, 
ARPHRD_HIPPI
, 
HIPPI_ALEN
,

138 
¥_hùpi
, 
ö_hùpi
, 
NULL
, 0

	@net-tools-1.60/lib/hw.c

20 
	~<sys/ty≥s.h
>

21 
	~<sys/sockë.h
>

22 
	~<√t/if_¨p.h
>

23 
	~<°dlib.h
>

24 
	~<°dio.h
>

25 
	~<î∫o.h
>

26 
	~<˘y≥.h
>

27 
	~<°rög.h
>

28 
	~<uni°d.h
>

29 
	~"c⁄fig.h
"

30 
	~"√t-suµ‹t.h
"

31 
	~"∑th«mes.h
"

32 
	~"öé.h
"

34 
hwty≥
 
un•ec_hwty≥
;

35 
hwty≥
 
lo›_hwty≥
;

37 
hwty≥
 
¶ù_hwty≥
;

38 
hwty≥
 
c¶ù_hwty≥
;

39 
hwty≥
 
¶ù6_hwty≥
;

40 
hwty≥
 
c¶ù6_hwty≥
;

41 
hwty≥
 
ad≠tive_hwty≥
;

42 
hwty≥
 
°rù_hwty≥
;

44 
hwty≥
 
ëhî_hwty≥
;

45 
hwty≥
 
fddi_hwty≥
;

46 
hwty≥
 
hùpi_hwty≥
;

47 
hwty≥
 
å_hwty≥
;

48 #ifde‡
ARPHRD_IEEE802_TR


49 
hwty≥
 
å_hwty≥1
;

52 
hwty≥
 
ax25_hwty≥
;

53 
hwty≥
 
ro£_hwty≥
;

54 
hwty≥
 
√åom_hwty≥
;

55 
hwty≥
 
x25_hwty≥
;

56 
hwty≥
 
tu¬ñ_hwty≥
;

58 
hwty≥
 
ash_hwty≥
;

60 
hwty≥
 
µp_hwty≥
;

62 
hwty≥
 
¨˙ë_hwty≥
;

64 
hwty≥
 
dlci_hwty≥
;

65 
hwty≥
 
‰ad_hwty≥
;

67 
hwty≥
 
hdlc_hwty≥
;

68 
hwty≥
 
œpb_hwty≥
;

70 
hwty≥
 
sô_hwty≥
;

72 
hwty≥
 
úda_hwty≥
;

74 
hwty≥
 
ec_hwty≥
;

76 
hwty≥
 *
	ghwty≥s
[] =

79 &
lo›_hwty≥
,

81 #i‡
HAVE_HWSLIP


82 &
¶ù_hwty≥
,

83 &
c¶ù_hwty≥
,

84 &
¶ù6_hwty≥
,

85 &
c¶ù6_hwty≥
,

86 &
ad≠tive_hwty≥
,

88 #i‡
HAVE_HWSTRIP


89 &
°rù_hwty≥
,

91 #i‡
HAVE_HWASH


92 &
ash_hwty≥
,

94 #i‡
HAVE_HWETHER


95 &
ëhî_hwty≥
,

97 #i‡
HAVE_HWTR


98 &
å_hwty≥
,

99 #ifde‡
ARPHRD_IEEE802_TR


100 &
å_hwty≥1
,

103 #i‡
HAVE_HWAX25


104 &
ax25_hwty≥
,

106 #i‡
HAVE_HWNETROM


107 &
√åom_hwty≥
,

109 #i‡
HAVE_HWROSE


110 &
ro£_hwty≥
,

112 #i‡
HAVE_HWTUNNEL


113 &
tu¬ñ_hwty≥
,

115 #i‡
HAVE_HWPPP


116 &
µp_hwty≥
,

118 #i‡
HAVE_HWHDLCLAPB


119 &
hdlc_hwty≥
,

120 &
œpb_hwty≥
,

122 #i‡
HAVE_HWARC


123 &
¨˙ë_hwty≥
,

125 #i‡
HAVE_HWFR


126 &
dlci_hwty≥
,

127 &
‰ad_hwty≥
,

129 #i‡
HAVE_HWSIT


130 &
sô_hwty≥
,

132 #i‡
HAVE_HWFDDI


133 &
fddi_hwty≥
,

135 #i‡
HAVE_HWHIPPI


136 &
hùpi_hwty≥
,

138 #i‡
HAVE_HWIRDA


139 &
úda_hwty≥
,

141 #i‡
HAVE_HWEC


142 &
ec_hwty≥
,

144 #i‡
HAVE_HWX25


145 &
x25_hwty≥
,

147 &
un•ec_hwty≥
,

148 
NULL


151 
	gsVhwöô
 = 0;

153 
	$hwöô
()

155 
lo›_hwty≥
.
tôÀ
 = 
	`_
("Local Loopback");

156 
un•ec_hwty≥
.
tôÀ
 = 
	`_
("UNSPEC");

157 #i‡
HAVE_HWSLIP


158 
¶ù_hwty≥
.
tôÀ
 = 
	`_
("Serial Line IP");

159 
c¶ù_hwty≥
.
tôÀ
 = 
	`_
("VJ Serial Line IP");

160 
¶ù6_hwty≥
.
tôÀ
 = 
	`_
("6-bit Serial Line IP");

161 
c¶ù6_hwty≥
.
tôÀ
 = 
	`_
("VJ 6-bit Serial Line IP");

162 
ad≠tive_hwty≥
.
tôÀ
 = 
	`_
("Adaptive Serial Line IP");

164 #i‡
HAVE_HWETHER


165 
ëhî_hwty≥
.
tôÀ
 = 
	`_
("Ethernet");

167 #i‡
HAVE_HWASH


168 
ash_hwty≥
.
tôÀ
 = 
	`_
("Ash");

170 #i‡
HAVE_HWFDDI


171 
fddi_hwty≥
.
tôÀ
 = 
	`_
("Fiber Distributed Data Interface");

173 #i‡
HAVE_HWHIPPI


174 
hùpi_hwty≥
.
tôÀ
 = 
	`_
("HIPPI");

176 #i‡
HAVE_HWAX25


177 
ax25_hwty≥
.
tôÀ
 = 
	`_
("AMPR AX.25");

179 #i‡
HAVE_HWROSE


180 
ro£_hwty≥
.
tôÀ
 = 
	`_
("AMPR ROSE");

182 #i‡
HAVE_HWNETROM


183 
√åom_hwty≥
.
tôÀ
 = 
	`_
("AMPR NET/ROM");

185 #i‡
HAVE_HWX25


186 
x25_hwty≥
.
tôÀ
 = 
	`_
("generic X.25");

188 #i‡
HAVE_HWTUNNEL


189 
tu¬ñ_hwty≥
.
tôÀ
 = 
	`_
("IPIP Tunnel");

191 #i‡
HAVE_HWPPP


192 
µp_hwty≥
.
tôÀ
 = 
	`_
("Point-to-Point Protocol");

194 #i‡
HAVE_HWHDLCLAPB


195 
hdlc_hwty≥
.
tôÀ
 = 
	`_
("(Cisco)-HDLC");

196 
œpb_hwty≥
.
tôÀ
 = 
	`_
("LAPB");

198 #i‡
HAVE_HWARC


199 
¨˙ë_hwty≥
.
tôÀ
 = 
	`_
("ARCnet");

201 #i‡
HAVE_HWFR


202 
dlci_hwty≥
.
tôÀ
 = 
	`_
("Frame Relay DLCI");

203 
‰ad_hwty≥
.
tôÀ
 = 
	`_
("Frame Relay Access Device");

205 #i‡
HAVE_HWSIT


206 
sô_hwty≥
.
tôÀ
 = 
	`_
("IPv6-in-IPv4");

208 #i‡
HAVE_HWIRDA


209 
úda_hwty≥
.
tôÀ
 = 
	`_
("IrLAP");

211 #i‡
HAVE_HWTR


212 
å_hwty≥
.
tôÀ
 = 
	`_
("16/4 Mbps Token Ring");

213 #ifde‡
ARPHRD_IEEE802_TR


214 
å_hwty≥1
.
tôÀ
 = 
	`_
("16/4 Mbps Token Ring (New)") ;

217 #i‡
HAVE_HWEC


218 
ec_hwty≥
.
tôÀ
 = 
	`_
("Econet");

220 
sVhwöô
 = 1;

221 
	}
}

224 
hwty≥
 *
	$gë_hwty≥
(c⁄° *
«me
)

226 
hwty≥
 **
hwp
;

228 i‡(!
sVhwöô
)

229 
	`hwöô
();

231 
hwp
 = 
hwty≥s
;

232 *
hwp
 !
NULL
) {

233 i‡(!
	`°rcmp
((*
hwp
)->
«me
,Çame))

234  (*
hwp
);

235 
hwp
++;

237  (
NULL
);

238 
	}
}

242 
hwty≥
 *
	$gë_hw¡y≥
(
ty≥
)

244 
hwty≥
 **
hwp
;

246 i‡(!
sVhwöô
)

247 
	`hwöô
();

249 
hwp
 = 
hwty≥s
;

250 *
hwp
 !
NULL
) {

251 i‡((*
hwp
)->
ty≥
 ==Åype)

252  (*
hwp
);

253 
hwp
++;

255  (
NULL
);

256 
	}
}

259 
	$¥öt_hwli°
(
ty≥
) {

260 
cou¡
 = 0;

261 * 
txt
;

262 
hwty≥
 **
hwp
;

264 i‡(!
sVhwöô
)

265 
	`hwöô
();

267 
hwp
 = 
hwty≥s
;

268 *
hwp
 !
NULL
) {

269 i‡(((
ty≥
 =1Ë&& ((*
hwp
)->
Æí
 == 0)) || ((*hwp)->type == -1)) {

270 
hwp
++; ;

272 i‡((
cou¡
 % 3Ë=0Ë
	`Ârötf
(
°dîr
,count?"\n ":" ");

273 
txt
 = (*
hwp
)->
«me
; if (!txt)Åxt = "..";

274 
	`Ârötf
(
°dîr
,"%†(%sË",
txt
,(*
hwp
)->
tôÀ
);

275 
cou¡
++;

276 
hwp
++;

278 
	`Ârötf
(
°dîr
,"\n");

279 
	}
}

282 
	$hw_nuŒ_addªss
(
hwty≥
 *
hw
, *
≠
)

284 
i
;

285 *
addªss
 = (*)
≠
;

286 
i
 = 0; i < 
hw
->
Æí
; i++)

287 i‡(
addªss
[
i
])

290 
	}
}

	@net-tools-1.60/lib/inet.c

29 
	~"c⁄fig.h
"

34 #i‡
HAVE_AFINET
 || 
HAVE_AFINET6


35 
	~<√töë/ö.h
>

36 
	~<sys/ty≥s.h
>

37 
	~<sys/sockë.h
>

38 
	~<¨∑/öë.h
>

39 
	~<¨∑/«me£r.h
>

40 
	~<˘y≥.h
>

41 
	~<î∫o.h
>

42 
	~<√tdb.h
>

43 
	~<ªsﬁv.h
>

44 
	~<°dlib.h
>

45 
	~<°rög.h
>

46 
	~<°dio.h
>

47 
	~<uni°d.h
>

48 
	~"vîsi⁄.h
"

49 
	~"√t-suµ‹t.h
"

50 
	~"∑th«mes.h
"

51 
	~"öé.h
"

52 
	~"utû.h
"

54 
h_î∫o
;

57 
	saddr
 {

58 
sockaddr_ö
 
	maddr
;

59 *
	m«me
;

60 
	mho°
;

61 
addr
 *
	m√xt
;

64 
	s£rvi˚
 {

65 
	mnumbî
;

66 *
	m«me
;

67 
£rvi˚
 *
	m√xt
;

70 
£rvi˚
 *
	gt˝_«me
 = 
NULL
, *
	gudp_«me
 = NULL, *
	gøw_«me
 = NULL;

72 #i‡
HAVE_AFINET


74 
addr
 *
	gINET_¬
 = 
NULL
;

77 
	$INET_ªsﬁve
(*
«me
, 
sockaddr_ö
 *
sö
, 
ho°fú°
)

79 
ho°ít
 *
hp
;

80 
√ã¡
 *
≈
;

83 
sö
->
sö_Ámûy
 = 
AF_INET
;

84 
sö
->
sö_p‹t
 = 0;

87 i‡(!
	`°rcmp
(
«me
, "default")) {

88 
sö
->
sö_addr
.
s_addr
 = 
INADDR_ANY
;

92 i‡(
	`öë_©⁄
(
«me
, &
sö
->
sö_addr
)) {

96 #ifde‡
DEBUG


97 i‡(
ho°fú°
Ë
	`Ârötf
 (
°dîr
, "gëho°by«mê(%s)\n", 
«me
);

99 i‡(
ho°fú°
 &&

100 (
hp
 = 
	`gëho°by«me
(
«me
)Ë!(
ho°ít
 *Ë
NULL
) {

101 
	`mem˝y
((*Ë&
sö
->
sö_addr
, (*Ë
hp
->
h_addr_li°
[0],

102 (
ö_addr
));

106 #ifde‡
DEBUG


107 
	`Ârötf
 (
°dîr
, "gë√tby«mê(%s)\n", 
«me
);

109 i‡((
≈
 = 
	`gë√tby«me
(
«me
)Ë!(
√ã¡
 *Ë
NULL
) {

110 
sö
->
sö_addr
.
s_addr
 = 
	`ht⁄l
(
≈
->
n_√t
);

113 i‡(
ho°fú°
) {

115 
î∫o
 = 
h_î∫o
;

118 #ifde‡
DEBUG


119 
	`ªs_öô
();

120 
_ªs
.
›ti⁄s
 |
RES_DEBUG
;

123 #ifde‡
DEBUG


124 
	`Ârötf
 (
°dîr
, "gëho°by«mê(%s)\n", 
«me
);

126 i‡((
hp
 = 
	`gëho°by«me
(
«me
)Ë=(
ho°ít
 *Ë
NULL
) {

127 
î∫o
 = 
h_î∫o
;

130 
	`mem˝y
((*Ë&
sö
->
sö_addr
, (*Ë
hp
->
h_addr_li°
[0],

131 (
ö_addr
));

134 
	}
}

141 
	$INET_ºesﬁve
(*
«me
, 
size_t
 
Àn
, 
sockaddr_ö
 *
sö
,

142 
numîic
, 
√tmask
)

144 
ho°ít
 *
ít
;

145 
√ã¡
 *
≈
;

146 
addr
 *
≤
;

147 
ad
, 
ho°_ad
;

148 
ho°
 = 0;

151 i‡(
sö
->
sö_Ámûy
 !
AF_INET
) {

152 #ifde‡
DEBUG


153 
	`Ârötf
(
°dîr
, 
	`_
("ºesﬁve: unsuµ‹àaddªs†Ámûy %d !\n"), 
sö
->
sö_Ámûy
);

155 
î∫o
 = 
EAFNOSUPPORT
;

158 
ad
 = (Ë
sö
->
sö_addr
.
s_addr
;

159 #ifde‡
DEBUG


160 
	`Ârötf
 (
°dîr
, "ºesﬁve: %08lx, mask %08x,Çum %08x \n", 
ad
, 
√tmask
, 
numîic
);

162 i‡(
ad
 =
INADDR_ANY
) {

163 i‡((
numîic
 & 0x0FFF) == 0) {

164 i‡(
numîic
 & 0x8000)

165 
	`ß„_°∫˝y
(
«me
, "deÁu…", 
Àn
);

167 
	`ß„_°∫˝y
(
«me
, "*", 
Àn
);

171 i‡(
numîic
 & 0x0FFF) {

172 
	`ß„_°∫˝y
(
«me
, 
	`öë_¡ﬂ
(
sö
->
sö_addr
), 
Àn
);

176 i‡((
ad
 & (~
√tmask
)Ë!0 || (
numîic
 & 0x4000))

177 
ho°
 = 1;

179 
INET_¬
 = 
NULL
;

181 
≤
 = 
INET_¬
;

182 
≤
 !
NULL
) {

183 i‡(
≤
->
addr
.
sö_addr
.
s_addr
 =
ad
 &&Ön->
ho°
 == host) {

184 
	`ß„_°∫˝y
(
«me
, 
≤
->«me, 
Àn
);

185 #ifde‡
DEBUG


186 
	`Ârötf
 (
°dîr
, "ºesﬁve: found %†%08lx i¿ˇche\n", (
ho°
? "ho°": "√t"), 
ad
);

190 
≤
 =Ön->
√xt
;

193 
ho°_ad
 = 
	`¡ohl
(
ad
);

194 
≈
 = 
NULL
;

195 
ít
 = 
NULL
;

196 i‡(
ho°
) {

197 #ifde‡
DEBUG


198 
	`Ârötf
 (
°dîr
, "gëho°byadd∏(%08lx)\n", 
ad
);

200 
ít
 = 
	`gëho°byaddr
((*Ë&
ad
, 4, 
AF_INET
);

201 i‡(
ít
 !
NULL
)

202 
	`ß„_°∫˝y
(
«me
, 
ít
->
h_«me
, 
Àn
);

204 #ifde‡
DEBUG


205 
	`Ârötf
 (
°dîr
, "gë√tbyadd∏(%08lx)\n", 
ho°_ad
);

207 
≈
 = 
	`gë√tbyaddr
(
ho°_ad
, 
AF_INET
);

208 i‡(
≈
 !
NULL
)

209 
	`ß„_°∫˝y
(
«me
, 
≈
->
n_«me
, 
Àn
);

211 i‡((
ít
 =
NULL
Ë&& (
≈
 == NULL))

212 
	`ß„_°∫˝y
(
«me
, 
	`öë_¡ﬂ
(
sö
->
sö_addr
), 
Àn
);

213 
≤
 = (
addr
 *Ë
	`mÆloc
((addr));

214 
≤
->
addr
 = *
sö
;

215 
≤
->
√xt
 = 
INET_¬
;

216 
≤
->
ho°
 = host;

217 
≤
->
«me
 = (*Ë
	`mÆloc
(
	`°æí
(name) + 1);

218 
	`°r˝y
(
≤
->
«me
,Çame);

219 
INET_¬
 = 
≤
;

222 
	}
}

225 
	$INET_ª£º‹
(*
ãxt
)

227 
	`hîr‹
(
ãxt
);

228 
	}
}

232 *
	$INET_¥öt
(*
±r
)

234  (
	`öë_¡ﬂ
((*(
ö_addr
 *Ë
±r
)));

235 
	}
}

239 *
	$INET_•röt
(
sockaddr
 *
ßp
, 
numîic
)

241 
buff
[128];

243 i‡(
ßp
->
ß_Ámûy
 == 0xFFFF || sap->sa_family == 0)

244  
	`ß„_°∫˝y
(
buff
, 
	`_
("[NONE SET]"), (buff));

246 i‡(
	`INET_ºesﬁve
(
buff
, (buff), (
sockaddr_ö
 *Ë
ßp
,

247 
numîic
, 0xffffff00) != 0)

248  (
NULL
);

250  (
buff
);

251 
	}
}

253 *
	$INET_•rötmask
(
sockaddr
 *
ßp
, 
numîic
,

254 
√tmask
)

256 
buff
[128];

258 i‡(
ßp
->
ß_Ámûy
 == 0xFFFF || sap->sa_family == 0)

259  
	`ß„_°∫˝y
(
buff
, 
	`_
("[NONE SET]"), (buff));

260 i‡(
	`INET_ºesﬁve
(
buff
, (buff), (
sockaddr_ö
 *Ë
ßp
,

261 
numîic
, 
√tmask
) != 0)

262  (
NULL
);

263  (
buff
);

264 
	}
}

267 
	$INET_gësock
(*
buÂ
, 
sockaddr
 *
ßp
)

269 *
•
 = 
buÂ
, *
bp
;

270 
i
;

271 
vÆ
;

272 
sockaddr_ö
 *
sö
;

274 
sö
 = (
sockaddr_ö
 *Ë
ßp
;

275 
sö
->
sö_Ámûy
 = 
AF_INET
;

276 
sö
->
sö_p‹t
 = 0;

278 
vÆ
 = 0;

279 
bp
 = (*Ë&
vÆ
;

280 
i
 = 0; i < (
sö
->
sö_addr
.
s_addr
); i++) {

281 *
•
 = 
	`touµî
(*sp);

283 i‡((*
•
 >= 'A') && (*sp <= 'F'))

284 
bp
[
i
] |(Ë(*
•
 - 'A') + 10;

285 i‡((*
•
 >= '0') && (*sp <= '9'))

286 
bp
[
i
] |(Ë(*
•
 - '0');

290 
bp
[
i
] <<= 4;

291 
•
++;

292 *
•
 = 
	`touµî
(*sp);

294 i‡((*
•
 >= 'A') && (*sp <= 'F'))

295 
bp
[
i
] |(Ë(*
•
 - 'A') + 10;

296 i‡((*
•
 >= '0') && (*sp <= '9'))

297 
bp
[
i
] |(Ë(*
•
 - '0');

301 
•
++;

303 
sö
->
sö_addr
.
s_addr
 = 
	`ht⁄l
(
vÆ
);

305  (
•
 - 
buÂ
);

306 
	}
}

308 
	$INET_öput
(
ty≥
, *
buÂ
, 
sockaddr
 *
ßp
)

310 
ty≥
) {

312  (
	`INET_gësock
(
buÂ
, 
ßp
));

314  (
	`INET_ªsﬁve
(
buÂ
, (
sockaddr_ö
 *Ë
ßp
, 1));

316  (
	`INET_ªsﬁve
(
buÂ
, (
sockaddr_ö
 *Ë
ßp
, 0));

318 
	}
}

320 
	$INET_gë√tmask
(*
adr
, 
sockaddr
 *
m
, *
«me
)

322 
sockaddr_ö
 *
mask
 = (sockaddr_ö *Ë
m
;

323 *
¶ash
, *
íd
;

324 
¥efix
;

326 i‡((
¶ash
 = 
	`°rchr
(
adr
, '/')Ë=
NULL
)

329 *
¶ash
++ = '\0';

330 
¥efix
 = 
	`°πoul
(
¶ash
, &
íd
, 0);

331 i‡(*
íd
 != '\0')

334 i‡(
«me
) {

335 
	`•rötf
(
«me
, "/%d", 
¥efix
);

337 
mask
->
sö_Ámûy
 = 
AF_INET
;

338 
mask
->
sö_addr
.
s_addr
 = 
	`ht⁄l
(~(0xffffffffU >> 
¥efix
));

340 
	}
}

343 
a·y≥
 
	göë_a·y≥
 =

345 "öë", 
NULL
, 
AF_INET
, (),

346 
INET_¥öt
, 
INET_•röt
, 
INET_öput
, 
INET_ª£º‹
,

347 
NULL
 , NULL ,

348 
INET_gë√tmask
,

350 
NULL


355 
	$add2li°
(
£rvi˚
 **
«meba£
, £rvi˚ *
ôem
)

357 i‡(*
«meba£
 =
NULL
) {

358 *
«meba£
 = 
ôem
;

359 
ôem
->
√xt
 = 
NULL
;

361 
ôem
->
√xt
 = *
«meba£
;

362 *
«meba£
 = 
ôem
;

364 
	}
}

367 
£rvi˚
 *
	$£¨chli°
(
£rvi˚
 *
£rvi˚ba£
, 
numbî
)

369 
£rvi˚
 *
ôem
;

371 
ôem
 = 
£rvi˚ba£
; iãm !
NULL
; iãm = iãm->
√xt
) {

372 i‡(
ôem
->
numbî
 ==Çumber)

373  (
ôem
);

375  (
NULL
);

376 
	}
}

379 
	$ªad_£rvi˚s
()

381 
£rvít
 *
£
;

382 
¥Ÿ€¡
 *
≥
;

383 
£rvi˚
 *
ôem
;

385 
	`£t£rvít
(1);

386 (
£
 = 
	`gë£rvít
())) {

388 
ôem
 = (
£rvi˚
 *Ë
	`mÆloc
((service));

389 i‡(
ôem
 =
NULL
)

390 
	`≥º‹
("netstat");

391 
ôem
->
«me
 = 
	`°rdup
(
£
->
s_«me
);

392 
ôem
->
numbî
 = 
£
->
s_p‹t
;

395 i‡(!
	`°rcmp
(
£
->
s_¥Ÿo
, "tcp")) {

396 
	`add2li°
(&
t˝_«me
, 
ôem
);

397 } i‡(!
	`°rcmp
(
£
->
s_¥Ÿo
, "udp")) {

398 
	`add2li°
(&
udp_«me
, 
ôem
);

399 } i‡(!
	`°rcmp
(
£
->
s_¥Ÿo
, "raw")) {

400 
	`add2li°
(&
øw_«me
, 
ôem
);

403 
	`íd£rvít
();

404 
	`£çrŸ€¡
(1);

405 (
≥
 = 
	`gë¥Ÿ€¡
())) {

407 
ôem
 = (
£rvi˚
 *Ë
	`mÆloc
((service));

408 i‡(
ôem
 =
NULL
)

409 
	`≥º‹
("netstat");

410 
ôem
->
«me
 = 
	`°rdup
(
≥
->
p_«me
);

411 
ôem
->
numbî
 = 
	`ht⁄s
(
≥
->
p_¥Ÿo
);

412 
	`add2li°
(&
øw_«me
, 
ôem
);

414 
	`íd¥Ÿ€¡
();

416 
	}
}

419 *
	$gë_¢ame
(
socknumbî
, *
¥Ÿo
, 
numîic
)

421 
buf„r
[64], 
öô
 = 0;

422 
£rvi˚
 *
ôem
;

424 i‡(
socknumbî
 == 0)

426 i‡(
numîic
) {

427 
	`•rötf
(
buf„r
, "%d", 
	`¡ohs
(
socknumbî
));

428  (
buf„r
);

430 i‡(!
öô
) {

431 (Ë
	`ªad_£rvi˚s
();

432 
öô
 = 1;

434 
buf„r
[0] = '\0';

435 i‡(!
	`°rcmp
(
¥Ÿo
, "tcp")) {

436 i‡((
ôem
 = 
	`£¨chli°
(
t˝_«me
, 
socknumbî
)Ë!
NULL
)

437 
	`•rötf
(
buf„r
, "%s", 
ôem
->
«me
);

438 } i‡(!
	`°rcmp
(
¥Ÿo
, "udp")) {

439 i‡((
ôem
 = 
	`£¨chli°
(
udp_«me
, 
socknumbî
)Ë!
NULL
)

440 
	`•rötf
(
buf„r
, "%s", 
ôem
->
«me
);

441 } i‡(!
	`°rcmp
(
¥Ÿo
, "raw")) {

442 i‡((
ôem
 = 
	`£¨chli°
(
øw_«me
, 
socknumbî
)Ë!
NULL
)

443 
	`•rötf
(
buf„r
, "%s", 
ôem
->
«me
);

446 i‡(!
buf„r
[0])

447 
	`•rötf
(
buf„r
, "%d", 
	`¡ohs
(
socknumbî
));

448  (
buf„r
);

449 
	}
}

	@net-tools-1.60/lib/inet6.c

22 
	~"c⁄fig.h
"

24 #i‡
HAVE_AFINET6


25 
	~<asm/ty≥s.h
>

26 
	~<sys/ty≥s.h
>

27 
	~<sys/sockë.h
>

28 
	~<√töë/ö.h
>

29 
	~<¨∑/öë.h
>

30 
	~<¨∑/«me£r.h
>

31 
	~<˘y≥.h
>

32 
	~<î∫o.h
>

33 
	~<√tdb.h
>

34 
	~<ªsﬁv.h
>

35 
	~<°dlib.h
>

36 
	~<°rög.h
>

37 
	~<°dio.h
>

38 
	~<uni°d.h
>

39 
	~"vîsi⁄.h
"

40 
	~"√t-suµ‹t.h
"

41 
	~"∑th«mes.h
"

42 
	~"öé.h
"

43 
	~"utû.h
"

45 
h_î∫o
;

47 
	$INET6_ªsﬁve
(*
«me
, 
sockaddr_ö6
 *
sö6
)

49 
addröfo
 
ªq
, *
ai
;

50 
s
;

52 
	`mem£t
 (&
ªq
, '\0', Ñeq);

53 
ªq
.
ai_Ámûy
 = 
AF_INET6
;

54 i‡((
s
 = 
	`gëaddröfo
(
«me
, 
NULL
, &
ªq
, &
ai
))) {

55 
	`Ârötf
(
°dîr
, "gëaddröfo: %s: %d\n", 
«me
, 
s
);

58 
	`mem˝y
(
sö6
, 
ai
->
ai_addr
, (
sockaddr_ö6
));

60 
	`‰ìaddröfo
(
ai
);

63 
	}
}

65 #i‚de‡
IN6_IS_ADDR_UNSPECIFIED


66 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

67 (((
__u32
 *Ë(
a
))[0] == 0 && ((__u32 *) (a))[1] == 0 && \

68 ((
__u32
 *Ë(
a
))[2] =0 && ((__u32 *Ë◊))[3] =0)

	)

72 
	$INET6_ºesﬁve
(*
«me
, 
sockaddr_ö6
 *
sö6
, 
numîic
)

74 
s
;

77 i‡(
sö6
->
sö6_Ámûy
 !
AF_INET6
) {

78 #ifde‡
DEBUG


79 
	`Ârötf
(
°dîr
, 
	`_
("rresolve: unsupportáddress family %d !\n"),

80 
sö6
->
sö6_Ámûy
);

82 
î∫o
 = 
EAFNOSUPPORT
;

85 i‡(
numîic
 & 0x7FFF) {

86 
	`öë_¡›
(
AF_INET6
, &
sö6
->
sö6_addr
, 
«me
, 80);

89 i‡(
	`IN6_IS_ADDR_UNSPECIFIED
(&
sö6
->
sö6_addr
)) {

90 i‡(
numîic
 & 0x8000)

91 
	`°r˝y
(
«me
, "default");

93 
	`°r˝y
(
«me
, "*");

97 i‡((
s
 = 
	`gë«meöfo
((
sockaddr
 *Ë
sö6
, (
sockaddr_ö6
),

98 
«me
, 255 , 
NULL
, 0, 0))) {

99 
	`Âuts
("gë«meöfÿÁûed\n", 
°dîr
);

103 
	}
}

106 
	$INET6_ª£º‹
(*
ãxt
)

108 
	`hîr‹
(
ãxt
);

109 
	}
}

113 *
	$INET6_¥öt
(*
±r
)

115 
«me
[80];

117 
	`öë_¡›
(
AF_INET6
, (
ö6_addr
 *Ë
±r
, 
«me
, 80);

118  
«me
;

119 
	}
}

124 *
	$INET6_•röt
(
sockaddr
 *
ßp
, 
numîic
)

126 
buff
[128];

128 i‡(
ßp
->
ß_Ámûy
 == 0xFFFF || sap->sa_family == 0)

129  
	`ß„_°∫˝y
(
buff
, 
	`_
("[NONE SET]"), (buff));

130 i‡(
	`INET6_ºesﬁve
(
buff
, (
sockaddr_ö6
 *Ë
ßp
, 
numîic
) != 0)

131  
	`ß„_°∫˝y
(
buff
, 
	`_
("[UNKNOWN]"), (buff));

132  (
buff
);

133 
	}
}

136 
	$INET6_gësock
(*
buÂ
, 
sockaddr
 *
ßp
)

138 
sockaddr_ö6
 *
sö6
;

140 
sö6
 = (
sockaddr_ö6
 *Ë
ßp
;

141 
sö6
->
sö6_Ámûy
 = 
AF_INET6
;

142 
sö6
->
sö6_p‹t
 = 0;

144 i‡(
	`öë_±⁄
(
AF_INET6
, 
buÂ
, 
sö6
->
sö6_addr
.
s6_addr
) <= 0)

148 
	}
}

150 
	$INET6_öput
(
ty≥
, *
buÂ
, 
sockaddr
 *
ßp
)

152 
ty≥
) {

154  (
	`INET6_gësock
(
buÂ
, 
ßp
));

156  (
	`INET6_ªsﬁve
(
buÂ
, (
sockaddr_ö6
 *Ë
ßp
));

158 
	}
}

161 
a·y≥
 
	göë6_a·y≥
 =

163 "öë6", 
NULL
, 
AF_INET6
, (
ö6_addr
),

164 
INET6_¥öt
, 
INET6_•röt
, 
INET6_öput
, 
INET6_ª£º‹
,

165 
INET6_Ωröt
, 
INET6_röput
, 
NULL
,

	@net-tools-1.60/lib/inet6_gr.c

7 
	~"c⁄fig.h
"

9 #i‡
HAVE_AFINET6


10 
	~<asm/ty≥s.h
>

11 
	~<asm/∑øm.h
>

12 
	~<sys/ty≥s.h
>

13 
	~<sys/sockë.h
>

14 
	~<√töë/ö.h
>

15 
	~<¨∑/öë.h
>

16 
	~<¨∑/«me£r.h
>

18 
	~<˘y≥.h
>

19 
	~<î∫o.h
>

20 
	~<√tdb.h
>

21 
	~<ªsﬁv.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<°dio.h
>

25 
	~<uni°d.h
>

26 #i‚de‡
__GLIBC__


27 
	~<√töë6/ùv6_rouã.h
>

29 
	~"vîsi⁄.h
"

30 
	~"√t-suµ‹t.h
"

31 
	~"∑th«mes.h
"

32 
	~"öé.h
"

33 
	~"√t-„©uªs.h
"

37 
	#NUD_INCOMPLETE
 0x01

	)

38 
	#NUD_REACHABLE
 0x02

	)

39 
	#NUD_STALE
 0x04

	)

40 
	#NUD_DELAY
 0x08

	)

41 
	#NUD_PROBE
 0x10

	)

42 
	#NUD_FAILED
 0x20

	)

44 
	#NUD_NOARP
 0x40

	)

45 
	#NUD_PERMANENT
 0x80

	)

46 
	#NUD_NONE
 0x00

	)

48 
	#NTF_PROXY
 0x08

	)

49 
	#NTF_ROUTER
 0x80

	)

50 
	#NTF_02
 0x02

	)

51 
	#NTF_04
 0x04

	)

56 
a·y≥
 
öë6_a·y≥
;

59 
	$Ωröt_fib6
(
ext
, 
numîic
)

61 
buff
[4096], 
iÁ˚
[16], 
Êags
[16];

62 
addr6
[128], 
«ddr6
[128];

63 
sockaddr_ö6
 
ßddr6
, 
¢addr6
;

64 
num
, 
iÊags
, 
mëric
, 
ªf˙t
, 
u£
, 
¥efix_Àn
, 
¶í
;

65 
FILE
 *
Â
 = 
	`f›í
(
_PATH_PROCNET_ROUTE6
, "r");

67 
addr6p
[8][5], 
ßddr6p
[8][5], 
«ddr6p
[8][5];

69 i‡(!
Â
) {

70 
	`≥º‹
(
_PATH_PROCNET_ROUTE6
);

71 
	`¥ötf
(
	`_
("INET6 (IPv6)Çot configured inÅhis system.\n"));

74 
	`¥ötf
(
	`_
("Kernel IPv6ÑoutingÅable\n"));

76 
	`¥ötf
(
	`_
("Destination "

80 
	`fgës
(
buff
, 1023, 
Â
)) {

81 
num
 = 
	`ssˇnf
(
buff
, "%4s%4s%4s%4s%4s%4s%4s%4s %02x %4s%4s%4s%4s%4s%4s%4s%4s %02x %4s%4s%4s%4s%4s%4s%4s%4s %08x %08x %08x %08x %s\n",

82 
addr6p
[0],áddr6p[1],áddr6p[2],áddr6p[3],

83 
addr6p
[4],áddr6p[5],áddr6p[6],áddr6p[7],

84 &
¥efix_Àn
,

85 
ßddr6p
[0], saddr6p[1], saddr6p[2], saddr6p[3],

86 
ßddr6p
[4], saddr6p[5], saddr6p[6], saddr6p[7],

87 &
¶í
,

88 
«ddr6p
[0],Çaddr6p[1],Çaddr6p[2],Çaddr6p[3],

89 
«ddr6p
[4],Çaddr6p[5],Çaddr6p[6],Çaddr6p[7],

90 &
mëric
, &
u£
, &
ªf˙t
, &
iÊags
, 
iÁ˚
);

92 i‡(
num
 < 23)

95 i‡(!(
iÊags
 & 
RTF_UP
))

98 
	`¢¥ötf
(
addr6
, (addr6), "%s:%s:%s:%s:%s:%s:%s:%s",

99 
addr6p
[0],áddr6p[1],áddr6p[2],áddr6p[3],

100 
addr6p
[4],áddr6p[5],áddr6p[6],áddr6p[7]);

101 
öë6_a·y≥
.
	`öput
(1, 
addr6
, (
sockaddr
 *Ë&
ßddr6
);

102 
	`¢¥ötf
(
addr6
, (addr6), "%s/%d",

103 
öë6_a·y≥
.
	`•röt
((
sockaddr
 *Ë&
ßddr6
, 1),

104 
¥efix_Àn
);

107 
	`¢¥ötf
(
«ddr6
, (naddr6), "%s:%s:%s:%s:%s:%s:%s:%s",

108 
«ddr6p
[0],Çaddr6p[1],Çaddr6p[2],Çaddr6p[3],

109 
«ddr6p
[4],Çaddr6p[5],Çaddr6p[6],Çaddr6p[7]);

110 
öë6_a·y≥
.
	`öput
(1, 
«ddr6
, (
sockaddr
 *Ë&
¢addr6
);

111 
	`¢¥ötf
(
«ddr6
, (naddr6), "%s",

112 
öë6_a·y≥
.
	`•röt
((
sockaddr
 *Ë&
¢addr6
, 1));

115 
	`°r˝y
(
Êags
, "U");

116 i‡(
iÊags
 & 
RTF_GATEWAY
)

117 
	`°rˇt
(
Êags
, "G");

118 i‡(
iÊags
 & 
RTF_HOST
)

119 
	`°rˇt
(
Êags
, "H");

120 i‡(
iÊags
 & 
RTF_DEFAULT
)

121 
	`°rˇt
(
Êags
, "D");

122 i‡(
iÊags
 & 
RTF_ADDRCONF
)

123 
	`°rˇt
(
Êags
, "A");

124 i‡(
iÊags
 & 
RTF_CACHE
)

125 
	`°rˇt
(
Êags
, "C");

128 
	`¥ötf
("%-43s %-39s %-5s %-6d %-2d %7d %-8s\n",

129 
addr6
, 
«ddr6
, 
Êags
, 
mëric
, 
ªf˙t
, 
u£
, 
iÁ˚
);

132 (Ë
	`f˛o£
(
Â
);

134 
	}
}

136 
	$Ωröt_ˇche6
(
ext
, 
numîic
)

138 
buff
[4096], 
iÁ˚
[16], 
Êags
[16];

139 
addr6
[128], 
haddr
[20], 
°©e°r
[20];

140 
sockaddr_ö6
 
ßddr6
;

141 
ty≥
, 
num
, 
ªf˙t
, 
¥efix_Àn
, 
loˇti⁄
, 
°©e
, 
gc
;

142 
t°amp
, 
expúe
, 
ndÊags
, 
ªachabÀ
, 
°Æe
, 
dñëe
;

143 
FILE
 *
Â
 = 
	`f›í
(
_PATH_PROCNET_NDISC
, "r");

144 
addr6p
[8][5], 
haddΩ
[6][3];

146 i‡(!
Â
) {

147 
	`ESYSNOT
("nd_print", "ND Table");

150 
	`¥ötf
(
	`_
("Kernel IPv6 Neighbour Cache\n"));

152 i‡(
ext
 == 2)

153 
	`¥ötf
(
	`_
("Neighbour "

157 
	`¥ötf
(
	`_
("Neighbour "

162 
	`fgës
(
buff
, 1023, 
Â
)) {

163 
num
 = 
	`ssˇnf
(
buff
, "%4s%4s%4s%4s%4s%4s%4s%4s %02x %02x %02x %02x %08lx %08lx %08lx %04x %04x %04lx %8s %2s%2s%2s%2s%2s%2s\n",

164 
addr6p
[0],áddr6p[1],áddr6p[2],áddr6p[3],

165 
addr6p
[4],áddr6p[5],áddr6p[6],áddr6p[7],

166 &
loˇti⁄
, &
¥efix_Àn
, &
ty≥
, &
°©e
, &
expúe
, &
t°amp
, &
ªachabÀ
, &
gc
, &
ªf˙t
,

167 &
ndÊags
, 
iÁ˚
,

168 
haddΩ
[0], haddrp[1], haddrp[2], haddrp[3], haddrp[4], haddrp[5]);

171 
	`¢¥ötf
(
addr6
, (addr6), "%s:%s:%s:%s:%s:%s:%s:%s",

172 
addr6p
[0],áddr6p[1],áddr6p[2],áddr6p[3],

173 
addr6p
[4],áddr6p[5],áddr6p[6],áddr6p[7]);

174 
öë6_a·y≥
.
	`öput
(1, 
addr6
, (
sockaddr
 *Ë&
ßddr6
);

175 
	`¢¥ötf
(
addr6
, (addr6), "%s/%d",

176 
öë6_a·y≥
.
	`•röt
((
sockaddr
 *Ë&
ßddr6
, 
numîic
),

177 
¥efix_Àn
);

180 
	`¢¥ötf
(
haddr
, (haddr), "%s:%s:%s:%s:%s:%s",

181 
haddΩ
[0], haddrp[1], haddrp[2], haddrp[3], haddrp[4], haddrp[5]);

184 
Êags
[0] = '\0';

185 i‡(
ndÊags
 & 
NTF_ROUTER
)

186 
	`°rˇt
(
Êags
, "R");

187 i‡(
ndÊags
 & 
NTF_04
)

188 
	`°rˇt
(
Êags
, "x");

189 i‡(
ndÊags
 & 
NTF_02
)

190 
	`°rˇt
(
Êags
, "h");

191 i‡(
ndÊags
 & 
NTF_PROXY
)

192 
	`°rˇt
(
Êags
, "P");

195 
°©e
) {

196 
NUD_NONE
:

197 
	`°r˝y
(
°©e°r
, "NONE");

199 
NUD_INCOMPLETE
:

200 
	`°r˝y
(
°©e°r
, "INCOMPLETE");

202 
NUD_REACHABLE
:

203 
	`°r˝y
(
°©e°r
, "REACHABLE");

205 
NUD_STALE
:

206 
	`°r˝y
(
°©e°r
, "STALE");

208 
NUD_DELAY
:

209 
	`°r˝y
(
°©e°r
, "DELAY");

211 
NUD_PROBE
:

212 
	`°r˝y
(
°©e°r
, "PROBE");

214 
NUD_FAILED
:

215 
	`°r˝y
(
°©e°r
, "FAILED");

217 
NUD_NOARP
:

218 
	`°r˝y
(
°©e°r
, "NOARP");

220 
NUD_PERMANENT
:

221 
	`°r˝y
(
°©e°r
, "PERM");

224 
	`¢¥ötf
(
°©e°r
, (°©e°r), "UNKNOWN(%02x)", 
°©e
);

229 
	`¥ötf
("%-43s %-17s %-8s %-5s %-3d %-16s",

230 
addr6
, 
haddr
, 
iÁ˚
, 
Êags
, 
ªf˙t
, 
°©e°r
);

232 
°Æe
 = 0;

233 i‡(
°©e
 =
NUD_REACHABLE
)

234 
°Æe
 = 
ªachabÀ
 > 
t°amp
 ?Ñeachable -Åstamp : 0;

235 
dñëe
 = 
gc
 > 
t°amp
 ? gc -Åstamp : 0;

236 i‡(
ext
 != 2) {

237 
	`¥ötf
(" %-9ld ", 
°Æe
 / 
HZ
);

238 i‡(
ªf˙t
)

239 
	`¥ötf
(" * ");

241 
	`¥ötf
(" %-7ld ", 
dñëe
 / 
HZ
);

243 
	`¥ötf
("\n");

246 (Ë
	`f˛o£
(
Â
);

248 
	}
}

250 
	$INET6_Ωröt
(
›ti⁄s
)

252 
ext
 = 
›ti⁄s
 & 
FLAG_EXT
;

253 
numîic
 = 
›ti⁄s
 & (
FLAG_NUM_HOST
 | 
FLAG_SYM
);

254 
rc
 = 
E_INTERN
;

256 i‡(
›ti⁄s
 & 
FLAG_FIB
)

257 i‡((
rc
 = 
	`Ωröt_fib6
(
ext
, 
numîic
)))

258  (
rc
);

260 i‡(
›ti⁄s
 & 
FLAG_CACHE
)

261 i‡((
rc
 = 
	`Ωröt_ˇche6
(
ext
, 
numîic
)))

262  (
rc
);

263  (
rc
);

264 
	}
}

	@net-tools-1.60/lib/inet6_sr.c

6 
	~"c⁄fig.h
"

8 #i‡
HAVE_AFINET6


9 
	~<asm/ty≥s.h
>

10 
	~<sys/∑øm.h
>

11 
	~<sys/ty≥s.h
>

12 
	~<sys/sockë.h
>

13 
	~<√töë/ö.h
>

14 
	~<¨∑/öë.h
>

15 
	~<¨∑/«me£r.h
>

16 
	~<√t/if.h
>

17 
	~<sys/io˘l.h
>

18 
	~<˘y≥.h
>

19 
	~<î∫o.h
>

20 
	~<√tdb.h
>

21 
	~<ªsﬁv.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<°dio.h
>

25 
	~<uni°d.h
>

26 #ifde‡
__GLIBC__


27 
	~<√t/rouã.h
>

29 
	~<√töë6/ùv6_rouã.h
>

31 
	~"vîsi⁄.h
"

32 
	~"√t-suµ‹t.h
"

33 
	~"∑th«mes.h
"

34 
	~"öé.h
"

35 
	~"√t-„©uªs.h
"

39 
a·y≥
 
öë6_a·y≥
;

41 
	gskfd
 = -1;

44 
	$ußge
()

46 
	`Ârötf
(
°dîr
, 
	`_
("Usage: inet6_route [-vF] del Target\n"));

47 
	`Ârötf
(
°dîr
, 
	`_
(" inet6_route [-vF]ádd Target [gw Gw] [metric M] [[dev] If]\n"));

48 
	`Ârötf
(
°dîr
, 
	`_
(" inet6_route [-FC] flush NOT supported\n"));

49  (
E_USAGE
);

50 
	}
}

53 
	$INET6_£åouã
(
a˘i⁄
, 
›ti⁄s
, **
¨gs
)

55 
ö6_πmsg
 
π
;

56 
i‰eq
 
i‰
;

57 
sockaddr_ö6
 
ß6
;

58 
èrgë
[128], 
g©eway
[128] = "NONE";

59 
mëric
, 
¥efix_Àn
;

60 *
dev«me
 = 
NULL
;

61 *
˝
;

63 i‡(*
¨gs
 =
NULL
)

64  (
	`ußge
());

66 
	`°r˝y
(
èrgë
, *
¨gs
++);

67 i‡(!
	`°rcmp
(
èrgë
, "default")) {

68 
¥efix_Àn
 = 0;

69 
	`mem£t
(&
ß6
, 0, (sa6));

71 i‡((
˝
 = 
	`°rchr
(
èrgë
, '/'))) {

72 
¥efix_Àn
 = 
	`©ﬁ
(
˝
 + 1);

73 i‡((
¥efix_Àn
 < 0) || (prefix_len > 128))

74 
	`ußge
();

75 *
˝
 = 0;

77 
¥efix_Àn
 = 128;

79 i‡(
öë6_a·y≥
.
	`öput
(1, 
èrgë
, (
sockaddr
 *Ë&
ß6
) < 0

80 && 
öë6_a·y≥
.
	`öput
(0, 
èrgë
, (
sockaddr
 *Ë&
ß6
) < 0) {

81 
öë6_a·y≥
.
	`hîr‹
(
èrgë
);

87 
	`mem£t
((*Ë&
π
, 0, (
ö6_πmsg
));

89 
	`mem˝y
(&
π
.
πmsg_d°
, 
ß6
.
sö6_addr
.
s6_addr
, (
ö6_addr
));

92 
π
.
πmsg_Êags
 = 
RTF_UP
;

93 i‡(
¥efix_Àn
 == 128)

94 
π
.
πmsg_Êags
 |
RTF_HOST
;

95 
π
.
πmsg_mëric
 = 1;

96 
π
.
πmsg_d°_Àn
 = 
¥efix_Àn
;

98 *
¨gs
) {

99 i‡(!
	`°rcmp
(*
¨gs
, "metric")) {

101 
¨gs
++;

102 i‡(!*
¨gs
 || !
	`isdigô
(**args))

103  (
	`ußge
());

104 
mëric
 = 
	`©oi
(*
¨gs
);

105 
π
.
πmsg_mëric
 = 
mëric
;

106 
¨gs
++;

109 i‡(!
	`°rcmp
(*
¨gs
, "gw") || !strcmp(*args, "gateway")) {

110 
¨gs
++;

111 i‡(!*
¨gs
)

112  (
	`ußge
());

113 i‡(
π
.
πmsg_Êags
 & 
RTF_GATEWAY
)

114  (
	`ußge
());

115 
	`°r˝y
(
g©eway
, *
¨gs
);

116 i‡(
öë6_a·y≥
.
	`öput
(1, 
g©eway
,

117 (
sockaddr
 *Ë&
ß6
) < 0) {

118 
öë6_a·y≥
.
	`hîr‹
(
g©eway
);

119  (
E_LOOKUP
);

121 
	`mem˝y
(&
π
.
πmsg_g©eway
, 
ß6
.
sö6_addr
.
s6_addr
,

122 (
ö6_addr
));

123 
π
.
πmsg_Êags
 |
RTF_GATEWAY
;

124 
¨gs
++;

127 i‡(!
	`°rcmp
(*
¨gs
, "mod")) {

128 
¨gs
++;

129 
π
.
πmsg_Êags
 |
RTF_MODIFIED
;

132 i‡(!
	`°rcmp
(*
¨gs
, "dyn")) {

133 
¨gs
++;

134 
π
.
πmsg_Êags
 |
RTF_DYNAMIC
;

137 i‡(!
	`°rcmp
(*
¨gs
, "device") || !strcmp(*args, "dev")) {

138 
¨gs
++;

139 i‡(!*
¨gs
)

140  (
	`ußge
());

141 } i‡(
¨gs
[1])

142  (
	`ußge
());

144 
dev«me
 = *
¨gs
;

145 
¨gs
++;

149 i‡((
skfd
 = 
	`sockë
(
AF_INET6
, 
SOCK_DGRAM
, 0)) < 0) {

150 
	`≥º‹
("socket");

151  (
E_SOCK
);

153 i‡(
dev«me
) {

154 
	`mem£t
(&
i‰
, 0, (ifr));

155 
	`°r˝y
(
i‰
.
i‰_«me
, 
dev«me
);

157 i‡(
	`io˘l
(
skfd
, 
SIOGIFINDEX
, &
i‰
) < 0) {

158 
	`≥º‹
("SIOGIFINDEX");

159  (
E_SOCK
);

161 
π
.
πmsg_ifödex
 = 
i‰
.
i‰_ifödex
;

163 
π
.
πmsg_ifödex
 = 0;

166 i‡(
a˘i⁄
 =
RTACTION_DEL
) {

167 i‡(
	`io˘l
(
skfd
, 
SIOCDELRT
, &
π
) < 0) {

168 
	`≥º‹
("SIOCDELRT");

169 
	`˛o£
(
skfd
);

170  (
E_SOCK
);

173 i‡(
	`io˘l
(
skfd
, 
SIOCADDRT
, &
π
) < 0) {

174 
	`≥º‹
("SIOCADDRT");

175 
	`˛o£
(
skfd
);

176  (
E_SOCK
);

181 (Ë
	`˛o£
(
skfd
);

183 
	}
}

185 
	$INET6_röput
(
a˘i⁄
, 
›ti⁄s
, **
¨gs
)

187 i‡(
a˘i⁄
 =
RTACTION_FLUSH
) {

188 
	`Ârötf
(
°dîr
, 
	`_
("Flushing `inet6'ÑoutingÅableÇot supported\n"));

189  (
	`ußge
());

191 i‡((*
¨gs
 =
NULL
Ë|| (
a˘i⁄
 =
RTACTION_HELP
))

192  (
	`ußge
());

194  (
	`INET6_£åouã
(
a˘i⁄
, 
›ti⁄s
, 
¨gs
));

195 
	}
}

	@net-tools-1.60/lib/inet_gr.c

11 
	~"c⁄fig.h
"

13 #i‡
HAVE_AFINET


14 
	~<sys/ty≥s.h
>

15 
	~<sys/sockë.h
>

16 
	~<√töë/ö.h
>

17 
	~<¨∑/öë.h
>

18 
	~<¨∑/«me£r.h
>

20 
	~<˘y≥.h
>

21 
	~<î∫o.h
>

22 
	~<√tdb.h
>

23 
	~<ªsﬁv.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<°dio.h
>

27 
	~<uni°d.h
>

28 
	~"vîsi⁄.h
"

29 
	~"√t-suµ‹t.h
"

30 
	~"∑th«mes.h
"

31 
	~"öé.h
"

32 
	~"√t-„©uªs.h
"

33 
	~"¥oc.h
"

34 
a·y≥
 
öë_a·y≥
;

36 *
INET_•rötmask
(
sockaddr
 *
ßp
, 
numîic
,

37 
√tmask
);

39 
	$Ωröt_fib
(
ext
, 
numîic
)

41 
buff
[1024], 
iÁ˚
[16], 
Êags
[64];

42 
g©e_addr
[128], 
√t_addr
[128];

43 
mask_addr
[128];

44 
num
, 
iÊags
, 
mëric
, 
ªf˙t
, 
u£
, 
mss
, 
wödow
, 
úâ
;

45 
FILE
 *
Â
 = 
	`f›í
(
_PATH_PROCNET_ROUTE
, "r");

46 *
fmt
;

48 i‡(!
Â
) {

49 
	`≥º‹
(
_PATH_PROCNET_ROUTE
);

50 
	`¥ötf
(
	`_
("INET (IPv4)Çot configured inÅhis system.\n"));

53 
	`¥ötf
(
	`_
("Kernel IPÑoutingÅable\n"));

55 i‡(
ext
 == 1)

56 
	`¥ötf
(
	`_
("Destination Gateway Genmask "

58 i‡(
ext
 == 2)

59 
	`¥ötf
(
	`_
("Destination Gateway Genmask "

61 i‡(
ext
 >= 3)

62 
	`¥ötf
(
	`_
("Destination Gateway Genmask "

66 
úâ
 = 0;

67 
wödow
 = 0;

68 
mss
 = 0;

70 
fmt
 = 
	`¥oc_gí_fmt
(
_PATH_PROCNET_ROUTE
, 0, 
Â
,

82 
NULL
);

85 i‡(!
fmt
)

88 
	`fgës
(
buff
, 1023, 
Â
)) {

89 
sockaddr
 
¢ë_èrgë
, 
¢ë_g©eway
, 
¢ë_mask
;

90 
sockaddr_ö
 *
sö_√tmask
;

92 
num
 = 
	`ssˇnf
(
buff
, 
fmt
,

93 
iÁ˚
, 
√t_addr
, 
g©e_addr
,

94 &
iÊags
, &
ªf˙t
, &
u£
, &
mëric
, 
mask_addr
,

95 &
mss
, &
wödow
, &
úâ
);

96 i‡(
num
 < 10 || !(
iÊags
 & 
RTF_UP
))

100 (Ë
öë_a·y≥
.
	`öput
(1, 
√t_addr
, &
¢ë_èrgë
);

103 (Ë
öë_a·y≥
.
	`öput
(1, 
g©e_addr
, &
¢ë_g©eway
);

106 (Ë
öë_a·y≥
.
	`öput
(1, 
mask_addr
, &
¢ë_mask
);

108 
sö_√tmask
 = (
sockaddr_ö
 *)&
¢ë_mask
;

109 
	`°r˝y
(
√t_addr
, 
	`INET_•rötmask
(&
¢ë_èrgë
,

110 (
numîic
 | 0x8000 | (
iÊags
 & 
RTF_HOST
? 0x4000: 0)),

111 
sö_√tmask
->
sö_addr
.
s_addr
));

112 
√t_addr
[15] = '\0';

114 
	`°r˝y
(
g©e_addr
, 
öë_a·y≥
.
	`•röt
(&
¢ë_g©eway
, 
numîic
 | 0x4000));

115 
g©e_addr
[15] = '\0';

117 
	`°r˝y
(
mask_addr
, 
öë_a·y≥
.
	`•röt
(&
¢ë_mask
, 1));

118 
mask_addr
[15] = '\0';

121 
Êags
[0] = '\0';

122 i‡(
iÊags
 & 
RTF_UP
)

123 
	`°rˇt
(
Êags
, "U");

124 i‡(
iÊags
 & 
RTF_GATEWAY
)

125 
	`°rˇt
(
Êags
, "G");

126 #i‡
HAVE_RTF_REJECT


127 i‡(
iÊags
 & 
RTF_REJECT
)

128 
	`°r˝y
(
Êags
, "!");

130 i‡(
iÊags
 & 
RTF_HOST
)

131 
	`°rˇt
(
Êags
, "H");

132 i‡(
iÊags
 & 
RTF_REINSTATE
)

133 
	`°rˇt
(
Êags
, "R");

134 i‡(
iÊags
 & 
RTF_DYNAMIC
)

135 
	`°rˇt
(
Êags
, "D");

136 i‡(
iÊags
 & 
RTF_MODIFIED
)

137 
	`°rˇt
(
Êags
, "M");

138 i‡(
iÊags
 & 
RTF_DEFAULT
)

139 
	`°rˇt
(
Êags
, "d");

140 i‡(
iÊags
 & 
RTF_ALLONLINK
)

141 
	`°rˇt
(
Êags
, "a");

142 i‡(
iÊags
 & 
RTF_ADDRCONF
)

143 
	`°rˇt
(
Êags
, "c");

144 i‡(
iÊags
 & 
RTF_NONEXTHOP
)

145 
	`°rˇt
(
Êags
, "o");

146 i‡(
iÊags
 & 
RTF_EXPIRES
)

147 
	`°rˇt
(
Êags
, "e");

148 i‡(
iÊags
 & 
RTF_CACHE
)

149 
	`°rˇt
(
Êags
, "c");

150 i‡(
iÊags
 & 
RTF_FLOW
)

151 
	`°rˇt
(
Êags
, "f");

152 i‡(
iÊags
 & 
RTF_POLICY
)

153 
	`°rˇt
(
Êags
, "p");

154 i‡(
iÊags
 & 
RTF_LOCAL
)

155 
	`°rˇt
(
Êags
, "l");

156 i‡(
iÊags
 & 
RTF_MTU
)

157 
	`°rˇt
(
Êags
, "u");

158 i‡(
iÊags
 & 
RTF_WINDOW
)

159 
	`°rˇt
(
Êags
, "w");

160 i‡(
iÊags
 & 
RTF_IRTT
)

161 
	`°rˇt
(
Êags
, "i");

162 i‡(
iÊags
 & 
RTF_NOTCACHED
)

163 
	`°rˇt
(
Êags
, "n");

166 i‡(
ext
 == 1) {

167 #i‡
HAVE_RTF_REJECT


168 i‡(
iÊags
 & 
RTF_REJECT
)

169 
	`¥ötf
("%-15s - %-15s %-5s %-6d - %7d -\n",

170 
√t_addr
, 
mask_addr
, 
Êags
, 
mëric
, 
u£
);

173 
	`¥ötf
("%-15s %-15s %-15s %-5s %-6d %-2d %7d %s\n",

174 
√t_addr
, 
g©e_addr
, 
mask_addr
, 
Êags
,

175 
mëric
, 
ªf˙t
, 
u£
, 
iÁ˚
);

177 i‡(
ext
 == 2) {

178 #i‡
HAVE_RTF_REJECT


179 i‡(
iÊags
 & 
RTF_REJECT
)

180 
	`¥ötf
("%-15s - %-15s %-5s - - - -\n",

181 
√t_addr
, 
mask_addr
, 
Êags
);

184 
	`¥ötf
("%-15s %-15s %-15s %-5s %5d %-5d %6d %s\n",

185 
√t_addr
, 
g©e_addr
, 
mask_addr
, 
Êags
,

186 
mss
, 
wödow
, 
úâ
, 
iÁ˚
);

188 i‡(
ext
 >= 3) {

189 #i‡
HAVE_RTF_REJECT


190 i‡(
iÊags
 & 
RTF_REJECT
)

191 
	`¥ötf
("%-15s - %-15s %-5s %-6d - %7d - - - -\n",

192 
√t_addr
, 
mask_addr
, 
Êags
, 
mëric
, 
u£
);

195 
	`¥ötf
("%-15s %-15s %-15s %-5s %-6d %-3d %6d %-6.6s %-5d %-6d %d\n",

196 
√t_addr
, 
g©e_addr
, 
mask_addr
, 
Êags
,

197 
mëric
, 
ªf˙t
, 
u£
, 
iÁ˚
, 
mss
, 
wödow
, 
úâ
);

201 
	`‰ì
(
fmt
);

202 (Ë
	`f˛o£
(
Â
);

204 
	}
}

206 
	$Ωröt_ˇche
(
ext
, 
numîic
)

208 
buff
[1024], 
iÁ˚
[16], 
Êags
[64];

209 
g©e_addr
[128], 
de°_addr
[128], 
•ecd°
[128];

210 
§c_addr
[128];

211 
sockaddr
 
¢ë
;

212 
iÊags
;

213 
num
, 
f‹m©
, 
mëric
, 
ªf˙t
, 
u£
, 
mss
, 
wödow
, 
úâ
, 
hh
, 
hhªf
, 
hhu±od
, 
¨p
, 
tos
;

214 *
fmt
 = 
NULL
;

216 
FILE
 *
Â
 = 
	`f›í
(
_PATH_PROCNET_RTCACHE
, "r");

218 i‡(!
Â
) {

219 
	`≥º‹
(
_PATH_PROCNET_RTCACHE
);

220 
	`¥ötf
(
	`_
("INET (IPv4)Çot configured inÅhis system.\n"));

235 
f‹m©
 = 
	`¥oc_guess_fmt
(
_PATH_PROCNET_RTCACHE
, 
Â
, "IRTT",1,"TOS",2,"HHRef",4,"HHU±od",8,"S≥cD°",16,"HH",32,"ARP",64,
NULL
);

237 
	`¥ötf
(
	`_
("Kernel IPÑouting cache\n"));

239 
f‹m©
) {

241 
	`≥º‹
(
_PATH_PROCNET_RTCACHE
);

242 
	`exô
(-1);

245 
f‹m©
 = 2;

248 
f‹m©
 = 1;

251 
	`¥ötf
("ERROR:Öroc_guess_fmt(%s,...Ñëu∫ed: %d\n",
_PATH_PROCNET_RTCACHE
, 
f‹m©
);

255 
	`ªwöd
(
Â
);

257 i‡(
ext
 == 1)

258 
	`¥ötf
(
	`_
("Source Destination Gateway "

260 i‡(
ext
 == 2)

261 
	`¥ötf
(
	`_
("Source Destination Gateway "

264 i‡(
f‹m©
 == 1) {

265 i‡(
ext
 >= 3)

266 
	`¥ötf
(
	`_
("Source Destination Gateway "

270 
fmt
 = 
	`¥oc_gí_fmt
(
_PATH_PROCNET_RTCACHE
, 0, 
Â
,

284 
NULL
);

288 i‡(
f‹m©
 == 2) {

289 i‡(
ext
 >= 3)

290 
	`¥ötf
(
	`_
("Source Destination Gateway "

293 
fmt
 = 
	`¥oc_gí_fmt
(
_PATH_PROCNET_RTCACHE
, 0, 
Â
,

309 
NULL
);

314 
úâ
 = 0;

315 
wödow
 = 0;

316 
mss
 = 0;

317 
hh
 = 0; 
hhªf
 = 0; 
hhu±od
 = 0;

318 
¨p
 = 0; 
tos
 = 0;

319 
	`fgës
(
buff
, 1023, 
Â
)) {

320 i‡(
f‹m©
 == 1) {

321 
num
 = 
	`ssˇnf
(
buff
, 
fmt
,

322 
iÁ˚
, 
de°_addr
, 
g©e_addr
,

323 &
iÊags
, &
ªf˙t
, &
u£
, &
mëric
, 
§c_addr
,

324 &
mss
, &
wödow
, &
úâ
, &
hh
, &
¨p
);

325 i‡(
num
 < 12)

328 i‡(
f‹m©
 == 2) {

329 
num
 = 
	`ssˇnf
(
buff
, 
fmt
,

330 
iÁ˚
, 
de°_addr
, 
g©e_addr
,

331 &
iÊags
, &
ªf˙t
, &
u£
, &
mëric
, 
§c_addr
,

332 &
mss
, &
wödow
, &
úâ
, &
tos
, &
hhªf
, &
hhu±od
, &
•ecd°
);

333 i‡(
num
 < 12)

339 (Ë
öë_a·y≥
.
	`öput
(1, 
de°_addr
, &
¢ë
);

340 
	`°r˝y
(
de°_addr
, 
öë_a·y≥
.
	`•röt
(&
¢ë
, 
numîic
));

341 
de°_addr
[15] = '\0';

344 (Ë
öë_a·y≥
.
	`öput
(1, 
g©e_addr
, &
¢ë
);

345 
	`°r˝y
(
g©e_addr
, 
öë_a·y≥
.
	`•röt
(&
¢ë
, 
numîic
));

346 
g©e_addr
[15] = '\0';

349 (Ë
öë_a·y≥
.
	`öput
(1, 
§c_addr
, &
¢ë
);

350 
	`°r˝y
(
§c_addr
, 
öë_a·y≥
.
	`•röt
(&
¢ë
, 
numîic
));

351 
§c_addr
[15] = '\0';

354 (Ë
öë_a·y≥
.
	`öput
(1, 
•ecd°
, &
¢ë
);

355 
	`°r˝y
(
•ecd°
, 
öë_a·y≥
.
	`•röt
(&
¢ë
, 
numîic
));

356 
•ecd°
[15] = '\0';

359 
Êags
[0] = '\0';

360 i‡(
f‹m©
 == 1) {

361 i‡(
iÊags
 & 
RTF_UP
)

362 
	`°rˇt
(
Êags
, "U");

363 i‡(
iÊags
 & 
RTF_HOST
)

364 
	`°rˇt
(
Êags
, "H");

366 i‡(
iÊags
 & 
RTF_GATEWAY
)

367 
	`°rˇt
(
Êags
, "G");

368 #i‡
HAVE_RTF_REJECT


369 i‡(
iÊags
 & 
RTF_REJECT
)

370 
	`°r˝y
(
Êags
, "!");

372 i‡(
iÊags
 & 
RTF_REINSTATE
)

373 
	`°rˇt
(
Êags
, "R");

374 i‡(
iÊags
 & 
RTF_DYNAMIC
)

375 
	`°rˇt
(
Êags
, "D");

376 i‡(
iÊags
 & 
RTF_MODIFIED
)

377 
	`°rˇt
(
Êags
, "M");

380 i‡(
f‹m©
 == 2) {

381 i‡(
iÊags
 & 
RTCF_DEAD
)

382 
	`°rˇt
(
Êags
, "-");

383 i‡(
iÊags
 & 
RTCF_ONLINK
)

384 
	`°rˇt
(
Êags
, "o");

386 i‡(
iÊags
 & 
RTCF_NOTIFY
)

387 
	`°rˇt
(
Êags
, "n");

388 i‡(
iÊags
 & 
RTCF_DIRECTDST
)

389 
	`°rˇt
(
Êags
, "d");

390 i‡(
iÊags
 & 
RTCF_TPROXY
)

391 
	`°rˇt
(
Êags
, "t");

392 i‡(
iÊags
 & 
RTCF_FAST
)

393 
	`°rˇt
(
Êags
, "f");

394 i‡(
iÊags
 & 
RTCF_MASQ
)

395 
	`°rˇt
(
Êags
, "q");

396 i‡(
iÊags
 & 
RTCF_SNAT
)

397 
	`°rˇt
(
Êags
, "Ns");

398 i‡(
iÊags
 & 
RTCF_DOREDIRECT
)

399 
	`°rˇt
(
Êags
, "r");

400 i‡(
iÊags
 & 
RTCF_DIRECTSRC
)

401 
	`°rˇt
(
Êags
, "i");

402 i‡(
iÊags
 & 
RTCF_DNAT
)

403 
	`°rˇt
(
Êags
, "Nd");

404 i‡(
iÊags
 & 
RTCF_BROADCAST
)

405 
	`°rˇt
(
Êags
, "b");

406 i‡(
iÊags
 & 
RTCF_MULTICAST
)

407 
	`°rˇt
(
Êags
, "m");

408 i‡(
iÊags
 & 
RTCF_REJECT
)

409 
	`°rˇt
(
Êags
, "#");

410 i‡(
iÊags
 & 
RTCF_LOCAL
)

411 
	`°rˇt
(
Êags
, "l");

413 i‡(
ext
 == 1) {

414 
	`¥ötf
("%-15s %-15s %-15s %-5s %-6d %-2d %7d %s\n",

415 
§c_addr
, 
de°_addr
, 
g©e_addr
, 
Êags
,

416 
mëric
, 
ªf˙t
, 
u£
, 
iÁ˚
);

418 i‡(
ext
 == 2) {

419 
	`¥ötf
("%-15s %-15s %-15s %-5s %5d %-5d %6d %s\n",

420 
§c_addr
, 
de°_addr
, 
g©e_addr
, 
Êags
,

421 
mss
, 
wödow
, 
úâ
, 
iÁ˚
);

423 i‡(
f‹m©
 == 1) {

424 i‡(
ext
 >= 3) {

425 
	`¥ötf
("%-15s %-15s %-15s %-5s %-6d %-3d %6d %-6.6s %-5d %-6d %-5d %-3d %d\n",

426 
§c_addr
, 
de°_addr
, 
g©e_addr
, 
Êags
,

427 
mëric
, 
ªf˙t
, 
u£
, 
iÁ˚
, 
mss
, 
wödow
, 
úâ
, 
hh
, 
¨p
);

430 i‡(
f‹m©
 == 2) {

431 i‡(
ext
 >= 3) {

432 
	`¥ötf
("%-15s %-15s %-15s %-5s %-6d %-3d %6d %-6.6s %-5d %-6d %-5d %-3d %-3d %-3d %15s\n",

433 
§c_addr
, 
de°_addr
, 
g©e_addr
, 
Êags
,

434 
mëric
, 
ªf˙t
, 
u£
, 
iÁ˚
, 
mss
, 
wödow
, 
úâ
, 
tos
, 
hhªf
, 
hhu±od
, 
•ecd°
);

439 
	`‰ì
(
fmt
);

440 (Ë
	`f˛o£
(
Â
);

442 
	}
}

444 
	$INET_Ωröt
(
›ti⁄s
)

446 
ext
 = 
›ti⁄s
 & 
FLAG_EXT
;

447 
numîic
 = 
›ti⁄s
 & (
FLAG_NUM_HOST
 | 
FLAG_SYM
);

448 
rc
 = 
E_INTERN
;

450 i‡(
›ti⁄s
 & 
FLAG_FIB
)

451 i‡((
rc
 = 
	`Ωröt_fib
(
ext
, 
numîic
)))

452  (
rc
);

453 i‡(
›ti⁄s
 & 
FLAG_CACHE
)

454 
rc
 = 
	`Ωröt_ˇche
(
ext
, 
numîic
);

456  (
rc
);

457 
	}
}

	@net-tools-1.60/lib/inet_sr.c

8 
	~"c⁄fig.h
"

10 #i‡
HAVE_AFINET


11 
	~<asm/ty≥s.h
>

12 
	~<sys/∑øm.h
>

13 
	~<sys/ty≥s.h
>

14 
	~<sys/sockë.h
>

15 
	~<√töë/ö.h
>

16 
	~<¨∑/öë.h
>

17 
	~<¨∑/«me£r.h
>

18 
	~<√t/rouã.h
>

19 
	~<sys/io˘l.h
>

20 
	~<˘y≥.h
>

21 
	~<î∫o.h
>

22 
	~<√tdb.h
>

23 
	~<ªsﬁv.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<°dio.h
>

27 
	~<uni°d.h
>

28 
	~"vîsi⁄.h
"

29 
	~"√t-suµ‹t.h
"

30 
	~"∑th«mes.h
"

31 
	~"öé.h
"

32 
	~"√t-„©uªs.h
"

33 
	~"utû.h
"

35 #i‡
HAVE_NEW_ADDRT


36 
	#mask_ö_addr
(
x
Ë(((
sockaddr_ö
 *)&((x).
π_gímask
))->
sö_addr
.
s_addr
)

	)

37 
	#fuŒ_mask
(
x
Ë(x)

	)

39 
	#mask_ö_addr
(
x
Ë((x).
π_gímask
)

	)

40 
	#fuŒ_mask
(
x
Ë(((
sockaddr_ö
 *)&(x))->
sö_addr
.
s_addr
)

	)

43 
a·y≥
 
öë_a·y≥
;

45 
	gskfd
 = -1;

48 
	$ußge
()

50 
	`Ârötf
(
°dîr
, 
	`_
("Usage: inet_route [-vF] del {-host|-net} Target[/prefix] [gw Gw] [metric M] [[dev] If]\n"));

51 
	`Ârötf
(
°dîr
, 
	`_
(" inet_route [-vF]ádd {-host|-net} Target[/prefix] [gw Gw] [metric M]\n"));

52 
	`Ârötf
(
°dîr
, 
	`_
(" [netmask N] [mss Mss] [window W] [irtt I]\n"));

53 
	`Ârötf
(
°dîr
, 
	`_
(" [mod] [dyn] [reinstate] [[dev] If]\n"));

54 
	`Ârötf
(
°dîr
, 
	`_
(" inet_route [-vF]ádd {-host|-net} Target[/prefix] [metric M]Ñeject\n"));

55 
	`Ârötf
(
°dîr
, 
	`_
(" inet_route [-FC] flush NOT supported\n"));

56  (
E_USAGE
);

57 
	}
}

59 
	$INET_£åouã
(
a˘i⁄
, 
›ti⁄s
, **
¨gs
)

61 
πíåy
 
π
;

62 
èrgë
[128], 
g©eway
[128] = "NONE", 
√tmask
[128] = "default";

63 
xÊag
, 
i¢ë
;

65 
xÊag
 = 0;

67 i‡(!
	`°rcmp
(*
¨gs
, "#net")) {

68 
xÊag
 = 1;

69 
¨gs
++;

70 } i‡(!
	`°rcmp
(*
¨gs
, "#host")) {

71 
xÊag
 = 2;

72 
¨gs
++;

74 i‡(*
¨gs
 =
NULL
)

75  (
	`ußge
());

77 
	`ß„_°∫˝y
(
èrgë
, *
¨gs
++, (Åarget));

80 
	`mem£t
((*Ë&
π
, 0, (
πíåy
));

85 
sockaddr_ö
 
m
;

86 
sockaddr
 
d
;

87 } 
mask
;

88 
n
;

90 
n
 = 
öë_a·y≥
.
	`gëmask
(
èrgë
, &
mask
.
d
, 
√tmask
);

91 i‡(
n
 < 0)

92  
	`ußge
();

93 i‡(
n
)

94 
π
.
π_gímask
 = 
	`fuŒ_mask
(
mask
.
d
);

98 i‡((
i¢ë
 = 
öë_a·y≥
.
	`öput
((
xÊag
!=2? 0: 256), 
èrgë
, &
π
.
π_d°
)) < 0) {

99 
öë_a·y≥
.
	`hîr‹
(
èrgë
);

102 
xÊag
) {

104 
i¢ë
 = 1; ;

106 
i¢ë
 = 0; ;

111 
π
.
π_Êags
 = (
RTF_UP
 | 
RTF_HOST
);

112 i‡(
i¢ë
)

113 
π
.
π_Êags
 &~
RTF_HOST
;

115 *
¨gs
) {

116 i‡(!
	`°rcmp
(*
¨gs
, "metric")) {

117 
mëric
;

119 
¨gs
++;

120 i‡(!*
¨gs
 || !
	`isdigô
(**args))

121  (
	`ußge
());

122 
mëric
 = 
	`©oi
(*
¨gs
);

123 #i‡
HAVE_NEW_ADDRT


124 
π
.
π_mëric
 = 
mëric
 + 1;

126 
	`ENOSUPP
("inet_setroute", "NEW_ADDRT (metric)");

128 
¨gs
++;

131 i‡(!
	`°rcmp
(*
¨gs
, "netmask")) {

132 
sockaddr
 
mask
;

134 
¨gs
++;

135 i‡(!*
¨gs
 || 
	`mask_ö_addr
(
π
))

136  (
	`ußge
());

137 
	`ß„_°∫˝y
(
√tmask
, *
¨gs
, (Çetmask));

138 i‡((
i¢ë
 = 
öë_a·y≥
.
	`öput
(0, 
√tmask
, &
mask
)) < 0) {

139 
öë_a·y≥
.
	`hîr‹
(
√tmask
);

140  (
E_LOOKUP
);

142 
π
.
π_gímask
 = 
	`fuŒ_mask
(
mask
);

143 
¨gs
++;

146 i‡(!
	`°rcmp
(*
¨gs
, "gw") || !strcmp(*args, "gateway")) {

147 
¨gs
++;

148 i‡(!*
¨gs
)

149  (
	`ußge
());

150 i‡(
π
.
π_Êags
 & 
RTF_GATEWAY
)

151  (
	`ußge
());

152 
	`ß„_°∫˝y
(
g©eway
, *
¨gs
, ( gateway));

153 i‡((
i¢ë
 = 
öë_a·y≥
.
	`öput
(256, 
g©eway
, &
π
.
π_g©eway
)) < 0) {

154 
öë_a·y≥
.
	`hîr‹
(
g©eway
);

155  (
E_LOOKUP
);

157 i‡(
i¢ë
) {

158 
	`Ârötf
(
°dîr
, 
	`_
("route: %s: cannot useá NETWORKás gateway!\n"),

159 
g©eway
);

160  (
E_OPTERR
);

162 
π
.
π_Êags
 |
RTF_GATEWAY
;

163 
¨gs
++;

166 i‡(!
	`°rcmp
(*
¨gs
, "mss") || !strcmp(*args,"mtu")) {

167 
¨gs
++;

168 
π
.
π_Êags
 |
RTF_MSS
;

169 i‡(!*
¨gs
)

170  (
	`ußge
());

171 
π
.
π_mss
 = 
	`©oi
(*
¨gs
);

172 
¨gs
++;

173 i‡(
π
.
π_mss
 < 64 ||Ñt.rt_mss > 65536) {

174 
	`Ârötf
(
°dîr
, 
	`_
("route: Invalid MSS/MTU.\n"));

175  (
E_OPTERR
);

179 i‡(!
	`°rcmp
(*
¨gs
, "window")) {

180 
¨gs
++;

181 i‡(!*
¨gs
)

182  (
	`ußge
());

183 
π
.
π_Êags
 |
RTF_WINDOW
;

184 
π
.
π_wödow
 = 
	`©oi
(*
¨gs
);

185 
¨gs
++;

186 i‡(
π
.
π_wödow
 < 128) {

187 
	`Ârötf
(
°dîr
, 
	`_
("route: Invalid window.\n"));

188  (
E_OPTERR
);

192 i‡(!
	`°rcmp
(*
¨gs
, "irtt")) {

193 
¨gs
++;

194 i‡(!*
¨gs
)

195  (
	`ußge
());

196 
¨gs
++;

197 #i‡
HAVE_RTF_IRTT


198 
π
.
π_Êags
 |
RTF_IRTT
;

199 
π
.
π_úâ
 = 
	`©oi
(*(
¨gs
 - 1));

200 
π
.
π_úâ
 *(
HZ
 / 100);

202 i‡(
π
.
π_úâ
 < 1 ||Ñt.π_úâ > (120 * 
HZ
)) {

203 
	`Ârötf
(
°dîr
, 
	`_
("route: Invalid initialÑtt.\n"));

204  (
E_OPTERR
);

208 
	`ENOSUPP
("inet_setroute", "RTF_IRTT");

212 i‡(!
	`°rcmp
(*
¨gs
, "reject")) {

213 
¨gs
++;

214 #i‡
HAVE_RTF_REJECT


215 
π
.
π_Êags
 |
RTF_REJECT
;

217 
	`ENOSUPP
("inet_setroute", "RTF_REJECT");

221 i‡(!
	`°rcmp
(*
¨gs
, "mod")) {

222 
¨gs
++;

223 
π
.
π_Êags
 |
RTF_MODIFIED
;

226 i‡(!
	`°rcmp
(*
¨gs
, "dyn")) {

227 
¨gs
++;

228 
π
.
π_Êags
 |
RTF_DYNAMIC
;

231 i‡(!
	`°rcmp
(*
¨gs
, "reinstate")) {

232 
¨gs
++;

233 
π
.
π_Êags
 |
RTF_REINSTATE
;

236 i‡(!
	`°rcmp
(*
¨gs
, "device") || !strcmp(*args, "dev")) {

237 
¨gs
++;

238 i‡(
π
.
π_dev
 || *
¨gs
 =
NULL
)

239  
	`ußge
();

240 
π
.
π_dev
 = *
¨gs
++;

244 i‡(!
π
.
π_dev
) {

245 
π
.
π_dev
 = *
¨gs
++;

246 i‡(*
¨gs
)

247  
	`ußge
();

249  
	`ußge
();

252 #i‡
HAVE_RTF_REJECT


253 i‡((
π
.
π_Êags
 & 
RTF_REJECT
Ë&& !π.
π_dev
)

254 
π
.
π_dev
 = "lo";

258 i‡(
	`mask_ö_addr
(
π
)) {

259 
__u32
 
mask
 = ~
	`¡ohl
(
	`mask_ö_addr
(
π
));

260 i‡((
π
.
π_Êags
 & 
RTF_HOST
Ë&& 
mask
 != 0xffffffff) {

261 
	`Ârötf
(
°dîr
, 
	`_
("rouã:Çëmask %.8x d€¢'àmakê£n£ wôh ho°Ñouã\n"), 
mask
);

262  (
E_OPTERR
);

264 i‡(
mask
 & (mask + 1)) {

265 
	`Ârötf
(
°dîr
, 
	`_
("rouã: bogu†√tmask %s\n"), 
√tmask
);

266  (
E_OPTERR
);

268 
mask
 = ((
sockaddr_ö
 *Ë&
π
.
π_d°
)->
sö_addr
.
s_addr
;

269 i‡(
mask
 & ~
	`mask_ö_addr
(
π
)) {

270 
	`Ârötf
(
°dîr
, 
	`_
("route:Çetmask doesn't matchÑouteáddress\n"));

271  (
E_OPTERR
);

275 i‡((
a˘i⁄
 =
RTACTION_ADD
Ë&& 
π
.
π_Êags
 & 
RTF_HOST
)

276 
	`mask_ö_addr
(
π
) = 0xffffffff;

279 i‡((
skfd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0)) < 0) {

280 
	`≥º‹
("socket");

281  (
E_SOCK
);

284 i‡(
a˘i⁄
 =
RTACTION_DEL
) {

285 i‡(
	`io˘l
(
skfd
, 
SIOCDELRT
, &
π
) < 0) {

286 
	`≥º‹
("SIOCDELRT");

287 
	`˛o£
(
skfd
);

288  (
E_SOCK
);

291 i‡(
	`io˘l
(
skfd
, 
SIOCADDRT
, &
π
) < 0) {

292 
	`≥º‹
("SIOCADDRT");

293 
	`˛o£
(
skfd
);

294  (
E_SOCK
);

299 (Ë
	`˛o£
(
skfd
);

301 
	}
}

303 
	$INET_röput
(
a˘i⁄
, 
›ti⁄s
, **
¨gs
)

305 i‡(
a˘i⁄
 =
RTACTION_FLUSH
) {

306 
	`Ârötf
(
°dîr
, 
	`_
("Flushing `inet'ÑoutingÅableÇot supported\n"));

307  (
	`ußge
());

309 i‡(
›ti⁄s
 & 
FLAG_CACHE
) {

310 
	`Ârötf
(
°dîr
, 
	`_
("Modifying `inet'Ñouting cacheÇot supported\n"));

311  (
	`ußge
());

313 i‡((*
¨gs
 =
NULL
Ë|| (
a˘i⁄
 =
RTACTION_HELP
))

314  (
	`ußge
());

316  (
	`INET_£åouã
(
a˘i⁄
, 
›ti⁄s
, 
¨gs
));

317 
	}
}

	@net-tools-1.60/lib/interface.c

13 
	~"c⁄fig.h
"

15 
	~<sys/ty≥s.h
>

16 
	~<sys/sockë.h
>

17 
	~<sys/io˘l.h
>

18 
	~<√töë/ö.h
>

19 
	~<√t/if.h
>

20 
	~<°dio.h
>

21 
	~<î∫o.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<uni°d.h
>

25 
	~<˘y≥.h
>

27 #i‡
HAVE_AFIPX


28 #i‡(
__GLIBC__
 > 2Ë|| (__GLIBC__ =2 && 
__GLIBC_MINOR__
 >= 1)

29 
	~<√tùx/ùx.h
>

31 
	~"ùx.h
"

35 #i‡
HAVE_AFECONET


36 
	~<√ãc⁄ë/ec.h
>

39 #ifde‡
HAVE_HWSLIP


40 
	~<löux/if_¶ù.h
>

41 
	~<√t/if_¨p.h
>

44 
	~"√t-suµ‹t.h
"

45 
	~"∑th«mes.h
"

46 
	~"vîsi⁄.h
"

47 
	~"¥oc.h
"

49 
	~"öãrÁ˚.h
"

50 
	~"sockës.h
"

51 
	~"utû.h
"

52 
	~"öé.h
"

55 
	#REVERSE_MAC


	)

56 #ifde‡
IFF_PORTSEL


57 c⁄° *
	gif_p‹t_ãxt
[][4] =

60 {"unknown", 
NULL
, NULL, NULL},

61 {"10ba£2", "bnc", "cﬂx", 
NULL
},

62 {"10ba£T", "uç", "çe", 
NULL
},

63 {"AUI", "thick", "db15", 
NULL
},

64 {"100ba£T", 
NULL
, NULL, NULL},

65 {"100ba£TX", 
NULL
, NULL, NULL},

66 {"100ba£FX", 
NULL
, NULL, NULL},

67 {
NULL
, NULL, NULL, NULL},

71 
	#IPV6_ADDR_ANY
 0x0000U

	)

73 
	#IPV6_ADDR_UNICAST
 0x0001U

	)

74 
	#IPV6_ADDR_MULTICAST
 0x0002U

	)

75 
	#IPV6_ADDR_ANYCAST
 0x0004U

	)

77 
	#IPV6_ADDR_LOOPBACK
 0x0010U

	)

78 
	#IPV6_ADDR_LINKLOCAL
 0x0020U

	)

79 
	#IPV6_ADDR_SITELOCAL
 0x0040U

	)

81 
	#IPV6_ADDR_COMPATv4
 0x0080U

	)

83 
	#IPV6_ADDR_SCOPE_MASK
 0x00f0U

	)

85 
	#IPV6_ADDR_MAPPED
 0x1000U

	)

86 
	#IPV6_ADDR_RESERVED
 0x2000U

	)

88 
	g¥o˙ëdev_v¢
 = 1;

90 
	gi„_sh‹t
;

92 
öãrÁ˚
 *
	göt_li°
, *
	göt_œ°
;

94 
if_ªadli°_¥oc
(*);

96 
öãrÁ˚
 *
	$add_öãrÁ˚
(*
«me
)

98 
öãrÁ˚
 *
i„
, **
√xç
, *
√w
;

100 
i„
 = 
öt_œ°
; i„; i„ = i„->
¥ev
) {

101 
n
 = 
	`n°rcmp
(
i„
->
«me
,Çame);

102 i‡(
n
 == 0)

103  
i„
;

104 i‡(
n
 < 0)

107 
	`√w
(
√w
);

108 
	`ß„_°∫˝y
(
√w
->
«me
,Çame, 
IFNAMSIZ
);

109 
√xç
 = 
i„
 ? &i„->
√xt
 : &
öt_li°
;

110 
√w
->
¥ev
 = 
i„
;

111 
√w
->
√xt
 = *
√xç
;

112 i‡(
√w
->
√xt
)

113 
√w
->
√xt
->
¥ev
 =Çew;

115 
öt_œ°
 = 
√w
;

116 *
√xç
 = 
√w
;

117  
√w
;

118 
	}
}

120 
öãrÁ˚
 *
	$lookup_öãrÁ˚
(*
«me
)

122 
öãrÁ˚
 *
i„
 = 
NULL
;

124 i‡(
	`if_ªadli°_¥oc
(
«me
) < 0)

125  
NULL
;

126 
i„
 = 
	`add_öãrÁ˚
(
«me
);

127  
i„
;

128 
	}
}

130 
f‹_Æl_öãrÁ˚s
((*
doô
Ë(
öãrÁ˚
 *, *), *
cookõ
)

132 
öãrÁ˚
 *
i„
;

134 i‡(!
öt_li°
 && (
	`if_ªadli°
() < 0))

136 
i„
 = 
öt_li°
; i„; i„ = i„->
√xt
) {

137 
îr
 = 
	`doô
(
i„
, 
cookõ
);

138 i‡(
îr
)

139  
îr
;

142 
	}
}

144 
	$‰ì_öãrÁ˚_li°
()

146 
öãrÁ˚
 *
i„
;

147 (
i„
 = 
öt_li°
Ë!
NULL
) {

148 
öt_li°
 = 
i„
->
√xt
;

149 
	`‰ì
(
i„
);

152 
	}
}

154 
	$if_ªadc⁄f
()

156 
numªqs
 = 30;

157 
ifc⁄f
 
ifc
;

158 
i‰eq
 *
i‰
;

159 
n
, 
îr
 = -1;

160 
skfd
;

164 
skfd
 = 
	`gë_sockë_f‹_af
(
AF_INET
);

165 i‡(
skfd
 < 0) {

166 
	`Ârötf
(
°dîr
, 
	`_
("warning:Ço inet socketávailable: %s\n"),

167 
	`°ªº‹
(
î∫o
));

169 
skfd
 = 
	`sockës_›í
(0);

170 i‡(
skfd
 < 0)

174 
ifc
.
ifc_buf
 = 
NULL
;

176 
ifc
.
ifc_Àn
 = (
i‰eq
Ë* 
numªqs
;

177 
ifc
.
ifc_buf
 = 
	`xªÆloc
(ifc.ifc_buf, ifc.
ifc_Àn
);

179 i‡(
	`io˘l
(
skfd
, 
SIOCGIFCONF
, &
ifc
) < 0) {

180 
	`≥º‹
("SIOCGIFCONF");

181 
out
;

183 i‡(
ifc
.
ifc_Àn
 =(
i‰eq
Ë* 
numªqs
) {

185 
numªqs
 += 10;

191 
i‰
 = 
ifc
.
ifc_ªq
;

192 
n
 = 0;Ç < 
ifc
.
ifc_Àn
;Ç +(
i‰eq
)) {

193 
	`add_öãrÁ˚
(
i‰
->
i‰_«me
);

194 
i‰
++;

196 
îr
 = 0;

198 
out
:

199 
	`‰ì
(
ifc
.
ifc_buf
);

200  
îr
;

201 
	}
}

203 *
	$gë_«me
(*
«me
, *
p
)

205 
	`is•a˚
(*
p
))

206 
p
++;

207 *
p
) {

208 i‡(
	`is•a˚
(*
p
))

210 i‡(*
p
 == ':') {

211 *
dŸ
 = 
p
, *
dŸ«me
 = 
«me
;

212 *
«me
++ = *
p
++;

213 
	`isdigô
(*
p
))

214 *
«me
++ = *
p
++;

215 i‡(*
p
 != ':') {

216 
p
 = 
dŸ
;

217 
«me
 = 
dŸ«me
;

219 i‡(*
p
 == '\0')

220  
NULL
;

221 
p
++;

224 *
«me
++ = *
p
++;

226 *
«me
++ = '\0';

227  
p
;

228 
	}
}

230 
	$¥o˙ëdev_vîsi⁄
(*
buf
)

232 i‡(
	`°r°r
(
buf
, "compressed"))

234 i‡(
	`°r°r
(
buf
, "bytes"))

237 
	}
}

239 
	$gë_dev_fõlds
(*
bp
, 
öãrÁ˚
 *
i„
)

241 
¥o˙ëdev_v¢
) {

243 
	`ssˇnf
(
bp
,

245 &
i„
->
°©s
.
rx_byãs
,

246 &
i„
->
°©s
.
rx_∑ckës
,

247 &
i„
->
°©s
.
rx_îr‹s
,

248 &
i„
->
°©s
.
rx_dr›≥d
,

249 &
i„
->
°©s
.
rx_fifo_îr‹s
,

250 &
i„
->
°©s
.
rx_‰ame_îr‹s
,

251 &
i„
->
°©s
.
rx_com¥es£d
,

252 &
i„
->
°©s
.
rx_mu…iˇ°
,

254 &
i„
->
°©s
.
tx_byãs
,

255 &
i„
->
°©s
.
tx_∑ckës
,

256 &
i„
->
°©s
.
tx_îr‹s
,

257 &
i„
->
°©s
.
tx_dr›≥d
,

258 &
i„
->
°©s
.
tx_fifo_îr‹s
,

259 &
i„
->
°©s
.
cﬁlisi⁄s
,

260 &
i„
->
°©s
.
tx_ˇºõr_îr‹s
,

261 &
i„
->
°©s
.
tx_com¥es£d
);

264 
	`ssˇnf
(
bp
, "%llu %llu %lu %lu %lu %lu %llu %llu %lu %lu %lu %lu %lu",

265 &
i„
->
°©s
.
rx_byãs
,

266 &
i„
->
°©s
.
rx_∑ckës
,

267 &
i„
->
°©s
.
rx_îr‹s
,

268 &
i„
->
°©s
.
rx_dr›≥d
,

269 &
i„
->
°©s
.
rx_fifo_îr‹s
,

270 &
i„
->
°©s
.
rx_‰ame_îr‹s
,

272 &
i„
->
°©s
.
tx_byãs
,

273 &
i„
->
°©s
.
tx_∑ckës
,

274 &
i„
->
°©s
.
tx_îr‹s
,

275 &
i„
->
°©s
.
tx_dr›≥d
,

276 &
i„
->
°©s
.
tx_fifo_îr‹s
,

277 &
i„
->
°©s
.
cﬁlisi⁄s
,

278 &
i„
->
°©s
.
tx_ˇºõr_îr‹s
);

279 
i„
->
°©s
.
rx_mu…iˇ°
 = 0;

282 
	`ssˇnf
(
bp
, "%llu %lu %lu %lu %lu %llu %lu %lu %lu %lu %lu",

283 &
i„
->
°©s
.
rx_∑ckës
,

284 &
i„
->
°©s
.
rx_îr‹s
,

285 &
i„
->
°©s
.
rx_dr›≥d
,

286 &
i„
->
°©s
.
rx_fifo_îr‹s
,

287 &
i„
->
°©s
.
rx_‰ame_îr‹s
,

289 &
i„
->
°©s
.
tx_∑ckës
,

290 &
i„
->
°©s
.
tx_îr‹s
,

291 &
i„
->
°©s
.
tx_dr›≥d
,

292 &
i„
->
°©s
.
tx_fifo_îr‹s
,

293 &
i„
->
°©s
.
cﬁlisi⁄s
,

294 &
i„
->
°©s
.
tx_ˇºõr_îr‹s
);

295 
i„
->
°©s
.
rx_byãs
 = 0;

296 
i„
->
°©s
.
tx_byãs
 = 0;

297 
i„
->
°©s
.
rx_mu…iˇ°
 = 0;

301 
	}
}

303 
	$if_ªadli°_¥oc
(*
èrgë
)

305 
¥oc_ªad
;

306 
FILE
 *
fh
;

307 
buf
[512];

308 
öãrÁ˚
 *
i„
;

309 
îr
;

311 i‡(
¥oc_ªad
)

313 i‡(!
èrgë
)

314 
¥oc_ªad
 = 1;

316 
fh
 = 
	`f›í
(
_PATH_PROCNET_DEV
, "r");

317 i‡(!
fh
) {

318 
	`Ârötf
(
°dîr
, 
	`_
("Warning: cannot open %s (%s). Limited output.\n"),

319 
_PATH_PROCNET_DEV
, 
	`°ªº‹
(
î∫o
));

320  
	`if_ªadc⁄f
();

322 
	`fgës
(
buf
,  buf, 
fh
);

323 
	`fgës
(
buf
,  buf, 
fh
);

326 
fmt
 = 
	`¥oc_gí_fmt
(
_PATH_PROCNET_DEV
, 1, 
fh
,

344 
NULL
);

345 i‡(!
fmt
)

348 
¥o˙ëdev_v¢
 = 
	`¥o˙ëdev_vîsi⁄
(
buf
);

351 
îr
 = 0;

352 
	`fgës
(
buf
,  buf, 
fh
)) {

353 *
s
, 
«me
[
IFNAMSIZ
];

354 
s
 = 
	`gë_«me
(
«me
, 
buf
);

355 
i„
 = 
	`add_öãrÁ˚
(
«me
);

356 
	`gë_dev_fõlds
(
s
, 
i„
);

357 
i„
->
°©i°ics_vÆid
 = 1;

358 i‡(
èrgë
 && !
	`°rcmp
—¨gë,
«me
))

361 i‡(
	`„º‹
(
fh
)) {

362 
	`≥º‹
(
_PATH_PROCNET_DEV
);

363 
îr
 = -1;

364 
¥oc_ªad
 = 0;

368 
	`‰ì
(
fmt
);

370 
	`f˛o£
(
fh
);

371  
îr
;

372 
	}
}

374 
	$if_ªadli°
()

376 
îr
 = 
	`if_ªadli°_¥oc
(
NULL
);

377 i‡(!
îr
)

378 
îr
 = 
	`if_ªadc⁄f
();

379  
îr
;

380 
	}
}

384 #i‡
HAVE_AFIPX


385 
	$ùx_gëaddr
(
sock
, 
·
, 
i‰eq
 *
i‰
)

387 ((
sockaddr_ùx
 *Ë&
i‰
->
i‰_addr
)->
sùx_ty≥
 = 
·
;

388  
	`io˘l
(
sock
, 
SIOCGIFADDR
, 
i‰
);

389 
	}
}

393 
	$if_„tch
(
öãrÁ˚
 *
i„
)

395 
i‰eq
 
i‰
;

396 
fd
;

397 *
i‚ame
 = 
i„
->
«me
;

398 #ifde‡
REVERSE_MAC


399 
i
, 
n
;

402 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

403 i‡(
	`io˘l
(
skfd
, 
SIOCGIFFLAGS
, &
i‰
) < 0)

405 
i„
->
Êags
 = 
i‰
.
i‰_Êags
;

407 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

408 i‡(
	`io˘l
(
skfd
, 
SIOCGIFHWADDR
, &
i‰
) < 0)

409 
	`mem£t
(
i„
->
hwaddr
, 0, 32);

411 #ifde‡
REVERSE_MAC


413 
n
 = 8;

414 
¨øy
[8] = {0};

415 
	`¥ötf
("\n");

416 
i
=0; i<6; i++)

418 
¨øy
[
i
]=()
i‰
.
i‰_hwaddr
.
ß_d©a
[i];

419 
i„
->
hwaddr
[
i
] = 
i‰
.
i‰_hwaddr
.
ß_d©a
[6-i-1];

420 
	`¥ötf
("¨øy[%d] = %2x \n\r", 
i
, ()()
¨øy
[i]);

425 
	`mem˝y
(
i„
->
hwaddr
, 
i‰
.
i‰_hwaddr
.
ß_d©a
, 8);

428 
i„
->
ty≥
 = 
i‰
.
i‰_hwaddr
.
ß_Ámûy
;

430 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

431 i‡(
	`io˘l
(
skfd
, 
SIOCGIFMETRIC
, &
i‰
) < 0)

432 
i„
->
mëric
 = 0;

434 
i„
->
mëric
 = 
i‰
.
i‰_mëric
;

436 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

437 i‡(
	`io˘l
(
skfd
, 
SIOCGIFMTU
, &
i‰
) < 0)

438 
i„
->
mtu
 = 0;

440 
i„
->
mtu
 = 
i‰
.
i‰_mtu
;

442 #ifde‡
HAVE_HWSLIP


443 i‡(
i„
->
ty≥
 =
ARPHRD_SLIP
 || i„->ty≥ =
ARPHRD_CSLIP
 ||

444 
i„
->
ty≥
 =
ARPHRD_SLIP6
 || i„->ty≥ =
ARPHRD_CSLIP6
 ||

445 
i„
->
ty≥
 =
ARPHRD_ADAPT
) {

446 #ifde‡
SIOCGOUTFILL


447 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

448 i‡(
	`io˘l
(
skfd
, 
SIOCGOUTFILL
, &
i‰
) < 0)

449 
i„
->
outfûl
 = 0;

451 
i„
->
outfûl
 = (Ë
i‰
.
i‰_d©a
;

453 #ifde‡
SIOCGKEEPALIVE


454 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

455 i‡(
	`io˘l
(
skfd
, 
SIOCGKEEPALIVE
, &
i‰
) < 0)

456 
i„
->
kì∑live
 = 0;

458 
i„
->
kì∑live
 = (Ë
i‰
.
i‰_d©a
;

463 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

464 i‡(
	`io˘l
(
skfd
, 
SIOCGIFMAP
, &
i‰
) < 0)

465 
	`mem£t
(&
i„
->
m≠
, 0, (
ifm≠
));

467 
	`mem˝y
(&
i„
->
m≠
, &
i‰
.
i‰_m≠
, (
ifm≠
));

469 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

470 i‡(
	`io˘l
(
skfd
, 
SIOCGIFMAP
, &
i‰
) < 0)

471 
	`mem£t
(&
i„
->
m≠
, 0, (
ifm≠
));

473 
i„
->
m≠
 = 
i‰
.
i‰_m≠
;

475 #ifde‡
HAVE_TXQUEUELEN


476 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

477 i‡(
	`io˘l
(
skfd
, 
SIOCGIFTXQLEN
, &
i‰
) < 0)

478 
i„
->
tx_queue_Àn
 = -1;

480 
i„
->
tx_queue_Àn
 = 
i‰
.
i‰_qÀn
;

482 
i„
->
tx_queue_Àn
 = -1;

485 #i‡
HAVE_AFINET


487 
fd
 = 
	`gë_sockë_f‹_af
(
AF_INET
);

488 i‡(
fd
 >= 0) {

489 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

490 
i‰
.
i‰_addr
.
ß_Ámûy
 = 
AF_INET
;

491 i‡(
	`io˘l
(
fd
, 
SIOCGIFADDR
, &
i‰
) == 0) {

492 
i„
->
has_ù
 = 1;

493 
i„
->
addr
 = 
i‰
.
i‰_addr
;

494 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

495 i‡(
	`io˘l
(
fd
, 
SIOCGIFDSTADDR
, &
i‰
) < 0)

496 
	`mem£t
(&
i„
->
d°addr
, 0, (
sockaddr
));

498 
i„
->
d°addr
 = 
i‰
.
i‰_d°addr
;

500 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

501 i‡(
	`io˘l
(
fd
, 
SIOCGIFBRDADDR
, &
i‰
) < 0)

502 
	`mem£t
(&
i„
->
brﬂdaddr
, 0, (
sockaddr
));

504 
i„
->
brﬂdaddr
 = 
i‰
.
i‰_brﬂdaddr
;

506 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

507 i‡(
	`io˘l
(
fd
, 
SIOCGIFNETMASK
, &
i‰
) < 0)

508 
	`mem£t
(&
i„
->
√tmask
, 0, (
sockaddr
));

510 
i„
->
√tmask
 = 
i‰
.
i‰_√tmask
;

512 
	`mem£t
(&
i„
->
addr
, 0, (
sockaddr
));

516 #i‡
HAVE_AFATALK


518 
fd
 = 
	`gë_sockë_f‹_af
(
AF_APPLETALK
);

519 i‡(
fd
 >= 0) {

520 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

521 i‡(
	`io˘l
(
fd
, 
SIOCGIFADDR
, &
i‰
) == 0) {

522 
i„
->
dd∑ddr
 = 
i‰
.
i‰_addr
;

523 
i„
->
has_ddp
 = 1;

528 #i‡
HAVE_AFIPX


530 
fd
 = 
	`gë_sockë_f‹_af
(
AF_IPX
);

531 i‡(
fd
 >= 0) {

532 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

533 i‡(!
	`ùx_gëaddr
(
fd
, 
IPX_FRAME_ETHERII
, &
i‰
)) {

534 
i„
->
has_ùx_bb
 = 1;

535 
i„
->
ùxaddr_bb
 = 
i‰
.
i‰_addr
;

537 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

538 i‡(!
	`ùx_gëaddr
(
fd
, 
IPX_FRAME_SNAP
, &
i‰
)) {

539 
i„
->
has_ùx_¢
 = 1;

540 
i„
->
ùxaddr_¢
 = 
i‰
.
i‰_addr
;

542 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

543 i‡(!
	`ùx_gëaddr
(
fd
, 
IPX_FRAME_8023
, &
i‰
)) {

544 
i„
->
has_ùx_e3
 = 1;

545 
i„
->
ùxaddr_e3
 = 
i‰
.
i‰_addr
;

547 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

548 i‡(!
	`ùx_gëaddr
(
fd
, 
IPX_FRAME_8022
, &
i‰
)) {

549 
i„
->
has_ùx_e2
 = 1;

550 
i„
->
ùxaddr_e2
 = 
i‰
.
i‰_addr
;

555 #i‡
HAVE_AFECONET


557 
fd
 = 
	`gë_sockë_f‹_af
(
AF_ECONET
);

558 i‡(
fd
 >= 0) {

559 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

560 i‡(
	`io˘l
(
fd
, 
SIOCGIFADDR
, &
i‰
) == 0) {

561 
i„
->
eˇddr
 = 
i‰
.
i‰_addr
;

562 
i„
->
has_ec⁄ë
 = 1;

568 
	}
}

570 
	$do_if_„tch
(
öãrÁ˚
 *
i„
)

572 i‡(
	`if_„tch
(
i„
) < 0) {

573 *
îrmsg
;

574 i‡(
î∫o
 =
ENODEV
) {

576 
îrmsg
 = 
	`_
("DeviceÇot found");

578 
îrmsg
 = 
	`°ªº‹
(
î∫o
);

580 
	`Ârötf
(
°dîr
, 
	`_
("%s:Érror fetching interface information: %s\n"),

581 
i„
->
«me
, 
îrmsg
);

585 
	}
}

587 
	$do_if_¥öt
(
öãrÁ˚
 *
i„
, *
cookõ
)

589 *
›t_a
 = (*Ë
cookõ
;

590 
ªs
;

592 
ªs
 = 
	`do_if_„tch
(
i„
);

593 i‡(
ªs
 >= 0) {

594 i‡((
i„
->
Êags
 & 
IFF_UP
Ë|| *
›t_a
)

595 
	`i„_¥öt
(
i„
);

597  
ªs
;

598 
	}
}

600 
	$i„_¥öt_sh‹t
(
öãrÁ˚
 *
±r
)

602 
	`¥ötf
("%-5.5†", 
±r
->
«me
);

603 
	`¥ötf
("%5d %3d", 
±r
->
mtu
,Öå->
mëric
);

605 i‡(
±r
->
°©i°ics_vÆid
) {

606 
	`¥ötf
("%8llu %6lu %6lu %6lu",

607 
±r
->
°©s
.
rx_∑ckës
,Öå->°©s.
rx_îr‹s
,

608 
±r
->
°©s
.
rx_dr›≥d
,Öå->°©s.
rx_fifo_îr‹s
);

609 
	`¥ötf
("%8llu %6lu %6lu %6lu ",

610 
±r
->
°©s
.
tx_∑ckës
,Öå->°©s.
tx_îr‹s
,

611 
±r
->
°©s
.
tx_dr›≥d
,Öå->°©s.
tx_fifo_îr‹s
);

613 
	`¥ötf
("%-56s", 
	`_
(" -Ço statisticsávailable -"));

616 i‡(
±r
->
Êags
 == 0)

617 
	`¥ötf
(
	`_
("[NO FLAGS]"));

618 i‡(
±r
->
Êags
 & 
IFF_ALLMULTI
)

619 
	`¥ötf
("A");

620 i‡(
±r
->
Êags
 & 
IFF_BROADCAST
)

621 
	`¥ötf
("B");

622 i‡(
±r
->
Êags
 & 
IFF_DEBUG
)

623 
	`¥ötf
("D");

624 i‡(
±r
->
Êags
 & 
IFF_LOOPBACK
)

625 
	`¥ötf
("L");

626 i‡(
±r
->
Êags
 & 
IFF_MULTICAST
)

627 
	`¥ötf
("M");

628 #ifde‡
HAVE_DYNAMIC


629 i‡(
±r
->
Êags
 & 
IFF_DYNAMIC
)

630 
	`¥ötf
("d");

632 i‡(
±r
->
Êags
 & 
IFF_PROMISC
)

633 
	`¥ötf
("P");

634 i‡(
±r
->
Êags
 & 
IFF_NOTRAILERS
)

635 
	`¥ötf
("N");

636 i‡(
±r
->
Êags
 & 
IFF_NOARP
)

637 
	`¥ötf
("O");

638 i‡(
±r
->
Êags
 & 
IFF_POINTOPOINT
)

639 
	`¥ötf
("P");

640 i‡(
±r
->
Êags
 & 
IFF_SLAVE
)

641 
	`¥ötf
("s");

642 i‡(
±r
->
Êags
 & 
IFF_MASTER
)

643 
	`¥ötf
("m");

644 i‡(
±r
->
Êags
 & 
IFF_RUNNING
)

645 
	`¥ötf
("R");

646 i‡(
±r
->
Êags
 & 
IFF_UP
)

647 
	`¥ötf
("U");

649 
	`¥ötf
("\n");

650 
	}
}

652 
	$i„_¥öt_l⁄g
(
öãrÁ˚
 *
±r
)

654 
a·y≥
 *
≠
;

655 
hwty≥
 *
hw
;

656 
hf
;

657 
ˇn_com¥ess
 = 0;

658 
rx
, 
tx
, 
sh‹t_rx
, 
sh‹t_tx
;

659 
Rext
[5]="b";

660 
Text
[5]="b";

662 #i‡
HAVE_AFIPX


663 
a·y≥
 *
ùxty≥
 = 
NULL
;

665 #i‡
HAVE_AFECONET


666 
a·y≥
 *
e˘y≥
 = 
NULL
;

668 #i‡
HAVE_AFATALK


669 
a·y≥
 *
dd±y≥
 = 
NULL
;

671 #i‡
HAVE_AFINET6


672 
FILE
 *
f
;

673 
addr6
[40], 
dev«me
[20];

674 
sockaddr_ö6
 
ßp
;

675 
∂í
, 
sc›e
, 
dad_°©us
, 
if_idx
;

676 
a·y≥
 
öë6_a·y≥
;

677 
addr6p
[8][5];

680 
≠
 = 
	`gë_a‚ty≥
(
±r
->
addr
.
ß_Ámûy
);

681 i‡(
≠
 =
NULL
)

682 
≠
 = 
	`gë_a‚ty≥
(0);

684 
hf
 = 
±r
->
ty≥
;

686 i‡(
hf
 =
ARPHRD_CSLIP
 || h‡=
ARPHRD_CSLIP6
)

687 
ˇn_com¥ess
 = 1;

689 
hw
 = 
	`gë_hw¡y≥
(
hf
);

690 i‡(
hw
 =
NULL
)

691 
hw
 = 
	`gë_hw¡y≥
(-1);

693 
	`¥ötf
(
	`_
("%-9.9†LökÉnˇp:%† "), 
±r
->
«me
, 
hw
->
tôÀ
);

696 i‡(
hw
->
¥öt
 !
NULL
 && (! (
	`hw_nuŒ_addªss
(hw, 
±r
->
hwaddr
) &&

697 
hw
->
suµªss_nuŒ_addr
)))

698 
	`¥ötf
(
	`_
("HWadd∏%† "), 
hw
->
	`¥öt
(
±r
->
hwaddr
));

701 *
°r
 = 
hw
->
	`¥öt
((*)
±r
->
hwaddr
);

702 *
ªv
 = 
NULL
;

703 
k
,
j
,
Àn
;

704 
k
 = 
Àn
 = 
	`°æí
(
°r
);

705 
ªv
 = (*)
	`mÆloc
(
Àn
);

706 i‡(
ªv
)

708 
	`mem£t
(
ªv
, 0, 
Àn
);

709 
j
 = 0; j < 
Àn
; j++)

711 
ªv
[
j
] = 
°r
[
k
-1];

712 
k
--;

714 
	`¥ötf
(
	`_
("HWadd∏%† "), 
ªv
);

715 
	`‰ì
(
ªv
);

719 
	`¥ötf
(
	`_
("HWadd∏%† "), 
hw
->
	`¥öt
((*)
±r
->
hwaddr
));

724 #ifde‡
IFF_PORTSEL


725 i‡(
±r
->
Êags
 & 
IFF_PORTSEL
) {

726 
	`¥ötf
(
	`_
("Medü:%s"), 
if_p‹t_ãxt
[
±r
->
m≠
.
p‹t
][0]);

727 i‡(
±r
->
Êags
 & 
IFF_AUTOMEDIA
)

728 
	`¥ötf
(
	`_
("(auto)"));

731 
	`¥ötf
("\n");

733 #i‡
HAVE_AFINET


734 i‡(
±r
->
has_ù
) {

735 
	`¥ötf
(
	`_
(" %†addr:%†"), 
≠
->
«me
,

736 
≠
->
	`•röt
(&
±r
->
addr
, 1));

737 i‡(
±r
->
Êags
 & 
IFF_POINTOPOINT
) {

738 
	`¥ötf
(
	`_
(" P-t-P:%†"), 
≠
->
	`•röt
(&
±r
->
d°addr
, 1));

740 i‡(
±r
->
Êags
 & 
IFF_BROADCAST
) {

741 
	`¥ötf
(
	`_
(" Bˇ°:%†"), 
≠
->
	`•röt
(&
±r
->
brﬂdaddr
, 1));

743 
	`¥ötf
(
	`_
(" Mask:%s\n"), 
≠
->
	`•röt
(&
±r
->
√tmask
, 1));

747 #i‡
HAVE_AFINET6


750 i‡((
f
 = 
	`f›í
(
_PATH_PROCNET_IFINET6
, "r")Ë!
NULL
) {

751 
	`fsˇnf
(
f
, "%4s%4s%4s%4s%4s%4s%4s%4s %02x %02x %02x %02x %20s\n",

752 
addr6p
[0],áddr6p[1],áddr6p[2],áddr6p[3],

753 
addr6p
[4],áddr6p[5],áddr6p[6],áddr6p[7],

754 &
if_idx
, &
∂í
, &
sc›e
, &
dad_°©us
, 
dev«me
Ë!
EOF
) {

755 i‡(!
	`°rcmp
(
dev«me
, 
±r
->
«me
)) {

756 
	`•rötf
(
addr6
, "%s:%s:%s:%s:%s:%s:%s:%s",

757 
addr6p
[0],áddr6p[1],áddr6p[2],áddr6p[3],

758 
addr6p
[4],áddr6p[5],áddr6p[6],áddr6p[7]);

759 
öë6_a·y≥
.
	`öput
(1, 
addr6
, (
sockaddr
 *Ë&
ßp
);

760 
	`¥ötf
(
	`_
(" inet6áddr: %s/%d"),

761 
öë6_a·y≥
.
	`•röt
((
sockaddr
 *Ë&
ßp
, 1), 
∂í
);

762 
	`¥ötf
(
	`_
(" Scope:"));

763 
sc›e
) {

765 
	`¥ötf
(
	`_
("Global"));

767 
IPV6_ADDR_LINKLOCAL
:

768 
	`¥ötf
(
	`_
("Link"));

770 
IPV6_ADDR_SITELOCAL
:

771 
	`¥ötf
(
	`_
("Site"));

773 
IPV6_ADDR_COMPATv4
:

774 
	`¥ötf
(
	`_
("Compat"));

776 
IPV6_ADDR_LOOPBACK
:

777 
	`¥ötf
(
	`_
("Host"));

780 
	`¥ötf
(
	`_
("Unknown"));

782 
	`¥ötf
("\n");

785 
	`f˛o£
(
f
);

789 #i‡
HAVE_AFIPX


790 i‡(
ùxty≥
 =
NULL
)

791 
ùxty≥
 = 
	`gë_a‚ty≥
(
AF_IPX
);

793 i‡(
ùxty≥
 !
NULL
) {

794 i‡(
±r
->
has_ùx_bb
)

795 
	`¥ötf
(
	`_
(" IPX/Ethernet IIáddr:%s\n"),

796 
ùxty≥
->
	`•röt
(&
±r
->
ùxaddr_bb
, 1));

797 i‡(
±r
->
has_ùx_¢
)

798 
	`¥ötf
(
	`_
(" IPX/Ethernet SNAPáddr:%s\n"),

799 
ùxty≥
->
	`•röt
(&
±r
->
ùxaddr_¢
, 1));

800 i‡(
±r
->
has_ùx_e2
)

801 
	`¥ötf
(
	`_
(" IPX/Ethernet 802.2áddr:%s\n"),

802 
ùxty≥
->
	`•röt
(&
±r
->
ùxaddr_e2
, 1));

803 i‡(
±r
->
has_ùx_e3
)

804 
	`¥ötf
(
	`_
(" IPX/Ethernet 802.3áddr:%s\n"),

805 
ùxty≥
->
	`•röt
(&
±r
->
ùxaddr_e3
, 1));

809 #i‡
HAVE_AFATALK


810 i‡(
dd±y≥
 =
NULL
)

811 
dd±y≥
 = 
	`gë_a‚ty≥
(
AF_APPLETALK
);

812 i‡(
dd±y≥
 !
NULL
) {

813 i‡(
±r
->
has_ddp
)

814 
	`¥ötf
(
	`_
(" EthîTÆk Pha£ 2áddr:%s\n"), 
dd±y≥
->
	`•röt
(&
±r
->
dd∑ddr
, 1));

818 #i‡
HAVE_AFECONET


819 i‡(
e˘y≥
 =
NULL
)

820 
e˘y≥
 = 
	`gë_a‚ty≥
(
AF_ECONET
);

821 i‡(
e˘y≥
 !
NULL
) {

822 i‡(
±r
->
has_ec⁄ë
)

823 
	`¥ötf
(
	`_
("Éc⁄ëáddr:%s\n"), 
e˘y≥
->
	`•röt
(&
±r
->
eˇddr
, 1));

827 
	`¥ötf
(" ");

829 i‡(
±r
->
Êags
 == 0)

830 
	`¥ötf
(
	`_
("[NO FLAGS] "));

831 i‡(
±r
->
Êags
 & 
IFF_UP
)

832 
	`¥ötf
(
	`_
("UP "));

833 i‡(
±r
->
Êags
 & 
IFF_BROADCAST
)

834 
	`¥ötf
(
	`_
("BROADCAST "));

835 i‡(
±r
->
Êags
 & 
IFF_DEBUG
)

836 
	`¥ötf
(
	`_
("DEBUG "));

837 i‡(
±r
->
Êags
 & 
IFF_LOOPBACK
)

838 
	`¥ötf
(
	`_
("LOOPBACK "));

839 i‡(
±r
->
Êags
 & 
IFF_POINTOPOINT
)

840 
	`¥ötf
(
	`_
("POINTOPOINT "));

841 i‡(
±r
->
Êags
 & 
IFF_NOTRAILERS
)

842 
	`¥ötf
(
	`_
("NOTRAILERS "));

843 i‡(
±r
->
Êags
 & 
IFF_RUNNING
)

844 
	`¥ötf
(
	`_
("RUNNING "));

845 i‡(
±r
->
Êags
 & 
IFF_NOARP
)

846 
	`¥ötf
(
	`_
("NOARP "));

847 i‡(
±r
->
Êags
 & 
IFF_PROMISC
)

848 
	`¥ötf
(
	`_
("PROMISC "));

849 i‡(
±r
->
Êags
 & 
IFF_ALLMULTI
)

850 
	`¥ötf
(
	`_
("ALLMULTI "));

851 i‡(
±r
->
Êags
 & 
IFF_SLAVE
)

852 
	`¥ötf
(
	`_
("SLAVE "));

853 i‡(
±r
->
Êags
 & 
IFF_MASTER
)

854 
	`¥ötf
(
	`_
("MASTER "));

855 i‡(
±r
->
Êags
 & 
IFF_MULTICAST
)

856 
	`¥ötf
(
	`_
("MULTICAST "));

857 #ifde‡
HAVE_DYNAMIC


858 i‡(
±r
->
Êags
 & 
IFF_DYNAMIC
)

859 
	`¥ötf
(
	`_
("DYNAMIC "));

862 
	`¥ötf
(
	`_
(" MTU:%d Metric:%d"),

863 
±r
->
mtu
,Öå->
mëric
 ?Ötr->metric : 1);

864 #ifde‡
SIOCSKEEPALIVE


865 i‡(
±r
->
outfûl
 ||Öå->
kì∑live
)

866 
	`¥ötf
(
	`_
(" Outfill:%d Keepalive:%d"),

867 
±r
->
outfûl
,Öå->
kì∑live
);

869 
	`¥ötf
("\n");

873 i‡(
±r
->
°©i°ics_vÆid
) {

878 
	`¥ötf
(" ");

880 
	`¥ötf
(
	`_
("RXÖackets:%lluÉrrors:%lu dropped:%lu overruns:%lu frame:%lu\n"),

881 
±r
->
°©s
.
rx_∑ckës
,Öå->°©s.
rx_îr‹s
,

882 
±r
->
°©s
.
rx_dr›≥d
,Öå->°©s.
rx_fifo_îr‹s
,

883 
±r
->
°©s
.
rx_‰ame_îr‹s
);

884 i‡(
ˇn_com¥ess
)

885 
	`¥ötf
(
	`_
(" com¥es£d:%lu\n"), 
±r
->
°©s
.
rx_com¥es£d
);

887 
rx
 = 
±r
->
°©s
.
rx_byãs
;

888 
tx
 = 
±r
->
°©s
.
tx_byãs
;

889 
sh‹t_rx
 = 
rx
 * 10;

890 
sh‹t_tx
 = 
tx
 * 10;

891 i‡(
rx
 > 1048576Ë{ 
sh‹t_rx
 /1048576; 
	`°r˝y
(
Rext
, "Mb"); }

892 i‡(
rx
 > 1024Ë{ 
sh‹t_rx
 /1024; 
	`°r˝y
(
Rext
, "Kb"); }

893 i‡(
tx
 > 1048576Ë{ 
sh‹t_tx
 /1048576; 
	`°r˝y
(
Text
, "Mb"); }

894 i‡(
tx
 > 1024Ë{ 
sh‹t_tx
 /1024; 
	`°r˝y
(
Text
, "Kb"); }

896 
	`¥ötf
(" ");

897 
	`¥ötf
(
	`_
("TXÖackets:%lluÉrrors:%lu dropped:%lu overruns:%lu carrier:%lu\n"),

898 
±r
->
°©s
.
tx_∑ckës
,Öå->°©s.
tx_îr‹s
,

899 
±r
->
°©s
.
tx_dr›≥d
,Öå->°©s.
tx_fifo_îr‹s
,

900 
±r
->
°©s
.
tx_ˇºõr_îr‹s
);

901 
	`¥ötf
(
	`_
(" cﬁlisi⁄s:%lu "), 
±r
->
°©s
.
cﬁlisi⁄s
);

902 i‡(
ˇn_com¥ess
)

903 
	`¥ötf
(
	`_
("com¥es£d:%lu "), 
±r
->
°©s
.
tx_com¥es£d
);

904 i‡(
±r
->
tx_queue_Àn
 != -1)

905 
	`¥ötf
(
	`_
("txqueuñí:%d "), 
±r
->
tx_queue_Àn
);

906 
	`¥ötf
("\n ");

907 
	`¥ötf
(
	`_
("RX bytes:%llu (%lu.%lu %s) TX bytes:%llu (%lu.%lu %s)\n"),

908 
rx
, ()(
sh‹t_rx
 / 10),

909 ()(
sh‹t_rx
 % 10), 
Rext
,

910 
tx
, ()(
sh‹t_tx
 / 10),

911 ()(
sh‹t_tx
 % 10), 
Text
);

914 i‡((
±r
->
m≠
.
úq
 ||Öå->m≠.
mem_°¨t
 ||Öå->m≠.
dma
 ||

915 
±r
->
m≠
.
ba£_addr
)) {

916 
	`¥ötf
(" ");

917 i‡(
±r
->
m≠
.
úq
)

918 
	`¥ötf
(
	`_
("I¡îru±:%d "), 
±r
->
m≠
.
úq
);

919 i‡(
±r
->
m≠
.
ba£_addr
 >= 0x100)

921 
	`¥ötf
(
	`_
("Ba£áddªss:0x%x "), 
±r
->
m≠
.
ba£_addr
);

922 i‡(
±r
->
m≠
.
mem_°¨t
) {

923 
	`¥ötf
(
	`_
("Mem‹y:%lx-%lx "), 
±r
->
m≠
.
mem_°¨t
,Öå->m≠.
mem_íd
);

925 i‡(
±r
->
m≠
.
dma
)

926 
	`¥ötf
(
	`_
("DMA ch™:%x "), 
±r
->
m≠
.
dma
);

927 
	`¥ötf
("\n");

929 
	`¥ötf
("\n");

930 
	}
}

932 
	$i„_¥öt
(
öãrÁ˚
 *
i
)

934 i‡(
i„_sh‹t
)

935 
	`i„_¥öt_sh‹t
(
i
);

937 
	`i„_¥öt_l⁄g
(
i
);

938 
	}
}

	@net-tools-1.60/lib/ipx.c

16 
	~"c⁄fig.h
"

18 #i‡
HAVE_AFIPX


19 
	~<asm/ty≥s.h
>

20 
	~<sys/ty≥s.h
>

21 
	~<sys/sockë.h
>

22 #i‡(
__GLIBC__
 > 2Ë|| (__GLIBC__ =2 && 
__GLIBC_MINOR__
 >= 1)

23 
	~<√tùx/ùx.h
>

25 
	~"ùx.h
"

27 
	~<°dlib.h
>

28 
	~<°dio.h
>

29 
	~<î∫o.h
>

30 
	~<˘y≥.h
>

31 
	~<°rög.h
>

32 
	~<uni°d.h
>

33 
	~<√töë/ö.h
>

34 
	~"vîsi⁄.h
"

35 
	~"√t-suµ‹t.h
"

36 
	~"∑th«mes.h
"

37 
	~"öé.h
"

38 
	~"utû.h
"

40 #i‡(
IPX_NODE_LEN
 != 6)

45 *
	$IPX_¥öt
(*
±r
)

47 
buff
[64];

48 
sockaddr_ùx
 *
sùx
 = (sockaddr_ùx *Ë(
±r
 - 2);

49 
t
;

52 
t
 = 
IPX_NODE_LEN
;Å;Å--)

53 i‡(
sùx
->
sùx_node
[
t
 - 1])

56 i‡(
t
 && 
	`¡ohl
(
sùx
->
sùx_√tw‹k
))

57 
	`¢¥ötf
(
buff
, (buff), "%08lX:%02X%02X%02X%02X%02X%02X",

58 (Ë
	`¡ohl
(
sùx
->
sùx_√tw‹k
),

59 (Ë
sùx
->
sùx_node
[0], () sipx->sipx_node[1],

60 (Ë
sùx
->
sùx_node
[2], () sipx->sipx_node[3],

61 (Ë
sùx
->
sùx_node
[4], () sipx->sipx_node[5]);

62 i‡(!
t
 && 
	`¡ohl
(
sùx
->
sùx_√tw‹k
))

63 
	`¢¥ötf
(
buff
, (buff), "%08lX", (Ë
	`¡ohl
(
sùx
->
sùx_√tw‹k
));

64 i‡(
t
 && !
	`¡ohl
(
sùx
->
sùx_√tw‹k
))

65 
	`¢¥ötf
(
buff
, (buff), "%02X%02X%02X%02X%02X%02X",

66 (Ë
sùx
->
sùx_node
[0], () sipx->sipx_node[1],

67 (Ë
sùx
->
sùx_node
[2], () sipx->sipx_node[3],

68 (Ë
sùx
->
sùx_node
[4], () sipx->sipx_node[5]);

70 
buff
[0] = '\0';

71  (
buff
);

72 
	}
}

76 *
	$IPX_•röt
(
sockaddr
 *
ßp
, 
numîic
)

78 
buf
[64];

80 i‡(
ßp
->
ß_Ámûy
 !
AF_IPX
)

81  
	`ß„_°∫˝y
(
buf
, 
	`_
("[NONE SET]"), (buf));

82  (
	`IPX_¥öt
(
ßp
->
ß_d©a
));

83 
	}
}

86 
	$IPX_gësock
(*
buÂ
, 
sockaddr
 *
ßp
)

88 *
•
 = 
buÂ
, *
bp
;

89 
i
;

90 
vÆ
;

91 
sockaddr_ùx
 *
sùx
 = (sockaddr_ùx *Ë
ßp
;

93 
sùx
->
sùx_p‹t
 = 0;

95 
vÆ
 = 0;

96 
bp
 = (*Ë
sùx
->
sùx_node
;

97 
i
 = 0; i < (
sùx
->
sùx_node
); i++) {

98 *
•
 = 
	`touµî
(*sp);

100 i‡((*
•
 >= 'A') && (*sp <= 'F'))

101 
bp
[
i
] |(Ë(*
•
 - 'A') + 10;

102 i‡((*
•
 >= '0') && (*sp <= '9'))

103 
bp
[
i
] |(Ë(*
•
 - '0');

107 
bp
[
i
] <<= 4;

108 
•
++;

109 *
•
 = 
	`touµî
(*sp);

111 i‡((*
•
 >= 'A') && (*sp <= 'F'))

112 
bp
[
i
] |(Ë(*
•
 - 'A') + 10;

113 i‡((*
•
 >= '0') && (*sp <= '9'))

114 
bp
[
i
] |(Ë(*
•
 - '0');

118 
•
++;

120 i‡((
	`memcmp
(
sùx
->
sùx_node
, "\0\0\0\0\0\0\0\0", 
IPX_NODE_LEN
) == 0) ||

121 (
	`memcmp
(
sùx
->
sùx_node
, "\377\377\377\377\377\377", 
IPX_NODE_LEN
) == 0))

125 
	}
}

129 
	$IPX_öput
(
ty≥
, *
buÂ
, 
sockaddr
 *
ßp
)

131 
sockaddr_ùx
 *
ßi
 = (sockaddr_ùx *Ë
ßp
;

132 
√äum
;

133 *
ï
;

134 
nbo
;

136 
ßi
->
sùx_Ámûy
 = 
AF_IPX
;

137 
ßi
->
sùx_√tw‹k
 = 
	`ht⁄l
(0);

138 
ßi
->
sùx_node
[0] = sai->sipx_node[1] = sai->sipx_node[2] =

139 
ßi
->
sùx_node
[3] = sai->sipx_node[4] = sai->sipx_node[5] = '\0';

140 
ßi
->
sùx_p‹t
 = 0;

142 i‡(
ty≥
 & 4)

143 
nbo
 = 1;

145 
nbo
 = 0;

147 
ty≥
 &= 3;

148 i‡(
ty≥
 <= 1) {

149 
√äum
 = 
	`°πoul
(
buÂ
, &
ï
, 16);

150 i‡((
√äum
 == 0xffffffffL) || (netnum == 0L))

152 i‡(
nbo
)

153 
ßi
->
sùx_√tw‹k
 = 
√äum
;

155 
ßi
->
sùx_√tw‹k
 = 
	`ht⁄l
(
√äum
);

157 i‡(
ty≥
 == 1) {

158 i‡(*
ï
 != '\0')

162 i‡(
ty≥
 == 0) {

163 i‡(*
ï
 != ':')

165 
buÂ
 = 
ï
 + 1;

167  (
	`IPX_gësock
(
buÂ
, 
ßp
));

168 
	}
}

171 
a·y≥
 
	gùx_a·y≥
 =

173 "ùx", 
NULL
, 
AF_IPX
, 0,

174 
IPX_¥öt
, 
IPX_•röt
, 
IPX_öput
, 
NULL
,

175 
NULL
 , NULL, NULL,

	@net-tools-1.60/lib/ipx_gr.c

8 
	~"c⁄fig.h
"

10 #i‡
HAVE_AFIPX


11 
	~<asm/ty≥s.h
>

12 
	~<sys/ty≥s.h
>

13 
	~<sys/sockë.h
>

14 #i‡(
__GLIBC__
 > 2Ë|| (__GLIBC__ =2 && 
__GLIBC_MINOR__
 >= 1)

15 
	~<√tùx/ùx.h
>

17 
	~"ùx.h
"

19 
	~<°dlib.h
>

20 
	~<°dio.h
>

21 
	~<î∫o.h
>

22 
	~<˘y≥.h
>

23 
	~<°rög.h
>

24 
	~<uni°d.h
>

25 
	~<√töë/ö.h
>

26 
	~"vîsi⁄.h
"

27 
	~"√t-suµ‹t.h
"

28 
	~"∑th«mes.h
"

29 
	~"öé.h
"

33 
	$IPX_Ωröt
(
›ti⁄s
)

36 
numîic
 = 
›ti⁄s
 & 
FLAG_NUM_HOST
;

37 
buff
[1024];

38 
√t
[128], 
rouãr_√t
[128];

39 
rouãr_node
[128];

40 
num
;

41 
FILE
 *
Â
 = 
	`f›í
(
_PATH_PROCNET_IPX_ROUTE
, "r");

42 
a·y≥
 *
≠
;

43 
sockaddr
 
ß
;

45 i‡((
≠
 = 
	`gë_a‚ty≥
(
AF_IPX
)Ë=
NULL
) {

46 
	`EINTERN
("lib/ipx_rt.c", "AF_IPX missing");

50 i‡(!
Â
) {

51 
	`≥º‹
(
_PATH_PROCNET_IPX_ROUTE
);

52 
	`¥ötf
(
	`_
("IPXÇot configured inÅhis system.\n"));

56 
	`¥ötf
(
	`_
("Kernel IPXÑoutingÅable\n"));

57 
	`¥ötf
(
	`_
("Destination Router Net Router Node\n"));

59 
	`fgës
(
buff
, 1023, 
Â
);

61 
	`fgës
(
buff
, 1023, 
Â
)) {

62 
num
 = 
	`ssˇnf
(
buff
, "%†%†%s", 
√t
, 
rouãr_√t
, 
rouãr_node
);

63 i‡(
num
 < 3)

67 (Ë
≠
->
	`öput
(5, 
√t
, &
ß
);

68 
	`°r˝y
(
√t
, 
≠
->
	`•röt
(&
ß
, 
numîic
));

71 (Ë
≠
->
	`öput
(5, 
rouãr_√t
, &
ß
);

72 
	`°r˝y
(
rouãr_√t
, 
≠
->
	`•röt
(&
ß
, 
numîic
));

75 (Ë
≠
->
	`öput
(2, 
rouãr_node
, &
ß
);

76 
	`°r˝y
(
rouãr_node
, 
≠
->
	`•röt
(&
ß
, 
numîic
));

78 
	`¥ötf
("%-25†%-25†%-25s\n", 
√t
, 
rouãr_√t
, 
rouãr_node
);

81 (Ë
	`f˛o£
(
Â
);

83 
	}
}

	@net-tools-1.60/lib/ipx_sr.c

1 
	~"c⁄fig.h
"

3 #i‡
HAVE_AFIPX


4 
	~<sys/∑øm.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/sockë.h
>

7 
	~<√töë/ö.h
>

8 
	~<¨∑/öë.h
>

9 
	~<¨∑/«me£r.h
>

10 
	~<sys/io˘l.h
>

11 
	~<˘y≥.h
>

12 
	~<î∫o.h
>

13 
	~<√tdb.h
>

14 
	~<ªsﬁv.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

17 
	~<°dio.h
>

18 
	~<uni°d.h
>

19 
	~"vîsi⁄.h
"

20 
	~"√t-suµ‹t.h
"

21 
	~"∑th«mes.h
"

22 
	~"öé.h
"

24 
	~"√t-„©uªs.h
"

26 
a·y≥
 
ùx_a·y≥
;

30 
	$IPX_röput
(
a˘i⁄
, 
ext
, **
¨gs
)

33 
	`Ârötf
(
°dîr
, 
	`_
("IPX:ÅhisÇeedsÅo be written\n"));

35 
	}
}

	@net-tools-1.60/lib/irda.c

29 
	~"c⁄fig.h
"

31 #i‡
HAVE_AFIRDA
 || 
HAVE_HWIRDA


32 
	~<sys/ty≥s.h
>

33 
	~<sys/io˘l.h
>

34 
	~<sys/sockë.h
>

35 
	~<√t/if_¨p.h
>

36 
	~<°dlib.h
>

37 
	~<°dio.h
>

38 
	~<˘y≥.h
>

39 
	~<î∫o.h
>

40 
	~<f˙é.h
>

41 
	~<°rög.h
>

42 
	~<ãrmios.h
>

43 
	~<uni°d.h
>

44 
	~"√t-suµ‹t.h
"

45 
	~"∑th«mes.h
"

46 
	~"öé.h
"

47 
	~"utû.h
"

50 #i‚de‡
ARPHRD_IRDA


51 
	#ARPHRD_IRDA
 783

	)

60 *
	$úda_¥öt
(*
±r
)

62 
buff
[8];

64 
	`•rötf
(&
buff
[
	`°æí
(buff)], "%02x:%02x:%02x:%02x", 
±r
[3],Ötr[2],

65 
±r
[1],Ötr[0]);

67  (
buff
);

68 
	}
}

70 
hwty≥
 
	gúda_hwty≥
 =

72 "úda", 
NULL
, 
ARPHRD_IRDA
, 2,

73 
úda_¥öt
, 
NULL
, NULL, 0

	@net-tools-1.60/lib/loopback.c

18 
	~"c⁄fig.h
"

20 
	~<sys/ty≥s.h
>

21 
	~<sys/sockë.h
>

22 
	~<√t/if_¨p.h
>

23 
	~<°dlib.h
>

24 
	~<°dio.h
>

25 
	~<î∫o.h
>

26 
	~<˘y≥.h
>

27 
	~<°rög.h
>

28 
	~<uni°d.h
>

29 
	~"√t-suµ‹t.h
"

30 
	~"∑th«mes.h
"

31 
	~"öé.h
"

32 
	~"utû.h
"

35 *
	$¥_un•ec
(*
±r
)

37 
buff
[64];

38 *
pos
;

39 
i
;

41 
pos
 = 
buff
;

42 
i
 = 0; i < (
sockaddr
); i++) {

43 
pos
 +
	`•rötf
’os, "%02X-", (*
±r
++ & 0377));

45 
buff
[
	`°æí
(buff) - 1] = '\0';

46  (
buff
);

47 
	}
}

49 
hwty≥
 
	gun•ec_hwty≥
 =

51 "un•ec", 
NULL
, -1, 0,

52 
¥_un•ec
, 
NULL
, NULL

55 
hwty≥
 
	glo›_hwty≥
 =

57 "lo›", 
NULL
, 
ARPHRD_LOOPBACK
, 0,

58 
NULL
, NULL, NULL

	@net-tools-1.60/lib/masq_info.c

28 
	~<sys/ty≥s.h
>

29 
	~<sys/sockë.h
>

30 
	~<√töë/ö.h
>

31 
	~<¨∑/öë.h
>

32 
	~<î∫o.h
>

33 
	~<°dio.h
>

34 
	~<mÆloc.h
>

35 
	~<°rög.h
>

36 
	~<uni°d.h
>

37 
	~"√t-suµ‹t.h
"

38 
	~"∑th«mes.h
"

39 
	~"vîsi⁄.h
"

40 
	~"c⁄fig.h
"

41 
	~"öé.h
"

42 
	~"√t-„©uªs.h
"

44 #i‡
HAVE_FW_MASQUERADE


46 
	smasq
 {

47 
	mexpúes
;

48 *
	m¥Ÿo
;

49 
sockaddr_ö
 
	m§c
, 
	md°
;

50 
	m•‹t
, 
	mdp‹t
;

51 
	mmp‹t
;

52 
	möô£q
;

53 
	mdñè
;

54 
	mpdñè
;

57 
a·y≥
 *
	g≠
;

58 
	ghas_pdñè
;

60 
	$¥öt_masq
(
masq
 *
ms
, 
numîic_ho°
, 
numîic_p‹t
,

61 
ext
)

63 
möuãs
, 
£c⁄ds
, 
£c100s
;

65 
	`¥ötf
("%-4s", 
ms
->
¥Ÿo
);

67 
£c100s
 = 
ms
->
expúes
 % 100L;

68 
£c⁄ds
 = (
ms
->
expúes
 / 100L) % 60;

69 
möuãs
 = 
ms
->
expúes
 / 6000L;

71 
	`¥ötf
("%3ld:%02ld.%02ld ", 
möuãs
, 
£c⁄ds
, 
£c100s
);

73 i‡(
ext
 > 1) {

74 i‡(
has_pdñè
)

75 
	`¥ötf
("%10lu %5hd %5hd ", 
ms
->
öô£q
,

76 
ms
->
dñè
, ms->
pdñè
);

78 
	`¥ötf
("%10lu %5hd - ", 
ms
->
öô£q
,

79 
ms
->
dñè
);

81 
	`¥ötf
("%-20†", 
≠
->
	`•röt
((
sockaddr
 *Ë&(
ms
->
§c
), 
numîic_ho°
));

82 
	`¥ötf
("%-20†", 
≠
->
	`•röt
((
sockaddr
 *Ë&(
ms
->
d°
), 
numîic_ho°
));

84 
	`¥ötf
("%†-> ", 
	`gë_¢ame
(
ms
->
•‹t
, ms->
¥Ÿo
, 
numîic_p‹t
));

85 
	`¥ötf
("%s", 
	`gë_¢ame
(
ms
->
dp‹t
, ms->
¥Ÿo
, 
numîic_p‹t
));

86 
	`¥ötf
(" (%s)\n", 
	`gë_¢ame
(
ms
->
mp‹t
, ms->
¥Ÿo
, 
numîic_p‹t
));

87 
	}
}

90 
	$ªad_masqöfo
(
FILE
 * 
f
, 
masq
 *
m¶i°
, 
nm¶i°
)

92 
n
, 
ƒód
 = 0;

93 
masq
 *
ms
;

94 
buf
[256];

96 
ƒód
 = 0;Çªad < 
nm¶i°
;Çread++) {

97 
ms
 = &
m¶i°
[
ƒód
];

98 i‡(
has_pdñè
) {

99 i‡((
n
 = 
	`fsˇnf
(
f
, " %s %lX:%hX %lX:%hX %hX %lX %hd %hd %lu",

100 
buf
,

101 (*Ë&
ms
->
§c
.
sö_addr
.
s_addr
, &ms->
•‹t
,

102 (*Ë&
ms
->
d°
.
sö_addr
.
s_addr
, &ms->
dp‹t
,

103 &
ms
->
mp‹t
, &ms->
öô£q
, &ms->
dñè
,

104 &
ms
->
pdñè
, &ms->
expúes
)) == -1)

105  
ƒód
;

107 i‡((
n
 = 
	`fsˇnf
(
f
, " %s %lX:%hX %lX:%hX %hX %lX %hd %lu",

108 
buf
,

109 (*Ë&
ms
->
§c
.
sö_addr
.
s_addr
, &ms->
•‹t
,

110 (*Ë&
ms
->
d°
.
sö_addr
.
s_addr
, &ms->
dp‹t
,

111 &
ms
->
mp‹t
, &ms->
öô£q
, &ms->
dñè
,

112 &
ms
->
expúes
)) == -1)

113  
ƒód
;

115 i‡((
has_pdñè
 && (
n
 != 10)) || (!has_pdelta && (n != 9))) {

116 
	`EINTERN
("masq_info.c", "ip_masquerade formatÉrror");

119 
ms
->
§c
.
sö_Ámûy
 = 
AF_INET
;

120 
ms
->
d°
.
sö_Ámûy
 = 
AF_INET
;

122 i‡(
	`°rcmp
("TCP", 
buf
) == 0)

123 
ms
->
¥Ÿo
 = "tcp";

124 i‡(
	`°rcmp
("UDP", 
buf
) == 0)

125 
ms
->
¥Ÿo
 = "udp";

126 i‡(
	`°rcmp
("ICMP", 
buf
) == 0)

127 
ms
->
¥Ÿo
 = "icmp";

128 i‡(
	`°rcmp
("GRE", 
buf
) == 0)

129 
ms
->
¥Ÿo
 = "gre";

130 i‡(
	`°rcmp
("ESP", 
buf
) == 0)

131 
ms
->
¥Ÿo
 = "esp";

133 
	`EINTERN
("masq_info.c", "ip_masquerade unknownÅype");

138 
ms
->
§c
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(ms->src.sin_addr.s_addr);

139 
ms
->
d°
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(ms->dst.sin_addr.s_addr);

140 
ms
->
•‹t
 = 
	`ht⁄s
(ms->sport);

141 
ms
->
dp‹t
 = 
	`ht⁄s
(ms->dport);

142 
ms
->
mp‹t
 = 
	`ht⁄s
(ms->mport);

144  
ƒód
;

145 
	}
}

148 
	$ù_masq_öfo
(
numîic_ho°
, 
numîic_p‹t
, 
ext
)

150 
FILE
 *
f
;

151 
i
;

152 
buf
[256];

153 
masq
 *
m¶i°
;

154 
¡ŸÆ
 = 0, 
ƒód
;

156 i‡(!(
f
 = 
	`f›í
(
_PATH_PROCNET_IP_MASQ
, "r"))) {

157 i‡(
î∫o
 !
ENOENT
) {

158 
	`≥º‹
(
_PATH_PROCNET_IP_MASQ
);

161 
	`ESYSNOT
("netstat", "ip_masquerade");

164 i‡((
≠
 = 
	`gë_a·y≥
("öë")Ë=
NULL
) {

165 
	`ENOSUPP
("masq_info", "AF INET");

166 
	`f˛o£
(
f
);

169 
	`fgës
(
buf
, (buf), 
f
);

170 
has_pdñè
 = 
	`°r°r
(
buf
, "PDelta") ? 1 : 0;

172 
m¶i°
 = (
masq
 *Ë
	`mÆloc
(16 * (masq));

173 i‡(!
m¶i°
) {

174 
	`EINTERN
("masq_info", "malloc() failed");

175 
	`f˛o£
(
f
);

178 (
ƒód
 = 
	`ªad_masqöfo
(
f
, &(
m¶i°
[
¡ŸÆ
]), 16)) == 16) {

179 
¡ŸÆ
 +
ƒód
;

180 
m¶i°
 = (
masq
 *Ë
	`ªÆloc
(mslist,

181 (
¡ŸÆ
 + 16Ë* (
masq
));

182 i‡(!
m¶i°
) {

183 
	`EINTERN
("masq_info", "realloc() failed");

184 
	`f˛o£
(
f
);

188 
	`f˛o£
(
f
);

190 i‡(
ƒód
 < 0) {

191 i‡(
m¶i°
)

192 
	`‰ì
(
m¶i°
);

195 
¡ŸÆ
 +
ƒód
;

197 i‡(
¡ŸÆ
 > 0) {

198 
	`¥ötf
(
	`_
("IP masqueradingÉntries\n"));

199 
ext
) {

201 
	`¥ötf
(
	`_
("protÉxpire source destinationÖorts\n"));

204 
	`¥ötf
(
	`_
("protÉxpire initseq deltaÖrevd source destinationÖorts\n"));

207 
i
 = 0; i < 
¡ŸÆ
; i++)

208 
	`¥öt_masq
(&(
m¶i°
[
i
]), 
numîic_ho°
, 
numîic_p‹t
, 
ext
);

209 i‡(
m¶i°
)

210 
	`‰ì
(
m¶i°
);

214 
	}
}

	@net-tools-1.60/lib/net-features.h

29 #i‚de‡
_NET_FEATURES_H


30 
	#_NET_FEATURES_H


	)

34 #i‡
deföed
 (
SIOCADDRTOLD
Ë|| deföed (
RTF_IRTT
)

35 
	#HAVE_NEW_ADDRT
 1

	)

38 #ifde‡
RTF_IRTT


39 
	#HAVE_RTF_IRTT
 1

	)

42 #ifde‡
RTF_REJECT


43 
	#HAVE_RTF_REJECT
 1

	)

48 #i‡
deföed
 (
FEATURE_ARP
Ë|| deföed (
FEATURE_ROUTE
Ë|| deföed (
FEATURE_NETSTAT
)

49 *
	gFótuªs
 =

52 #ifde‡
FEATURE_ROUTE


54 #i‡
HAVE_NEW_ADDRT


61 #i‡
HAVE_RTF_IRTT


68 #i‡
HAVE_RTF_REJECT


80 #ifde‡
FEATURE_NETSTAT


82 #i‡
HAVE_NEW_ADDRT


89 #i‡
HAVE_RTF_IRTT


96 #i‡
HAVE_RTF_REJECT


103 #i‡
HAVE_FW_MASQUERADE


114 #i‡
I18N


122 #ifde‡
DFLT_AF


123 "(" 
DFLT_AF
 ")"

126 #i‡
HAVE_AFUNIX


132 #i‡
HAVE_AFINET


138 #i‡
HAVE_AFINET6


144 #i‡
HAVE_AFIPX


150 #i‡
HAVE_AFAX25


156 #i‡
HAVE_AFNETROM


162 #i‡
HAVE_AFX25


168 #i‡
HAVE_AFATALK


174 #i‡
HAVE_AFECONET


180 #i‡
HAVE_AFROSE


189 #ifde‡
DFLT_HW


190 "(" 
DFLT_HW
 ")"

193 #i‡
HAVE_HWETHER


199 #i‡
HAVE_HWARC


205 #i‡
HAVE_HWSLIP


211 #i‡
HAVE_HWPPP


217 #i‡
HAVE_HWTUNNEL


223 #i‡
HAVE_HWTR


229 #i‡
HAVE_HWAX25


236 #i‡
HAVE_HWNETROM


243 #i‡
HAVE_HWX25


250 #i‡
HAVE_HWFR


257 #i‡
HAVE_HWROSE


264 #i‡
HAVE_HWASH


271 #i‡
HAVE_HWSIT


278 #i‡
HAVE_HWFDDI


285 #i‡
HAVE_HWHIPPI


292 #i‡
HAVE_HWHDLCLAPB


	@net-tools-1.60/lib/net-support.h

33 
	~<sys/sockë.h
>

36 
	sa·y≥
 {

37 *
	m«me
;

38 *
	mtôÀ
;

39 
	maf
;

40 
	mÆí
;

41 *(*
	m¥öt
) (*);

42 *(*
	m•röt
Ë(
	msockaddr
 *, 
	mnumîic
);

43 (*
	möput
Ë(
	mty≥
, *
	mbuÂ
, 
	msockaddr
 *);

44 (*
	mhîr‹
Ë(*
	mãxt
);

45 (*
	mΩröt
Ë(
	m›ti⁄s
);

46 (*
	mröput
Ë(
	mtyp
, 
	mext
, **
	m¨gv
);

49 (*
	mgëmask
Ë(*
	m§c
, 
sockaddr
 * 
	mmask
, *
	m«me
);

51 
	mfd
;

52 *
	mÊag_fûe
;

55 
a·y≥
 *
a·y≥s
[];

58 
	shwty≥
 {

59 *
	m«me
;

60 *
	mtôÀ
;

61 
	mty≥
;

62 
	mÆí
;

63 *(*
	m¥öt
) (*);

64 (*
	möput
Ë(*, 
	msockaddr
 *);

65 (*
	ma˘iv©e
Ë(
	mfd
);

66 
	msuµªss_nuŒ_addr
;

70 
hwty≥
 *
gë_hwty≥
(c⁄° *
«me
);

71 
hwty≥
 *
gë_hw¡y≥
(
ty≥
);

72 
¥öt_hwli°
(
ty≥
);

73 
a·y≥
 *
gë_a·y≥
(c⁄° *
«me
);

74 
a·y≥
 *
gë_a‚ty≥
(
ty≥
);

75 
¥öt_aÊi°
(
ty≥
);

76 
hw_nuŒ_addªss
(
hwty≥
 *
hw
, *
addr
);

78 
gë¨gs
(*
°rög
, *
¨gumíts
[]);

80 
gë_sockë_f‹_af
(
af
);

82 
gërouã_öô
();

83 
£åouã_öô
();

84 
a˘iv©e_öô
();

85 
rouã_öfo
(c⁄° *
a‚ame
, 
Êags
);

86 
rouã_edô
(
a˘i⁄
, c⁄° *
a‚ame
, 
Êags
, **
¨gv
);

87 
a˘iv©e_ld
(c⁄° *
hw«me
, 
fd
);

89 
	#RTACTION_ADD
 1

	)

90 
	#RTACTION_DEL
 2

	)

91 
	#RTACTION_HELP
 3

	)

92 
	#RTACTION_FLUSH
 4

	)

93 
	#RTACTION_SHOW
 5

	)

95 
	#FLAG_EXT
 3

	)

96 
	#FLAG_NUM_HOST
 4

	)

97 
	#FLAG_NUM_PORT
 8

	)

98 
	#FLAG_NUM_USER
 16

	)

99 
	#FLAG_NUM
 (
FLAG_NUM_HOST
|
FLAG_NUM_PORT
|
FLAG_NUM_USER
)

	)

100 
	#FLAG_SYM
 32

	)

101 
	#FLAG_CACHE
 64

	)

102 
	#FLAG_FIB
 128

	)

103 
	#FLAG_VERBOSE
 256

	)

105 
ù_masq_öfo
(
numîic_ho°
, 
numîic_p‹t
, 
ext
);

107 
INET_Ωröt
(
›ti⁄s
);

108 
INET6_Ωröt
(
›ti⁄s
);

109 
DDP_Ωröt
(
›ti⁄s
);

110 
IPX_Ωröt
(
›ti⁄s
);

111 
NETROM_Ωröt
(
›ti⁄s
);

112 
AX25_Ωröt
(
›ti⁄s
);

113 
X25_Ωröt
(
›ti⁄s
);

115 
INET_röput
(
a˘i⁄
, 
Êags
, **
¨gv
);

116 
INET6_röput
(
a˘i⁄
, 
Êags
, **
¨gv
);

117 
DDP_röput
(
a˘i⁄
, 
Êags
, **
¨gv
);

118 
IPX_röput
(
a˘i⁄
, 
Êags
, **
¨gv
);

119 
NETROM_röput
(
a˘i⁄
, 
Êags
, **
¨gv
);

120 
AX25_röput
(
a˘i⁄
, 
Êags
, **
¨gv
);

121 
X25_röput
(
a˘i⁄
, 
Êags
, **
¨gv
);

123 
a·øns_›t
(c⁄° *
¨g
);

124 
a·øns_def
(*
toﬁ
, *
¨gv0
, *
dÊt
);

126 *
gë_¢ame
(
socknumbî
, *
¥Ÿo
, 
numîic
);

128 
Êag_unx
;

129 
Êag_ùx
;

130 
Êag_ax25
;

131 
Êag_ddp
;

132 
Êag_√åom
;

133 
Êag_x25
;

134 
Êag_öë
;

135 
Êag_öë6
;

137 
a‚ame
[];

139 
	#AFTRANS_OPTS
 \

150 {"t˝ù", 0, 0, 1}

	)

151 
	#AFTRANS_CNT
 11

	)

153 
	#EINTERN
(
fûe
, 
ãxt
Ë
	`Ârötf
(
°dîr
, \

154 
	`_
("%s: I¡î«»Eº‹ `%s'.\n"),
fûe
,
ãxt
);

	)

156 
	#ENOSUPP
(
A
,
B
Ë
	`Ârötf
(
°dîr
,\

157 
	`_
("%s: feature `%s'Çot supported.\n" \

159 "√wî kî√»sour˚ o∏fuŒ c⁄figuøti⁄.\n"),
A
,
B
)

	)

161 
	#ESYSNOT
(
A
,
B
Ë
	`Ârötf
(
°dîr
, 
	`_
("%s:Çÿsuµ‹àf‹ `%s' o¿thi†sy°em.\n"),A,B)

	)

163 
	#E_NOTFOUND
 8

	)

164 
	#E_SOCK
 7

	)

165 
	#E_LOOKUP
 6

	)

166 
	#E_VERSION
 5

	)

167 
	#E_USAGE
 4

	)

168 
	#E_OPTERR
 3

	)

169 
	#E_INTERN
 2

	)

170 
	#E_NOSUPP
 1

	)

181 
	#RTNH_F_DEAD
 1

	)

182 
	#RTNH_F_PERVASIVE
 2

	)

183 
	#RTNH_F_ONLINK
 4

	)

186 
	#RTCF_DEAD
 
RTNH_F_DEAD


	)

187 
	#RTCF_ONLINK
 
RTNH_F_ONLINK


	)

189 
	#RTCF_NOTIFY
 0x00010000

	)

190 
	#RTCF_DIRECTDST
 0x00020000

	)

191 
	#RTCF_REDIRECTED
 0x00040000

	)

192 
	#RTCF_TPROXY
 0x00080000

	)

193 
	#RTCF_FAST
 0x00200000

	)

194 
	#RTCF_MASQ
 0x00400000

	)

195 
	#RTCF_SNAT
 0x00800000

	)

196 
	#RTCF_DOREDIRECT
 0x01000000

	)

197 
	#RTCF_DIRECTSRC
 0x04000000

	)

198 
	#RTCF_DNAT
 0x08000000

	)

199 
	#RTCF_BROADCAST
 0x10000000

	)

200 
	#RTCF_MULTICAST
 0x20000000

	)

201 
	#RTCF_REJECT
 0x40000000

	)

202 
	#RTCF_LOCAL
 0x80000000

	)

205 #i‚de‡
RTF_DEFAULT


206 
	#RTF_DEFAULT
 0x00010000

	)

208 
	#RTF_ALLONLINK
 0x00020000

	)

209 #i‚de‡
RTF_ADDRCONF


210 
	#RTF_ADDRCONF
 0x00040000

	)

212 
	#RTF_NONEXTHOP
 0x00200000

	)

213 
	#RTF_EXPIRES
 0x00400000

	)

214 
	#RTF_CACHE
 0x01000000

	)

215 
	#RTF_FLOW
 0x02000000

	)

216 
	#RTF_POLICY
 0x04000000

	)

217 
	#RTF_LOCAL
 0x80000000

	)

220 
	#RTF_UP
 0x0001

	)

221 
	#RTF_GATEWAY
 0x0002

	)

222 
	#RTF_HOST
 0x0004

	)

223 
	#RTF_REINSTATE
 0x0008

	)

224 
	#RTF_DYNAMIC
 0x0010

	)

225 
	#RTF_MODIFIED
 0x0020

	)

226 
	#RTF_MTU
 0x0040

	)

227 #i‚de‡
RTF_MSS


228 
	#RTF_MSS
 
RTF_MTU


	)

230 
	#RTF_WINDOW
 0x0080

	)

231 
	#RTF_IRTT
 0x0100

	)

232 
	#RTF_REJECT
 0x0200

	)

235 
	#RTF_NOTCACHED
 0x0400

	)

237 #ifde‡
HAVE_AFECONET


238 #i‚de‡
AF_ECONET


239 
	#AF_ECONET
 19

	)

	@net-tools-1.60/lib/netrom.c

26 
	~"c⁄fig.h
"

28 #i‡
HAVE_AFNETROM
 || 
HAVE_HWNETROM


29 
	~<sys/ty≥s.h
>

30 
	~<sys/io˘l.h
>

31 
	~<sys/sockë.h
>

32 
	~<√t/if_¨p.h
>

33 #i‡(
__GLIBC__
 > 2Ë|| (__GLIBC__ =2 && 
__GLIBC_MINOR__
 >= 1)

34 
	~<√èx25/ax25.h
>

36 
	~<löux/ax25.h
>

38 
	~<°dlib.h
>

39 
	~<°dio.h
>

40 
	~<˘y≥.h
>

41 
	~<î∫o.h
>

42 
	~<f˙é.h
>

43 
	~<°rög.h
>

44 
	~<ãrmios.h
>

45 
	~<uni°d.h
>

46 
	~"√t-suµ‹t.h
"

47 
	~"∑th«mes.h
"

48 
	~"öé.h
"

49 
	~"utû.h
"

51 
	g√åom_îrmsg
[128];

53 
a·y≥
 
√åom_a·y≥
;

55 *
	$NETROM_¥öt
(*
±r
)

57 
buff
[8];

58 
i
;

60 
i
 = 0; i < 6; i++) {

61 
buff
[
i
] = ((
±r
[i] & 0377) >> 1);

62 i‡(
buff
[
i
] == ' ')

63 
buff
[
i
] = '\0';

65 
buff
[6] = '\0';

66 
i
 = ((
±r
[6] & 0x1E) >> 1);

67 i‡(
i
 != 0)

68 
	`•rötf
(&
buff
[
	`°æí
(buff)], "-%d", 
i
);

69  (
buff
);

70 
	}
}

74 *
	$NETROM_•röt
(
sockaddr
 *
ßp
, 
numîic
)

76 
buf
[64];

77 i‡(
ßp
->
ß_Ámûy
 == 0xFFFF || sap->sa_family == 0)

78  
	`ß„_°∫˝y
(
buf
, 
	`_
("[NONE SET]"), (buf));

79  (
	`NETROM_¥öt
(((
sockaddr_ax25
 *Ë
ßp
)->
ßx25_ˇŒ
.
ax25_ˇŒ
));

80 
	}
}

83 
	$NETROM_öput
(
ty≥
, *
buÂ
, 
sockaddr
 *
ßp
)

85 *
±r
;

86 *
‹ig
, 
c
;

87 
i
;

89 
ßp
->
ß_Ámûy
 = 
√åom_a·y≥
.
af
;

90 
±r
 = ((
sockaddr_ax25
 *Ë
ßp
)->
ßx25_ˇŒ
.
ax25_ˇŒ
;

93 
‹ig
 = 
buÂ
;

94 
i
 = 0;

95 (*
buÂ
 !'\0'Ë&& (*buÂ !'-'Ë&& (
i
 < 6)) {

96 
c
 = *
buÂ
++;

97 i‡(
	`i¶owî
(
c
))

98 
c
 = 
	`touµî
(c);

99 i‡(!(
	`isuµî
(
c
Ë|| 
	`isdigô
(c))) {

100 
	`ß„_°∫˝y
(
√åom_îrmsg
, 
	`_
("Invalid callsign"), (netrom_errmsg));

101 #ifde‡
DEBUG


102 
	`Ârötf
(
°dîr
, "√åom_öput(%s): %†!\n", 
√åom_îrmsg
, 
‹ig
);

104 
î∫o
 = 
EINVAL
;

107 *
±r
++ = (Ë((
c
 << 1) & 0xFE);

108 
i
++;

112 i‡((
i
 =6Ë&& (*
buÂ
 != '-') && (*bufp != '\0')) {

113 
	`ß„_°∫˝y
(
√åom_îrmsg
, 
	`_
("CallsignÅooÜong"), (netrom_errmsg));

114 #ifde‡
DEBUG


115 
	`Ârötf
(
°dîr
, "√åom_öput(%s): %†!\n", 
√åom_îrmsg
, 
‹ig
);

117 
î∫o
 = 
E2BIG
;

121 
i
++ < (
ax25_addªss
) - 1) {

122 *
±r
++ = () ((' ' << 1) & 0xFE);

126 i‡(*
buÂ
 == '-') {

127 
i
 = 
	`©oi
(++
buÂ
);

128 *
±r
 = (Ë((
i
 << 1) & 0xFE);

130 *
±r
 = () '\0';

134 #ifde‡
DEBUG


135 
	`Ârötf
(
°dîr
, "√åom_öput(%s): ", 
‹ig
);

136 
i
 = 0; i < (
ax25_addªss
); i++)

137 
	`Ârötf
(
°dîr
, "%02X ", 
ßp
->
ß_d©a
[
i
] & 0377);

138 
	`Ârötf
(
°dîr
, "\n");

142 
	}
}

146 
	$NETROM_hîr‹
(*
ãxt
)

148 i‡(
ãxt
 =
NULL
)

149 
	`Ârötf
(
°dîr
, "%s\n", 
√åom_îrmsg
);

151 
	`Ârötf
(
°dîr
, "%s: %s\n", 
ãxt
, 
√åom_îrmsg
);

152 
	}
}

155 
	$NETROM_höput
(*
buÂ
, 
sockaddr
 *
ßp
)

157 i‡(
	`NETROM_öput
(0, 
buÂ
, 
ßp
) < 0)

159 
ßp
->
ß_Ámûy
 = 
ARPHRD_NETROM
;

161 
	}
}

165 
	$KISS_£t_disc
(
fd
, 
disc
)

167 i‡(
	`io˘l
(
fd
, 
TIOCSETD
, &
disc
) < 0) {

168 
	`Ârötf
(
°dîr
, "KISS_£t_disc(%d): %s\n", 
disc
, 
	`°ªº‹
(
î∫o
));

169  (-
î∫o
);

172 
	}
}

176 
	$KISS_öô
(
fd
)

178 i‡(
	`KISS_£t_disc
(
fd
, 
N_SLIP
) < 0)

180 i‡(
	`io˘l
(
fd
, 
SIOCSIFENCAP
, 4) < 0)

183 
	}
}

186 
hwty≥
 
	g√åom_hwty≥
 =

188 "√åom", 
NULL
, 
ARPHRD_NETROM
, 7,

189 
NETROM_¥öt
, 
NETROM_höput
, 
NULL
, 0

192 
a·y≥
 
	g√åom_a·y≥
 =

194 "√åom", 
NULL
, 
AF_NETROM
, 7,

195 
NETROM_¥öt
, 
NETROM_•röt
, 
NETROM_öput
, 
NETROM_hîr‹
,

196 
NULL
, NULL, NULL,

	@net-tools-1.60/lib/netrom_gr.c

21 
	~"c⁄fig.h
"

23 #i‡
HAVE_AFNETROM


24 
	~<°dlib.h
>

25 
	~<°dio.h
>

26 
	~<uni°d.h
>

27 
	~"√t-suµ‹t.h
"

28 
	~"∑th«mes.h
"

29 
	~"öé.h
"

33 
	$NETROM_Ωröt
(
›ti⁄s
)

35 
FILE
 *
f1
 = 
	`f›í
(
_PATH_PROCNET_NR_NODES
, "r");

36 
FILE
 *
f2
 = 
	`f›í
(
_PATH_PROCNET_NR_NEIGH
, "r");

37 
buf„r
[256];

38 
quÆ
, 
n
, 
w
;

42 
f1
 = 
	`f›í
(
_PATH_PROCNET_NR_NODES
, "r");

43 i‡(!
f1
Ë
	`≥º‹
(
_PATH_PROCNET_NR_NODES
);

44 
f2
 = 
	`f›í
(
_PATH_PROCNET_NR_NEIGH
, "r");

45 i‡(!
f2
Ë
	`≥º‹
(
_PATH_PROCNET_NR_NEIGH
);

47 i‡(
f1
 =
NULL
 || 
f2
 == NULL) {

48 
	`¥ötf
(
	`_
("NET/ROMÇot configured inÅhis system.\n"));

51 
	`¥ötf
(
	`_
("Kernel NET/ROMÑoutingÅable\n"));

52 
	`¥ötf
(
	`_
("Destination Mnemonic Quality Neighbour Iface\n"));

53 
	`fgës
(
buf„r
, 256, 
f1
);

54 
	`fgës
(
buf„r
, 256, 
f1
)) {

55 
buf„r
[9] = 0;

56 
buf„r
[17] = 0;

57 
w
 = 
	`©oi
(
buf„r
 + 19) - 1;

58 
	`¥ötf
("%-9s %-7s ",

59 
buf„r
, buffer + 10);

60 
quÆ
 = 
	`©oi
(
buf„r
 + 24 + 15 * 
w
);

61 
n
 = 
	`©oi
(
buf„r
 + 32 + 15 * 
w
);

62 
	`ªwöd
(
f2
);

63 
	`fgës
(
buf„r
, 256, 
f2
);

64 
	`fgës
(
buf„r
, 256, 
f2
)) {

65 i‡(
	`©oi
(
buf„r
Ë=
n
) {

66 
buf„r
[15] = 0;

67 
buf„r
[20] = 0;

68 
	`¥ötf
("%3d %-9s %s\n",

69 
quÆ
, 
buf„r
 + 6, buffer + 16);

74 
	`f˛o£
(
f1
);

75 
	`f˛o£
(
f2
);

77 
	}
}

	@net-tools-1.60/lib/netrom_sr.c

1 
	~"c⁄fig.h
"

3 #i‡
HAVE_AFNETROM


4 
	~<sys/∑øm.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/sockë.h
>

7 
	~<√töë/ö.h
>

8 
	~<¨∑/öë.h
>

9 
	~<¨∑/«me£r.h
>

11 
	~<sys/io˘l.h
>

12 
	~<˘y≥.h
>

13 
	~<î∫o.h
>

14 
	~<√tdb.h
>

15 
	~<ªsﬁv.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

18 
	~<°dio.h
>

19 
	~<uni°d.h
>

20 
	~"vîsi⁄.h
"

21 
	~"√t-suµ‹t.h
"

22 
	~"∑th«mes.h
"

23 
	~"öé.h
"

24 
	~"√t-„©uªs.h
"

26 
a·y≥
 
√åom_a·y≥
;

32 
	$ußge
()

34 
	`Ârötf
(
°dîr
, 
	`_
("netrom usage\n"));

36  (
E_USAGE
);

37 
	}
}

41 
	$NETROM_röput
(
a˘i⁄
, 
ext
, **
¨gs
)

44 
	`Ârötf
(
°dîr
, 
	`_
("NET/ROM:ÅhisÇeedsÅo be written\n"));

46 
	}
}

	@net-tools-1.60/lib/nstrcmp.c

3 
	~<˘y≥.h
>

4 
	~<°dlib.h
>

5 
	~"utû.h
"

8 
	$n°rcmp
(c⁄° *
a°r
, c⁄° *
b
)

10 c⁄° *
a
 = 
a°r
;

12 *
a
 =*
b
) {

13 i‡(*
a
 == '\0')

15 
a
++;

16 
b
++;

18 i‡(
	`isdigô
(*
a
)) {

19 i‡(!
	`isdigô
(*
b
))

21 
a
 > 
a°r
) {

22 
a
--;

23 i‡(!
	`isdigô
(*
a
)) {

24 
a
++;

27 i‡(!
	`isdigô
(*
b
))

29 
b
--;

31  
	`©oi
(
a
Ë>átoi(
b
) ? 1 : -1;

33  *
a
 - *
b
;

34 
	}
}

	@net-tools-1.60/lib/pathnames.h

14 
	#_PATH_PROCNET_IGMP
 "/¥oc/√t/igmp"

	)

15 
	#_PATH_PROCNET_IGMP6
 "/¥oc/√t/igmp6"

	)

16 
	#_PATH_PROCNET_TCP
 "/¥oc/√t/t˝"

	)

17 
	#_PATH_PROCNET_TCP6
 "/¥oc/√t/t˝6"

	)

18 
	#_PATH_PROCNET_UDP
 "/¥oc/√t/udp"

	)

19 
	#_PATH_PROCNET_UDP6
 "/¥oc/√t/udp6"

	)

20 
	#_PATH_PROCNET_RAW
 "/¥oc/√t/øw"

	)

21 
	#_PATH_PROCNET_RAW6
 "/¥oc/√t/øw6"

	)

22 
	#_PATH_PROCNET_UNIX
 "/¥oc/√t/unix"

	)

23 
	#_PATH_PROCNET_ROUTE
 "/¥oc/√t/rouã"

	)

24 
	#_PATH_PROCNET_ROUTE6
 "/¥oc/√t/ùv6_rouã"

	)

25 
	#_PATH_PROCNET_RTCACHE
 "/¥oc/√t/π_ˇche"

	)

26 
	#_PATH_PROCNET_AX25_ROUTE
 "/¥oc/√t/ax25_rouã"

	)

27 
	#_PATH_PROCNET_NR
 "/¥oc/√t/ƒ"

	)

28 
	#_PATH_PROCNET_NR_NEIGH
 "/¥oc/√t/ƒ_√igh"

	)

29 
	#_PATH_PROCNET_NR_NODES
 "/¥oc/√t/ƒ_nodes"

	)

30 
	#_PATH_PROCNET_ARP
 "/¥oc/√t/¨p"

	)

31 
	#_PATH_PROCNET_AX25
 "/¥oc/√t/ax25"

	)

32 
	#_PATH_PROCNET_IPX
 "/¥oc/√t/ùx"

	)

33 
	#_PATH_PROCNET_IPX_ROUTE
 "/¥oc/√t/ùx_rouã"

	)

34 
	#_PATH_PROCNET_ATALK
 "/¥oc/√t/≠∂ëÆk"

	)

35 
	#_PATH_PROCNET_IP_BLK
 "/¥oc/√t/ù_block"

	)

36 
	#_PATH_PROCNET_IP_FWD
 "/¥oc/√t/ù_f‹w¨d"

	)

37 
	#_PATH_PROCNET_IP_ACC
 "/¥oc/√t/ù_ac˘"

	)

38 
	#_PATH_PROCNET_IP_MASQ
 "/¥oc/√t/ù_masquîade"

	)

39 
	#_PATH_PROCNET_NDISC
 "/¥oc/√t/ndisc"

	)

40 
	#_PATH_PROCNET_IFINET6
 "/¥oc/√t/if_öë6"

	)

41 
	#_PATH_PROCNET_DEV
 "/¥oc/√t/dev"

	)

42 
	#_PATH_PROCNET_RARP
 "/¥oc/√t/øΩ"

	)

43 
	#_PATH_ETHERS
 "/ëc/ëhîs"

	)

44 
	#_PATH_PROCNET_ROSE_ROUTE
 "/¥oc/√t/ro£_rouãs"

	)

45 
	#_PATH_PROCNET_X25
 "/¥oc/√t/x25"

	)

46 
	#_PATH_PROCNET_X25_ROUTE
 "/¥oc/√t/x25_rouãs"

	)

47 
	#_PATH_PROCNET_DEV_MCAST
 "/¥oc/√t/dev_mˇ°"

	)

50 
	#_PATH_DEV_ROUTE
 "/dev/rouã"

	)

	@net-tools-1.60/lib/ppp.c

21 
	~"c⁄fig.h
"

23 #i‡
HAVE_HWPPP


25 
	~<sys/ty≥s.h
>

26 
	~<sys/io˘l.h
>

27 
	~<sys/sockë.h
>

28 
	~<√t/if_¨p.h
>

29 
	~<°dlib.h
>

30 
	~<°dio.h
>

31 
	~<˘y≥.h
>

32 
	~<î∫o.h
>

33 
	~<f˙é.h
>

34 
	~<°rög.h
>

35 
	~<ãrmios.h
>

36 
	~<uni°d.h
>

37 
	~"√t-suµ‹t.h
"

38 
	~"∑th«mes.h
"

39 
	~"öé.h
"

42 
	$do_µp
(
fd
)

44 
	`Ârötf
(
°dîr
, 
	`_
("You cannot start PPP withÅhisÖrogram.\n"));

46 
	}
}

49 
hwty≥
 
	gµp_hwty≥
 =

51 "µp", 
NULL
, 
ARPHRD_PPP
, 0,

52 
NULL
, NULL, 
do_µp
, 0

	@net-tools-1.60/lib/ppp_ac.c

15 
	~"c⁄fig.h
"

17 #i‡
HAVE_HWPPP


19 
	~<sys/ty≥s.h
>

20 
	~<sys/io˘l.h
>

21 
	~<sys/sockë.h
>

22 
	~<√t/if_¨p.h
>

23 
	~<°dlib.h
>

24 
	~<°dio.h
>

25 
	~<˘y≥.h
>

26 
	~<î∫o.h
>

27 
	~<f˙é.h
>

28 
	~<°rög.h
>

29 
	~<ãrmios.h
>

30 
	~<uni°d.h
>

31 
	~"√t-suµ‹t.h
"

32 
	~"∑th«mes.h
"

33 
	~"öé.h
"

36 
	$PPP_a˘iv©e
(
fd
)

38 
	`Ârötf
(
°dîr
, 
	`_
("Sorry, useÖppd!\n"));

40 
	}
}

	@net-tools-1.60/lib/proc.c

5 
	~<°rög.h
>

6 
	~<°d¨g.h
>

7 
	~<°dio.h
>

8 
	~<˘y≥.h
>

12 *
	$¥oc_gí_fmt
(*
«me
, 
m‹e
, 
FILE
 * 
fh
,...)

14 
buf
[512], 
f‹m©
[512] = "";

15 *
tôÀ
, *
hód
, *
hdr
;

16 
va_li°
 
≠
;

18 i‡(!
	`fgës
(
buf
, ( bufË- 1, 
fh
))

19  
NULL
;

20 
	`°rˇt
(
buf
, " ");

22 
	`va_°¨t
(
≠
, 
fh
);

23 
tôÀ
 = 
	`va_¨g
(
≠
, *);

24 
hdr
 = 
buf
; hdr;) {

25 
	`is•a˚
(*
hdr
) || *hdr == '|')

26 
hdr
++;

27 
hód
 = 
hdr
;

28 
hdr
 = 
	`°Ωbrk
(hdr, "| \t\n");

29 i‡(
hdr
)

30 *
hdr
++ = 0;

32 i‡(!
	`°rcmp
(
tôÀ
, 
hód
)) {

33 
	`°rˇt
(
f‹m©
, 
	`va_¨g
(
≠
, *));

34 
tôÀ
 = 
	`va_¨g
(
≠
, *);

35 i‡(!
tôÀ
 || !
hód
)

38 
	`°rˇt
(
f‹m©
, "%*s");

40 
	`°rˇt
(
f‹m©
, " ");

42 
	`va_íd
(
≠
);

44 i‡(!
m‹e
 && 
tôÀ
) {

45 
	`Ârötf
(
°dîr
, "warning: %s doesÇot containÑequired field %s\n",

46 
«me
, 
tôÀ
);

47  
NULL
;

49  
	`°rdup
(
f‹m©
);

50 
	}
}

56 
	$¥oc_guess_fmt
(*
«me
, 
FILE
 *
fh
, ...)

58 
buf
[512];

59 *
tmp
;

60 
Êag
 = 0;

61 
va_li°
 
≠
;

63 i‡(!
	`fgës
(
buf
, ( bufË- 1, 
fh
))

65 
	`°rˇt
(
buf
, "\0");

66 
	`va_°¨t
(
≠
, 
fh
);

67 (
tmp
 = 
	`va_¨g
(
≠
, *))) {

68 
f
 = 
	`va_¨g
(
≠
, );

69 i‡(
	`°r°r
(
buf
,
tmp
) != 0)

70 
Êag
 |
f
;

72 
	`va_íd
(
≠
);

73  
Êag
;

74 
	}
}

	@net-tools-1.60/lib/proc.h

4 *
¥oc_gí_fmt
(*
«me
, 
m‹e
, 
FILE
 * 
fh
,...);

5 
¥oc_guess_fmt
(*
«me
, 
FILE
* 
fh
,...);

	@net-tools-1.60/lib/rose.c

18 
	~"c⁄fig.h
"

20 #i‡
HAVE_AFROSE
 || 
HAVE_HWROSE


21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<sys/io˘l.h
>

24 
	~<sys/sockë.h
>

25 
	~<√t/if_¨p.h
>

26 
	~<°dlib.h
>

27 
	~<°dio.h
>

28 
	~<˘y≥.h
>

29 
	~<î∫o.h
>

30 
	~<f˙é.h
>

31 
	~<°rög.h
>

32 
	~<ãrmios.h
>

33 
	~<uni°d.h
>

34 
	~"√t-suµ‹t.h
"

35 
	~"∑th«mes.h
"

36 
	~"öé.h
"

38 #i‚de‡
_NETROSE_ROSE_H


39 
	~<löux/ax25.h
>

40 
	~<löux/ro£.h
>

42 #unde‡
AF_ROSE


43 #i‡
PF_ROSE
 =
AF_ROSE


45 #unde‡
PF_ROSE


46 
	#PF_ROSE
 11

	)

49 
	#AF_ROSE
 
PF_ROSE


	)

52 
	gROSE_îrmsg
[128];

54 
a·y≥
 
ro£_a·y≥
;

57 
	$ROSE_¥öt
(*
±r
)

59 
buff
[12];

61 
	`¢¥ötf
(
buff
, (buff), "%02x%02x%02x%02x%02x", 
±r
[0],Ötr[1],Ötr[2],Ötr[3],Ötr[4]);

62 
buff
[10] = '\0';

63  (
buff
);

64 
	}
}

68 
	$ROSE_•röt
(
sockaddr
 *
ßp
, 
numîic
)

70 i‡(
ßp
->
ß_Ámûy
 == 0xFFFF || sap->sa_family == 0)

71  
	`_
("[NONE SET]");

73  (
	`ROSE_¥öt
(((
sockaddr_ro£
 *Ë
ßp
)->
§o£_addr
.
ro£_addr
));

74 
	}
}

77 
	$ROSE_öput
(
ty≥
, *
buÂ
, 
sockaddr
 *
ßp
)

79 *
±r
;

80 
i
, 
o
;

82 
ßp
->
ß_Ámûy
 = 
ro£_a·y≥
.
af
;

83 
±r
 = ((
sockaddr_ro£
 *Ë
ßp
)->
§o£_addr
.
ro£_addr
;

86 i‡(
	`°æí
(
buÂ
) != 10) {

87 
	`°r˝y
(
ROSE_îrmsg
, 
	`_
("Nodeáddress must beÅen digits"));

88 #ifde‡
DEBUG


89 
	`Ârötf
(
°dîr
, "ro£_öput(%s): %†!\n", 
ROSE_îrmsg
, 
‹ig
);

91 
î∫o
 = 
EINVAL
;

95 
i
 = 0, 
o
 = 0; i < 5; i++) {

96 
o
 = 
i
 * 2;

97 
±r
[
i
] = (((
buÂ
[
o
] - '0') << 4) | (bufp[o + 1] - '0'));

101 #ifde‡
DEBUG


102 
	`Ârötf
(
°dîr
, "ro£_öput(%s): ", 
‹ig
);

103 
i
 = 0; i < (
ro£_addªss
); i++)

104 
	`Ârötf
(
°dîr
, "%02X ", 
ßp
->
ß_d©a
[
i
] & 0377);

105 
	`Ârötf
(
°dîr
, "\n");

109 
	}
}

113 
	$ROSE_hîr‹
(*
ãxt
)

115 i‡(
ãxt
 =
NULL
)

116 
	`Ârötf
(
°dîr
, "%s\n", 
ROSE_îrmsg
);

118 
	`Ârötf
(
°dîr
, "%s: %s\n", 
ãxt
, 
ROSE_îrmsg
);

119 
	}
}

122 
	$ROSE_höput
(*
buÂ
, 
sockaddr
 *
ßp
)

124 i‡(
	`ROSE_öput
(0, 
buÂ
, 
ßp
) < 0)

126 
ßp
->
ß_Ámûy
 = 
ARPHRD_ROSE
;

128 
	}
}

130 
hwty≥
 
	gro£_hwty≥
 =

132 "ro£", 
NULL
, 
ARPHRD_ROSE
, 10,

133 
ROSE_¥öt
, 
ROSE_höput
, 
NULL


136 
a·y≥
 
	gro£_a·y≥
 =

138 "ro£", 
NULL
, 
AF_ROSE
, 10,

139 
ROSE_¥öt
, 
ROSE_•röt
, 
ROSE_öput
, 
ROSE_hîr‹
,

140 
NULL
, NULL, NULL,

	@net-tools-1.60/lib/rose_gr.c

20 
	~"c⁄fig.h
"

22 #i‡
HAVE_AFROSE


24 
	~<sys/ty≥s.h
>

25 
	~<sys/io˘l.h
>

26 
	~<löux/ro£.h
>

27 
	~<sys/sockë.h
>

28 
	~<√t/if_¨p.h
>

29 
	~<˘y≥.h
>

30 
	~<î∫o.h
>

31 
	~<f˙é.h
>

32 
	~<°rög.h
>

33 
	~<ãrmios.h
>

35 
	~<°dlib.h
>

36 
	~<°dio.h
>

37 
	~<uni°d.h
>

38 
	~"√t-suµ‹t.h
"

39 
	~"∑th«mes.h
"

40 
	~"öé.h
"

42 
	$ROSE_Ωröt
(
›ti⁄s
)

44 
FILE
 *
f
 = 
NULL
;

45 
buf„r
[256];

46 
u£
;

48 
f
=
	`f›í
(
_PATH_PROCNET_ROSE_ROUTE
, "r");

49 i‡(
f
 =
NULL
) {

50 
	`≥º‹
(
_PATH_PROCNET_ROSE_ROUTE
);

51 
	`¥ötf
(
	`_
("ROSEÇot configured inÅhis system.\n"));

54 
	`¥ötf
(
	`_
("Kernel ROSEÑoutingÅable\n"));

55 
	`¥ötf
(
	`_
("Destination Iface Use\n"));

56 
	`fgës
(
buf„r
, 256, 
f
);

57 
	`fgës
(
buf„r
, 256, 
f
)) {

58 
buf„r
[9] = 0;

59 
buf„r
[14] = 0;

60 
u£
 = 
	`©oi
(
buf„r
 + 15);

61 
	`¥ötf
("%-9s %-5s %5d\n",

62 
buf„r
, buf„∏+ 10, 
u£
);

64 
	`f˛o£
(
f
);

66 
	}
}

	@net-tools-1.60/lib/setroute.c

27 
	~<°dio.h
>

28 
	~<°rög.h
>

29 
	~"√t-suµ‹t.h
"

30 
	~"∑th«mes.h
"

31 
	~"vîsi⁄.h
"

32 
	~"c⁄fig.h
"

33 
	~"öé.h
"

35 
a·y≥
 
un•ec_a·y≥
;

36 
a·y≥
 
unix_a·y≥
;

37 
a·y≥
 
öë_a·y≥
;

38 
a·y≥
 
öë6_a·y≥
;

39 
a·y≥
 
ax25_a·y≥
;

40 
a·y≥
 
√åom_a·y≥
;

41 
a·y≥
 
ùx_a·y≥
;

42 
a·y≥
 
ddp_a·y≥
;

43 
a·y≥
 
x25_a·y≥
;

45 
	$£åouã_öô
()

47 #i‡
HAVE_AFINET


48 
öë_a·y≥
.
röput
 = 
INET_röput
;

50 #i‡
HAVE_AFINET6


51 
öë6_a·y≥
.
röput
 = 
INET6_röput
;

53 #i‡
HAVE_AFNETROM


54 
√åom_a·y≥
.
röput
 = 
NETROM_röput
;

56 #i‡
HAVE_AFIPX


57 
ùx_a·y≥
.
röput
 = 
IPX_röput
;

59 #i‡
HAVE_AFX25


60 
x25_a·y≥
.
röput
 = 
X25_röput
;

63 #i‡
HAVE_AFAX25


64 
ax25_a·y≥
.
röput
 = 
AX25_röput
;

66 #i‡
HAVE_AFATALK


67 
ddp_a·y≥
.
röput
 = 
DDP_röput
;

70 
	}
}

73 
	$rouã_edô
(
a˘i⁄
, c⁄° *
a‚ame
, 
›ti⁄s
, **
¨gv
)

75 
a·y≥
 *
≠
;

77 
≠
 = 
	`gë_a·y≥
(
a‚ame
);

79 i‡(!
≠
) {

80 
	`Ârötf
(
°dîr
, 
	`_
("Addªs†Ámûy `%s'ÇŸ suµ‹ãd.\n"), 
a‚ame
);

81  (
E_OPTERR
);

83 i‡(!
≠
->
röput
) {

84 
	`Ârötf
(
°dîr
, 
	`_
("Nÿroutög f‹áddªs†Ámûy `%s'.\n"), 
≠
->
«me
);

85  (
E_OPTERR
);

87  (
≠
->
	`röput
(
a˘i⁄
, 
›ti⁄s
, 
¨gv
));

88 
	}
}

	@net-tools-1.60/lib/sit.c

17 
	~"c⁄fig.h
"

19 #i‡
HAVE_HWSIT


21 
	~<sys/ty≥s.h
>

22 
	~<sys/io˘l.h
>

23 
	~<sys/sockë.h
>

24 
	~<√t/if_¨p.h
>

25 
	~<°dlib.h
>

26 
	~<°dio.h
>

27 
	~<˘y≥.h
>

28 
	~<î∫o.h
>

29 
	~<f˙é.h
>

30 
	~<°rög.h
>

31 
	~<ãrmios.h
>

32 
	~<uni°d.h
>

33 
	~"√t-suµ‹t.h
"

34 
	~"∑th«mes.h
"

36 #i‚de‡
ARPHRD_SIT


38 
	#ARPHRD_SIT
 776

	)

41 
hwty≥
 
	gsô_hwty≥
 =

43 "sô", 
NULL
, 
ARPHRD_SIT
, 0,

44 
NULL
, NULL, NULL, 0

	@net-tools-1.60/lib/slip.c

17 
	~"c⁄fig.h
"

19 #i‡
HAVE_HWSLIP


21 
	~<sys/ty≥s.h
>

22 
	~<sys/io˘l.h
>

23 
	~<sys/sockë.h
>

24 
	~<√t/if_¨p.h
>

25 
	~<°dlib.h
>

26 
	~<°dio.h
>

27 
	~<˘y≥.h
>

28 
	~<î∫o.h
>

29 
	~<f˙é.h
>

30 
	~<°rög.h
>

31 
	~<ãrmios.h
>

32 
	~<uni°d.h
>

33 
	~"√t-suµ‹t.h
"

34 
	~"∑th«mes.h
"

37 
hwty≥
 
	g¶ù_hwty≥
 =

39 "¶ù", 
NULL
, 
ARPHRD_SLIP
, 0,

40 
NULL
, NULL, NULL

42 
hwty≥
 
	gc¶ù_hwty≥
 =

44 "c¶ù", 
NULL
, 
ARPHRD_CSLIP
, 0,

45 
NULL
, NULL, NULL

47 
hwty≥
 
	g¶ù6_hwty≥
 =

49 "¶ù6", 
NULL
, 
ARPHRD_SLIP6
, 0,

50 
NULL
, NULL, NULL

52 
hwty≥
 
	gc¶ù6_hwty≥
 =

54 "c¶ù6", 
NULL
, 
ARPHRD_CSLIP6
, 0,

55 
NULL
, NULL, NULL

57 
hwty≥
 
	gad≠tive_hwty≥
 =

59 "ad≠tive", 
NULL
, 
ARPHRD_ADAPT
, 0,

60 
NULL
, NULL, NULL

	@net-tools-1.60/lib/slip_ac.c

19 
	~"c⁄fig.h
"

21 #i‡
HAVE_HWSLIP


23 
	~<sys/ty≥s.h
>

24 
	~<sys/io˘l.h
>

25 
	~<sys/sockë.h
>

26 
	~<√t/if_¨p.h
>

27 
	~<°dlib.h
>

28 
	~<°dio.h
>

29 
	~<˘y≥.h
>

30 
	~<î∫o.h
>

31 
	~<f˙é.h
>

32 
	~<°rög.h
>

33 
	~<ãrmios.h
>

34 
	~<uni°d.h
>

35 
	~"√t-suµ‹t.h
"

36 
	~"∑th«mes.h
"

40 
	$SLIP_£t_disc
(
fd
, 
disc
)

42 i‡(
	`io˘l
(
fd
, 
TIOCSETD
, &
disc
) < 0) {

43 
	`Ârötf
(
°dîr
, "SLIP_£t_disc(%d): %s\n", 
disc
, 
	`°ªº‹
(
î∫o
));

44  (-
î∫o
);

47 
	}
}

51 
	$SLIP_£t_íˇp
(
fd
, 
íˇp
)

53 i‡(
	`io˘l
(
fd
, 
SIOCSIFENCAP
, &
íˇp
) < 0) {

54 
	`Ârötf
(
°dîr
, "SLIP_£t_íˇp(%d): %s\n", 
íˇp
, 
	`°ªº‹
(
î∫o
));

55  (-
î∫o
);

58 
	}
}

62 
	$SLIP_a˘iv©e
(
fd
)

64 i‡(
	`SLIP_£t_disc
(
fd
, 
N_SLIP
) < 0)

66 i‡(
	`SLIP_£t_íˇp
(
fd
, 0) < 0)

69 
	}
}

73 
	$CSLIP_a˘iv©e
(
fd
)

75 i‡(
	`SLIP_£t_disc
(
fd
, 
N_SLIP
) < 0)

77 i‡(
	`SLIP_£t_íˇp
(
fd
, 1) < 0)

80 
	}
}

84 
	$SLIP6_a˘iv©e
(
fd
)

86 i‡(
	`SLIP_£t_disc
(
fd
, 
N_SLIP
) < 0)

88 i‡(
	`SLIP_£t_íˇp
(
fd
, 2) < 0)

91 
	}
}

95 
	$CSLIP6_a˘iv©e
(
fd
)

97 i‡(
	`SLIP_£t_disc
(
fd
, 
N_SLIP
) < 0)

99 i‡(
	`SLIP_£t_íˇp
(
fd
, 3) < 0)

102 
	}
}

106 
	$ADAPTIVE_a˘iv©e
(
fd
)

108 i‡(
	`SLIP_£t_disc
(
fd
, 
N_SLIP
) < 0)

110 i‡(
	`SLIP_£t_íˇp
(
fd
, 8) < 0)

113 
	}
}

	@net-tools-1.60/lib/sockets.c

9 
	~<sys/sockë.h
>

10 
	~<°dio.h
>

11 
	~<uni°d.h
>

13 
	~"c⁄fig.h
"

14 
	~"sockës.h
"

15 
	~"öé.h
"

16 
	~"utû.h
"

17 
	~"√t-suµ‹t.h
"

19 
	gskfd
 = -1;

21 
	$sockës_›í
(
Ámûy
)

23 
a·y≥
 **
a·
;

24 
sfd
 = -1;

25 
f‹˚
 = -1;

27 i‡(
f‹˚
 < 0) {

28 
f‹˚
 = 0;

29 i‡(
	`kî√l_vîsi⁄
(Ë< 
	`KRELEASE
(2, 1, 0))

30 
f‹˚
 = 1;

31 i‡(
	`ac˚ss
("/¥oc/√t", 
R_OK
))

32 
f‹˚
 = 1;

34 
a·
 = 
a·y≥s
; *aft;áft++) {

35 
a·y≥
 *
af
 = *
a·
;

36 
ty≥
 = 
SOCK_DGRAM
;

37 i‡(
af
->a‡=
AF_UNSPEC
)

39 i‡(
Ámûy
 && famûy !
af
->af)

41 i‡(
af
->
fd
 != -1) {

42 
sfd
 = 
af
->
fd
;

46 i‡(!
Ámûy
 && !
f‹˚
 && 
af
->
Êag_fûe
) {

47 i‡(
	`ac˚ss
(
af
->
Êag_fûe
, 
R_OK
))

50 #i‡
HAVE_AFNETROM


51 i‡(
af
->a‡=
AF_NETROM
)

52 
ty≥
 = 
SOCK_SEQPACKET
;

54 #i‡
HAVE_AFX25


55 i‡(
af
->a‡=
AF_X25
)

56 
ty≥
 = 
SOCK_SEQPACKET
;

58 
af
->
fd
 = 
	`sockë
◊f->af, 
ty≥
, 0);

59 i‡(
af
->
fd
 >= 0)

60 
sfd
 = 
af
->
fd
;

62 i‡(
sfd
 < 0)

63 
	`Ârötf
(
°dîr
, 
	`_
("No usableáddress families found.\n"));

64  
sfd
;

65 
	}
}

	@net-tools-1.60/lib/strip.c

15 
	~"c⁄fig.h
"

17 #i‡
HAVE_HWSTRIP


19 
	~<sys/ty≥s.h
>

20 
	~<sys/io˘l.h
>

21 
	~<sys/sockë.h
>

22 
	~<√t/if_¨p.h
>

23 
	~<löux/ty≥s.h
>

24 
	~<löux/if_°rù.h
>

25 
	~<°dlib.h
>

26 
	~<°dio.h
>

27 
	~<˘y≥.h
>

28 
	~<î∫o.h
>

29 
	~<f˙é.h
>

30 
	~<°rög.h
>

31 
	~<ãrmios.h
>

32 
	~<uni°d.h
>

33 
	~"√t-suµ‹t.h
"

34 
	~"∑th«mes.h
"

35 
	~"utû.h
"

36 
	~"öé.h
"

39 
hwty≥
 
°rù_hwty≥
;

42 
	$¥_°rù
(*
±r
)

44 
buff
[64];

45 if(
±r
[1])

46 
	`•rötf
(
buff
, "%02x-%02x%02x-%02x%02x", *(
±r
+1), *(ptr+2), *(ptr+3),

47 *(
±r
+4), *(ptr+5));

49 
	`•rötf
(
buff
, "%02x%02x-%02x%02x", *(
±r
+2), *(ptr+3), *(ptr+4),

50 *(
±r
+5));

51  
buff
;

52 
	}
}

55 
	$ö_°rù
(*
buÂ
, 
sockaddr
 *
ßp
)

57 
i
,
i0
;

58 
MëricomAddªss
 *
haddr
 = (MëricomAddªs†*Ë(
ßp
->
ß_d©a
);

61 
ßp
->
ß_Ámûy
 = 
°rù_hwty≥
.
ty≥
;

64 
i0
 = 
i
 = (
buÂ
[0] == '*') ? 1 : 0;

66 
buÂ
[
i
] && (bufp[i] != '-'))

67 
i
++;

69 i‡(
buÂ
[
i
] != '-')

72 if(
i
-
i0
 == 2)

74 
haddr
->
c
[1] = 
	`°πﬁ
(&
buÂ
[
i0
], 0, 16);

75 
i
++;

76 if(
buÂ
[
i
] == 0)  -1;

78 
haddr
->
c
[1] = 0;

79 
i
=
i0
;

81 
haddr
->
c
[2] = 
	`°πﬁ
(&
buÂ
[
i
], 0, 16) >> 8;

82 
haddr
->
c
[3] = 
	`°πﬁ
(&
buÂ
[
i
], 0, 16) & 0xFF;

84 
buÂ
[
i
] && (bufp[i] != '-'))

85 
i
++;

87 i‡(
buÂ
[
i
] != '-')

90 
haddr
->
c
[4] = 
	`°πﬁ
(&
buÂ
[
i
+1], 0, 16) >> 8;

91 
haddr
->
c
[5] = 
	`°πﬁ
(&
buÂ
[
i
+1], 0, 16) & 0xFF;

92 
haddr
->
c
[0] = 0;

95 
	}
}

100 
	$do_°rù
(
fd
)

102 
disc
 = 
N_STRIP
;

103 i‡(
	`io˘l
(
fd
, 
TIOCSETD
, &
disc
) < 0)

105 
	`Ârötf
(
°dîr
, "STRIP_£t_disc(%d): %s\n", 
disc
, 
	`°ªº‹
(
î∫o
));

106 (-
î∫o
);

109 
	}
}

111 
hwty≥
 
	g°rù_hwty≥
 = {

112 "°rù", "Mëricom SèrmodêIP", 
ARPHRD_METRICOM
, (
MëricomAddªss
),

113 
¥_°rù
, 
ö_°rù
, 
do_°rù
, 0

	@net-tools-1.60/lib/tr.c

16 
	~"c⁄fig.h
"

18 #i‡
HAVE_HWTR


19 
	~<asm/ty≥s.h
>

20 
	~<sys/ty≥s.h
>

21 
	~<sys/sockë.h
>

22 
	~<√t/if_¨p.h
>

23 
	~<löux/if_å.h
>

24 
	~<°dlib.h
>

25 
	~<°dio.h
>

26 
	~<î∫o.h
>

27 
	~<˘y≥.h
>

28 
	~<°rög.h
>

29 
	~<uni°d.h
>

30 
	~"√t-suµ‹t.h
"

31 
	~"∑th«mes.h
"

32 
	~"öé.h
"

34 
hwty≥
 
å_hwty≥
;

36 *
	$¥_å
(*
±r
)

38 
buff
[64];

40 
	`¢¥ötf
(
buff
, (buff), "%02X:%02X:%02X:%02X:%02X:%02X",

41 (
±r
[0] & 0377), (ptr[1] & 0377), (ptr[2] & 0377),

42 (
±r
[3] & 0377), (ptr[4] & 0377), (ptr[5] & 0377)

44  (
buff
);

45 
	}
}

48 
	$ö_å
(*
buÂ
, 
sockaddr
 *
ßp
)

50 *
±r
;

51 
c
, *
‹ig
;

52 
i
, 
vÆ
;

54 
ßp
->
ß_Ámûy
 = 
å_hwty≥
.
ty≥
;

55 
±r
 = 
ßp
->
ß_d©a
;

57 
i
 = 0;

58 
‹ig
 = 
buÂ
;

59 (*
buÂ
 !'\0'Ë&& (
i
 < 
TR_ALEN
)) {

60 
vÆ
 = 0;

61 
c
 = *
buÂ
++;

62 i‡(
	`isdigô
(
c
))

63 
vÆ
 = 
c
 - '0';

64 i‡(
c
 >= 'a' && c <= 'f')

65 
vÆ
 = 
c
 - 'a' + 10;

66 i‡(
c
 >= 'A' && c <= 'F')

67 
vÆ
 = 
c
 - 'A' + 10;

69 #ifde‡
DEBUG


70 
	`Ârötf
(
°dîr
, 
	`_
("ö_å(%s): invÆidÅokíÑögáddªss!\n"), 
‹ig
);

72 
î∫o
 = 
EINVAL
;

75 
vÆ
 <<= 4;

76 
c
 = *
buÂ
++;

77 i‡(
	`isdigô
(
c
))

78 
vÆ
 |
c
 - '0';

79 i‡(
c
 >= 'a' && c <= 'f')

80 
vÆ
 |
c
 - 'a' + 10;

81 i‡(
c
 >= 'A' && c <= 'F')

82 
vÆ
 |
c
 - 'A' + 10;

84 #ifde‡
DEBUG


85 
	`Ârötf
(
°dîr
, 
	`_
("ö_å(%s): invÆidÅokíÑögáddªss!\n"), 
‹ig
);

87 
î∫o
 = 
EINVAL
;

90 *
±r
++ = (Ë(
vÆ
 & 0377);

91 
i
++;

94 i‡(*
buÂ
 == ':') {

95 i‡(
i
 =
TR_ALEN
) {

96 #ifde‡
DEBUG


97 
	`Ârötf
(
°dîr
, 
	`_
("in_tr(%s):Årailing : ignored!\n"),

98 
‹ig
)

102 
buÂ
++;

107 i‡((
i
 =
TR_ALEN
Ë&& (*
buÂ
 != '\0')) {

108 #ifde‡
DEBUG


109 
	`Ârötf
(
°dîr
, 
	`_
("ö_å(%s):Åøûög junk!\n"), 
‹ig
);

110 
î∫o
 = 
EINVAL
;

114 #ifde‡
DEBUG


115 
	`Ârötf
(
°dîr
, "ö_å(%s): %s\n", 
‹ig
, 
	`¥_å
(
ßp
->
ß_d©a
));

119 
	}
}

122 
hwty≥
 
	gå_hwty≥
 =

124 "å", 
NULL
 , 
ARPHRD_IEEE802
, 
TR_ALEN
,

125 
¥_å
, 
ö_å
, 
NULL


127 #ifde‡
ARPHRD_IEEE802_TR


128 
hwty≥
 
	gå_hwty≥1
 =

130 "å", 
NULL
 , 
ARPHRD_IEEE802_TR
, 
TR_ALEN
,

131 
¥_å
, 
ö_å
, 
NULL


	@net-tools-1.60/lib/tunnel.c

6 
	~"c⁄fig.h
"

8 #i‡
HAVE_HWTUNNEL


9 
	~<sys/ty≥s.h
>

10 
	~<sys/sockë.h
>

11 
	~<√t/if_¨p.h
>

12 
	~<löux/if_ëhî.h
>

13 
	~<°dlib.h
>

14 
	~<°dio.h
>

15 
	~<î∫o.h
>

16 
	~<˘y≥.h
>

17 
	~<°rög.h
>

18 
	~<uni°d.h
>

19 
	~"√t-suµ‹t.h
"

20 
	~"∑th«mes.h
"

22 
hwty≥
 
ëhî_hwty≥
;

24 *
	$¥_tu¬ñ
(*
±r
)

27 
	}
}

30 
	$ö_tu¬ñ
(*
buÂ
, 
sockaddr
 *
ßp
)

33 
	}
}

36 
hwty≥
 
	gtu¬ñ_hwty≥
 =

38 "tu¬ñ", 
NULL
, 
ARPHRD_TUNNEL
, 0,

39 
¥_tu¬ñ
, 
ö_tu¬ñ
, 
NULL
, 0

	@net-tools-1.60/lib/unix.c

15 
	~"c⁄fig.h
"

17 
	~<sys/ty≥s.h
>

18 
	~<sys/sockë.h
>

19 #i‡
HAVE_AFUNIX


20 
	~<sys/un.h
>

22 
	~<°dlib.h
>

23 
	~<°dio.h
>

24 
	~<î∫o.h
>

25 
	~<˘y≥.h
>

26 
	~<°rög.h
>

27 
	~<uni°d.h
>

28 
	~"√t-suµ‹t.h
"

29 
	~"∑th«mes.h
"

30 
	~"öé.h
"

31 
	~"utû.h
"

35 *
	$UNSPEC_¥öt
(*
±r
)

37 
buff
[64];

38 *
pos
;

39 
i
;

41 
pos
 = 
buff
;

42 
i
 = 0; i < (
sockaddr
); i++) {

43 
pos
 +
	`•rötf
’os, "%02X-", (*
±r
++ & 0377));

45 
buff
[
	`°æí
(buff) - 1] = '\0';

46  (
buff
);

47 
	}
}

51 *
	$UNSPEC_•röt
(
sockaddr
 *
ßp
, 
numîic
)

53 
buf
[64];

55 i‡(
ßp
->
ß_Ámûy
 == 0xFFFF || sap->sa_family == 0)

56  
	`ß„_°∫˝y
(
buf
, 
	`_
("[NONE SET]"), (buf));

57  (
	`UNSPEC_¥öt
(
ßp
->
ß_d©a
));

58 
	}
}

61 #i‡
HAVE_AFUNIX


64 *
	$UNIX_¥öt
(*
±r
)

66  (
±r
);

67 
	}
}

71 *
	$UNIX_•röt
(
sockaddr
 *
ßp
, 
numîic
)

73 
buf
[64];

75 i‡(
ßp
->
ß_Ámûy
 == 0xFFFF || sap->sa_family == 0)

76  
	`ß„_°∫˝y
(
buf
, 
	`_
("[NONE SET]"), (buf));

77  (
	`UNIX_¥öt
(
ßp
->
ß_d©a
));

78 
	}
}

81 
a·y≥
 
	gunix_a·y≥
 =

83 "unix", 
NULL
, 
AF_UNIX
, 0,

84 
UNIX_¥öt
, 
UNIX_•röt
, 
NULL
, NULL,

85 
NULL
, NULL, NULL,

92 
a·y≥
 
	gun•ec_a·y≥
 =

94 "un•ec", 
NULL
, 
AF_UNSPEC
, 0,

95 
UNSPEC_¥öt
, 
UNSPEC_•röt
, 
NULL
, NULL,

96 
NULL
,

	@net-tools-1.60/lib/util-ank.c

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

19 
	~<uni°d.h
>

20 
	~<sy¶og.h
>

21 
	~<f˙é.h
>

22 
	~<sys/sockë.h
>

23 
	~<√töë/ö.h
>

24 
	~<°rög.h
>

25 
	~<√tdb.h
>

26 
	~<¨∑/öë.h
>

27 
	~<ªsﬁv.h
>

29 
	~"öé.h
"

30 
	~"utû-™k.h
"

32 #i‚de‡
AF_INET6


33 
	#AF_INET6
 10

	)

36 
	$sˇn_numbî
(*
¨g
, *
vÆ
)

38 
ªs
;

39 *
±r
;

41 i‡(!
¨g
 || !*arg)

43 
ªs
 = 
	`°πoul
(
¨g
, &
±r
, 0);

44 i‡(!
±r
 ||Öå =
¨g
 || *±∏|| 
ªs
 > 
UINT_MAX
)

46 *
vÆ
 = 
ªs
;

48 
	}
}

50 
	$gë_öãgî
(*
vÆ
, *
¨g
, 
ba£
)

52 
ªs
;

53 *
±r
;

55 i‡(!
¨g
 || !*arg)

57 
ªs
 = 
	`°πﬁ
(
¨g
, &
±r
, 
ba£
);

58 i‡(!
±r
 ||Öå =
¨g
 || *±∏|| 
ªs
 > 
INT_MAX
 ||Ñe†< 
INT_MIN
)

60 *
vÆ
 = 
ªs
;

62 
	}
}

64 
	$gë_unsig√d
(*
vÆ
, *
¨g
, 
ba£
)

66 
ªs
;

67 *
±r
;

69 i‡(!
¨g
 || !*arg)

71 
ªs
 = 
	`°πoul
(
¨g
, &
±r
, 
ba£
);

72 i‡(!
±r
 ||Öå =
¨g
 || *±∏|| 
ªs
 > 
UINT_MAX
)

74 *
vÆ
 = 
ªs
;

76 
	}
}

78 
	$gë_u32
(
__u32
 *
vÆ
, *
¨g
, 
ba£
)

80 
ªs
;

81 *
±r
;

83 i‡(!
¨g
 || !*arg)

85 
ªs
 = 
	`°πoul
(
¨g
, &
±r
, 
ba£
);

86 i‡(!
±r
 ||Öå =
¨g
 || *±∏|| 
ªs
 > 0xFFFFFFFFUL)

88 *
vÆ
 = 
ªs
;

90 
	}
}

92 
	$gë_u16
(
__u16
 *
vÆ
, *
¨g
, 
ba£
)

94 
ªs
;

95 *
±r
;

97 i‡(!
¨g
 || !*arg)

99 
ªs
 = 
	`°πoul
(
¨g
, &
±r
, 
ba£
);

100 i‡(!
±r
 ||Öå =
¨g
 || *±∏|| 
ªs
 > 0xFFFF)

102 *
vÆ
 = 
ªs
;

104 
	}
}

106 
	$gë_u8
(
__u8
 *
vÆ
, *
¨g
, 
ba£
)

108 
ªs
;

109 *
±r
;

111 i‡(!
¨g
 || !*arg)

113 
ªs
 = 
	`°πoul
(
¨g
, &
±r
, 
ba£
);

114 i‡(!
±r
 ||Öå =
¨g
 || *±∏|| 
ªs
 > 0xFF)

116 *
vÆ
 = 
ªs
;

118 
	}
}

120 
	$gë_s16
(
__s16
 *
vÆ
, *
¨g
, 
ba£
)

122 
ªs
;

123 *
±r
;

125 i‡(!
¨g
 || !*arg)

127 
ªs
 = 
	`°πﬁ
(
¨g
, &
±r
, 
ba£
);

128 i‡(!
±r
 ||Öå =
¨g
 || *±∏|| 
ªs
 > 0x7FFF ||Ñes < -0x8000)

130 *
vÆ
 = 
ªs
;

132 
	}
}

134 
	$gë_s8
(
__s8
 *
vÆ
, *
¨g
, 
ba£
)

136 
ªs
;

137 *
±r
;

139 i‡(!
¨g
 || !*arg)

141 
ªs
 = 
	`°πﬁ
(
¨g
, &
±r
, 
ba£
);

142 i‡(!
±r
 ||Öå =
¨g
 || *±∏|| 
ªs
 > 0x7F ||Ñes < -0x80)

144 *
vÆ
 = 
ªs
;

146 
	}
}

148 
	$gë_addr_1
(
öë_¥efix
 *
addr
, *
«me
, 
Ámûy
)

150 *
˝
;

151 *
≠
 = (*)
addr
->
d©a
;

152 
i
;

154 
	`mem£t
(
addr
, 0, (*addr));

156 i‡(
	`°rcmp
(
«me
, "default") == 0 || strcmp(name, "any") == 0) {

157 
addr
->
Ámûy
 = family;

158 
addr
->
byãÀn
 = (
Ámûy
 =
AF_INET6
 ? 16 : 4);

159 
addr
->
bôÀn
 = -1;

163 i‡(
	`°rchr
(
«me
, ':')) {

164 
addr
->
Ámûy
 = 
AF_INET6
;

165 i‡(
Ámûy
 !
AF_UNSPEC
 && famûy !
AF_INET6
)

167 i‡(
	`öë_±⁄
(
AF_INET6
, 
«me
, 
addr
->
d©a
) <= 0)

169 
addr
->
byãÀn
 = 16;

170 
addr
->
bôÀn
 = -1;

174 
addr
->
Ámûy
 = 
AF_INET
;

175 i‡(
Ámûy
 !
AF_UNSPEC
 && famûy !
AF_INET
)

177 
addr
->
byãÀn
 = 4;

178 
addr
->
bôÀn
 = -1;

179 
˝
=
«me
, 
i
=0; *cp; cp++) {

180 i‡(*
˝
 <= '9' && *cp >= '0') {

181 
≠
[
i
] = 10*≠[i] + (*
˝
-'0');

184 i‡(*
˝
 ='.' && ++
i
 <= 3)

189 
	}
}

191 
	$gë_¥efix_1
(
öë_¥efix
 *
d°
, *
¨g
, 
Ámûy
)

193 
îr
;

194 
∂í
;

195 *
¶ash
;

197 
	`mem£t
(
d°
, 0, (*dst));

199 i‡(
	`°rcmp
(
¨g
, "default") == 0 || strcmp(arg, "any") == 0) {

200 
d°
->
Ámûy
 = family;

201 
d°
->
byãÀn
 = 0;

202 
d°
->
bôÀn
 = 0;

206 
¶ash
 = 
	`°rchr
(
¨g
, '/');

207 i‡(
¶ash
)

208 *
¶ash
 = 0;

209 
îr
 = 
	`gë_addr_1
(
d°
, 
¨g
, 
Ámûy
);

210 i‡(
îr
 == 0) {

211 
d°
->
bôÀn
 = (d°->
Ámûy
 =
AF_INET6
 ? 128 : 32);

212 i‡(
¶ash
) {

213 i‡(
	`sˇn_numbî
(
¶ash
+1, &
∂í
Ë||ÖÀ¿> 
d°
->
bôÀn
) {

214 
îr
 = -1;

215 
d⁄e
;

217 
d°
->
bôÀn
 = 
∂í
;

220 
d⁄e
:

221 i‡(
¶ash
)

222 *
¶ash
 = '/';

223  
îr
;

224 
	}
}

226 
	$gë_addr
(
öë_¥efix
 *
d°
, *
¨g
, 
Ámûy
)

228 i‡(
	`gë_addr_1
(
d°
, 
¨g
, 
Ámûy
)) {

229 
	`Ârötf
(
°dîr
, 
	`_
("ù: %†i†övÆid i√àaddªss\n"), 
¨g
);

230 
	`exô
(1);

233 
	}
}

235 
	$gë_¥efix
(
öë_¥efix
 *
d°
, *
¨g
, 
Ámûy
)

237 i‡(
	`gë_¥efix_1
(
d°
, 
¨g
, 
Ámûy
)) {

238 
	`Ârötf
(
°dîr
, 
	`_
("ù: %†i†övÆid i√à¥efix\n"), 
¨g
);

239 
	`exô
(1);

242 
	}
}

244 
__u32
 
	$gë_addr32
(*
«me
)

246 
öë_¥efix
 
addr
;

247 i‡(
	`gë_addr_1
(&
addr
, 
«me
, 
AF_INET
)) {

248 
	`Ârötf
(
°dîr
, 
	`_
("ù: %†i†övÆid IPv4áddªss\n"), 
«me
);

249 
	`exô
(1);

251  
addr
.
d©a
[0];

252 
	}
}

254 
	$öv¨g
(*
msg
)

256 
	`Ârötf
(
°dîr
, 
	`_
("ù:árgumíài†wr⁄g: %s\n"), 
msg
);

257 
	`exô
(1);

258 
	}
}

260 
	$m©ches
(*
cmd
, *
∑âîn
)

262 
Àn
 = 
	`°æí
(
cmd
);

263 i‡(
Àn
 > 
	`°æí
(
∑âîn
))

265  
	`memcmp
(
∑âîn
, 
cmd
, 
Àn
);

266 
	}
}

268 
	$öë_addr_m©ch
(
öë_¥efix
 *
a
, i√t_¥efix *
b
, 
bôs
)

270 
__u32
 *
a1
 = 
a
->
d©a
;

271 
__u32
 *
a2
 = 
b
->
d©a
;

272 
w‹ds
 = 
bôs
 >> 0x05;

274 
bôs
 &= 0x1f;

276 i‡(
w‹ds
)

277 i‡(
	`memcmp
(
a1
, 
a2
, 
w‹ds
 << 2))

280 i‡(
bôs
) {

281 
__u32
 
w1
, 
w2
;

282 
__u32
 
mask
;

284 
w1
 = 
a1
[
w‹ds
];

285 
w2
 = 
a2
[
w‹ds
];

287 
mask
 = 
	`ht⁄l
((0xffffffffË<< (0x20 - 
bôs
));

289 i‡((
w1
 ^ 
w2
Ë& 
mask
)

294 
	}
}

296 c⁄° *
	$f‹m©_ho°
(
af
, *
addr
, 
__u8
 *
abuf
, 
Æí
)

298 #ifde‡
RESOLVE_HOSTNAMES


299 i‡(
ªsﬁve_ho°s
) {

300 
addæí
 = 0;

301 
ho°ít
 *
h_ít
;

302 
af
) {

303 
AF_INET
:

304 
addæí
 = 4;

306 
AF_INET6
:

307 
addæí
 = 16;

310 i‡(
addæí
 &&

311 (
h_ít
 = 
	`gëho°byaddr
(
addr
, 
addæí
, 
af
)Ë!
NULL
) {

312 
	`¢¥ötf
(
abuf
, 
Æí
-1, "%s", 
h_ít
->
h_«me
);

313  
abuf
;

317  
	`öë_¡›
(
af
, 
addr
, 
abuf
, 
Æí
);

318 
	}
}

	@net-tools-1.60/lib/util.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

6 
	~<sys/ut¢ame.h
>

8 
	~"utû.h
"

11 
	$oom
()

13 
	`Ârötf
(
°dîr
, "out of virtual memory\n");

14 
	`exô
(2);

15 
	}
}

17 *
	$xmÆloc
(
size_t
 
sz
)

19 *
p
 = 
	`ˇŒoc
(
sz
, 1);

20 i‡(!
p
)

21 
	`oom
();

22  
p
;

23 
	}
}

25 *
	$xªÆloc
(*
ﬁdp
, 
size_t
 
sz
)

27 *
p
 = 
	`ªÆloc
(
ﬁdp
, 
sz
);

28 i‡(!
p
)

29 
	`oom
();

30  
p
;

31 
	}
}

33 
	$kî√l_vîsi⁄
()

35 
ut¢ame
 
uts
;

36 
maj‹
, 
mö‹
, 
∑tch
;

38 i‡(
	`u«me
(&
uts
) < 0)

40 i‡(
	`ssˇnf
(
uts
.
ªÀa£
, "%d.%d.%d", &
maj‹
, &
mö‹
, &
∑tch
) != 3)

42  
	`KRELEASE
(
maj‹
, 
mö‹
, 
∑tch
);

43 
	}
}

47 *
	$ß„_°∫˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
)

49 
d°
[
size
-1] = '\0';

50  
	`°∫˝y
(
d°
,
§c
,
size
-1);

51 
	}
}

	@net-tools-1.60/lib/util.h

1 
	~<°ddef.h
>

3 *
xmÆloc
(
size_t
 
sz
);

4 *
xªÆloc
(*
p
, 
size_t
 
sz
);

6 
	#√w
(
p
Ë(’Ë
	`xmÆloc
((*’))))

	)

9 
kî√l_vîsi⁄
();

10 
	#KRELEASE
(
maj
,
mö
,
∑tch
Ë((majË* 10000 + (mö)*1000 + (∑tch))

	)

13 
n°rcmp
(const *, const *);

15 *
ß„_°∫˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
);

	@net-tools-1.60/lib/x25.c

18 
	~"c⁄fig.h
"

20 #i‡
HAVE_AFX25
 || 
HAVE_HWX25


21 
	~<sys/ty≥s.h
>

22 
	~<sys/io˘l.h
>

23 
	~<sys/sockë.h
>

24 
	~<löux/x25.h
>

25 
	~<√t/if_¨p.h
>

26 
	~<°dlib.h
>

27 
	~<°dio.h
>

28 
	~<˘y≥.h
>

29 
	~<î∫o.h
>

30 
	~<f˙é.h
>

31 
	~<°rög.h
>

32 
	~<ãrmios.h
>

33 
	~<uni°d.h
>

34 
	~"√t-suµ‹t.h
"

35 
	~"∑th«mes.h
"

36 
	#EXTERN


	)

38 
	~"√t-loˇÀ.h
"

40 
	~"öé.h
"

42 
	gX25_îrmsg
[128];

45 
a·y≥
 
x25_a·y≥
;

48 #i‚de‡
X25_ADDR_LEN


49 
	#X25_ADDR_LEN
 16

	)

54 
	$X25_¥öt
(*
±r
)

56 
buff
[
X25_ADDR_LEN
+1];

58 
	`°∫˝y
(
buff
, 
±r
, 
X25_ADDR_LEN
);

59 
buff
[
X25_ADDR_LEN
] = '\0';

60 (
buff
);

62 
	}
}

67 
	$X25_•röt
(
sockaddr
 *
ßp
, 
numîic
)

69 i‡(
ßp
->
ß_Ámûy
 == 0xFFFF || sap->sa_family == 0)

70 –
	`_
("[NONE SET]"));

71 (
	`X25_¥öt
(((
sockaddr_x25
 *)
ßp
)->
sx25_addr
.
x25_addr
));

72 
	}
}

79 
	$X25_öput
(
ty≥
, *
buÂ
, 
sockaddr
 *
ßp
)

81 *
±r
;

82 *
p
;

83 
sigdigôs
;

85 
ßp
->
ß_Ámûy
 = 
x25_a·y≥
.
af
;

86 
±r
 = ((
sockaddr_x25
 *)
ßp
)->
sx25_addr
.
x25_addr
;

90 i‡(
	`°æí
(
buÂ
)>18) {

91 
	`°r˝y
(
X25_îrmsg
, 
	`_
("Address can'tÉxceedÉighteen digits with sigdigits"));

92 #ifde‡
DEBUG


93 
	`Ârötf
(
°dîr
, "x25_öput(%s): %†!\n", 
X25_îrmsg
, 
‹ig
);

95 
î∫o
 = 
EINVAL
;

100 i‡((
p
 = 
	`°rchr
(
buÂ
, '/')Ë!
NULL
) {

101 *
p
 = '\0';

102 
sigdigôs
 = 
	`©oi
(
p
 + 1);

104 
sigdigôs
 = 
	`°æí
(
buÂ
);

107 i‡(
	`°æí
(
buÂ
Ë< 1 || såÀn(buÂË> 15 || 
sigdigôs
 > strlen(bufp)) {

108 *
p
 = '/';

109 
	`°r˝y
(
X25_îrmsg
, 
	`_
("Invalidáddress"));

110 #ifde‡
DEBUG


111 
	`Ârötf
(
°dîr
, "x25_öput(%s): %†!\n", 
X25_îrmsg
, 
‹ig
);

113 
î∫o
 = 
EINVAL
;

117 
	`°∫˝y
(
±r
, 
buÂ
, 
sigdigôs
+1);

120 #ifde‡
DEBUG


121 
	`Ârötf
(
°dîr
, "x25_öput(%s): ", 
‹ig
);

122 
i
 = 0; i < (
x25_addªss
); i++)

123 
	`Ârötf
(
°dîr
, "%02X ", 
ßp
->
ß_d©a
[
i
] & 0377);

124 
	`Ârötf
(
°dîr
, "\n");

127  
sigdigôs
;

128 
	}
}

133 
	$X25_hîr‹
(*
ãxt
)

135 i‡(
ãxt
 =
NULL
Ë
	`Ârötf
(
°dîr
, "%s\n", 
X25_îrmsg
);

136 
	`Ârötf
(
°dîr
, "%s: %s\n", 
ãxt
, 
X25_îrmsg
);

137 
	}
}

141 
	$X25_höput
(*
buÂ
, 
sockaddr
 *
ßp
)

143 i‡(
	`X25_öput
(0, 
buÂ
, 
ßp
) < 0) (-1);

144 
ßp
->
ß_Ámûy
 = 
ARPHRD_X25
;

146 
	}
}

149 
hwty≥
 
	gx25_hwty≥
 = {

150 "x25", 
NULL
, 
ARPHRD_X25
, 
X25_ADDR_LEN
,

151 
X25_¥öt
, 
X25_höput
, 
NULL


154 
a·y≥
 
	gx25_a·y≥
 =

156 "x25", 
NULL
, 
AF_X25
, 
X25_ADDR_LEN
,

157 
X25_¥öt
, 
X25_•röt
, 
X25_öput
, 
X25_hîr‹
,

158 
X25_Ωröt
, 
X25_röput
, 
NULL
 ,

	@net-tools-1.60/lib/x25_gr.c

19 
	~"c⁄fig.h
"

21 #i‡
HAVE_AFX25


23 
	~<sys/ty≥s.h
>

24 
	~<sys/io˘l.h
>

25 
	~<sys/sockë.h
>

26 
	~<löux/x25.h
>

27 
	~<löux/if_¨p.h
>

28 
	~<˘y≥.h
>

29 
	~<î∫o.h
>

30 
	~<f˙é.h
>

31 
	~<°rög.h
>

32 
	~<ãrmios.h
>

34 
	~<°dlib.h
>

35 
	~<°dio.h
>

36 
	~<uni°d.h
>

37 
	~<°rög.h
>

38 
	~"√t-suµ‹t.h
"

39 
	~"∑th«mes.h
"

40 
	#EXTERN


	)

42 
	~"√t-loˇÀ.h
"

44 
	~"öé.h
"

47 #i‚de‡
X25_ADDR_LEN


48 
	#X25_ADDR_LEN
 16

	)

51 
	$X25_Ωröt
(
›ti⁄s
)

53 
FILE
 *
f
=
	`f›í
(
_PATH_PROCNET_X25_ROUTE
, "r");

54 
buf„r
[256];

55 *
p
;

56 
digôs
;

58 if(
f
==
NULL
)

60 
	`¥ötf
–
	`_
("X.25Çot configured inÅhis system.\n"));

63 
	`¥ötf
–
	`_
("Kernel X.25ÑoutingÅable\n"));

64 
	`¥ötf
–
	`_
("Destination Iface\n"));

65 
	`fgës
(
buf„r
,256,
f
);

66 
	`fgës
(
buf„r
,256,
f
))

68 
p
 = 
	`°rchr
(
buf„r
,'\n');

69 i‡(
p
)

70 *
p
=0;

72 
buf„r
[24]=0;

73 
buf„r
[35]=0;

74 
digôs
=
	`©oi
(
buf„r
+17);

75 i‡(
digôs
 < 0 || digits > 15)

76 
digôs
=15;

77 
buf„r
[
digôs
]=0;

78 i‡(
digôs
 == 0)

79 
	`¥ötf
("* %-5s\n", 
buf„r
+25);

81 
	`¥ötf
("%s/%*d %-5s\n",

82 
buf„r
,
digôs
-17,digits,buffer+25);

84 
	`f˛o£
(
f
);

86 
	}
}

	@net-tools-1.60/lib/x25_sr.c

16 
	~"c⁄fig.h
"

18 #i‡
HAVE_AFX25


19 
	~<asm/ty≥s.h
>

20 
	~<sys/∑øm.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<sys/sockë.h
>

23 
	~<sys/io˘l.h
>

24 
	~<löux/x25.h
>

25 
	~<˘y≥.h
>

26 
	~<î∫o.h
>

27 
	~<√tdb.h
>

28 
	~<ªsﬁv.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~<°dio.h
>

32 
	~<uni°d.h
>

33 
	~"vîsi⁄.h
"

34 
	~"√t-suµ‹t.h
"

35 
	~"∑th«mes.h
"

36 
	#EXTERN


	)

38 
	~"√t-loˇÀ.h
"

40 
	~"öé.h
"

42 
	~"√t-„©uªs.h
"

44 
a·y≥
 
x25_a·y≥
;

46 
	gskfd
 = -1;

49 
	$ußge
()

51 
	`Ârötf
(
°dîr
,"Usage: x25_route [-v] del Target[/mask] [dev] If\n");

52 
	`Ârötf
(
°dîr
," x25_route [-v]ádd Target[/mask] [dev] If\n");

53 (
E_USAGE
);

54 
	}
}

57 
	$X25_£åouã
(
a˘i⁄
, 
›ti⁄s
, **
¨gs
)

59 
x25_rouã_°ru˘
 
π
;

60 
sockaddr_x25
 
sx25
;

61 
èrgë
[128];

62 sig√d 
sigdigôs
;

64 i‡(*
¨gs
 =
NULL
)

65 (
	`ußge
());

67 
	`°r˝y
(
èrgë
, *
¨gs
++);

70 
	`mem£t
((*Ë&
π
, 0, (
x25_rouã_°ru˘
));

73 i‡((
sigdigôs
 = 
x25_a·y≥
.
	`öput
(0, 
èrgë
, (
sockaddr
 *)&
sx25
)) < 0) {

74 
x25_a·y≥
.
	`hîr‹
(
èrgë
);

77 
π
.
sigdigôs
=sigdigits;

80 
	`mem˝y
(&
π
.
addªss
, &
sx25
.
sx25_addr
, (
x25_addªss
));

82 *
¨gs
) {

83 i‡(!
	`°rcmp
(*
¨gs
,"device") || !strcmp(*args,"dev")) {

84 
¨gs
++;

85 i‡(!*
¨gs
)

86 (
	`ußge
());

88 i‡(
¨gs
[1])

89 (
	`ußge
());

90 i‡(
π
.
devi˚
[0])

91 (
	`ußge
());

92 
	`°r˝y
(
π
.
devi˚
, *
¨gs
);

93 
¨gs
++;

95 i‡(
π
.
devi˚
[0]=='\0')

96 (
	`ußge
());

99 i‡(
π
.
sigdigôs
 > 15) {

100 
	`Ârötf
(
°dîr
, 
	`_
("rouã: bogu†√tmask %d\n"), 
π
.
sigdigôs
);

101 (
E_OPTERR
);

104 i‡(
π
.
sigdigôs
 > 
	`°æí
‘t.
addªss
.
x25_addr
)) {

105 
	`Ârötf
(
°dîr
, 
	`_
("route:Çetmask doesn't matchÑouteáddress\n"));

106 (
E_OPTERR
);

110 i‡((
skfd
 = 
	`sockë
(
AF_X25
, 
SOCK_SEQPACKET
, 0)) < 0) {

111 
	`≥º‹
("socket");

112 (
E_SOCK
);

116 i‡(
a˘i⁄
==
RTACTION_DEL
) {

117 i‡(
	`io˘l
(
skfd
, 
SIOCDELRT
, &
π
) < 0) {

118 
	`≥º‹
("SIOCDELRT");

119 
	`˛o£
(
skfd
);

120 (
E_SOCK
);

123 i‡(
	`io˘l
(
skfd
, 
SIOCADDRT
, &
π
) < 0) {

124 
	`≥º‹
("SIOCADDRT");

125 
	`˛o£
(
skfd
);

126 (
E_SOCK
);

131 (Ë
	`˛o£
(
skfd
);

133 
	}
}

135 
	$X25_röput
(
a˘i⁄
, 
›ti⁄s
, **
¨gs
)

137 i‡(
a˘i⁄
 =
RTACTION_FLUSH
) {

138 
	`Ârötf
(
°dîr
,"Flushing `x25'ÑoutingÅableÇot supported\n");

139 (
	`ußge
());

141 i‡(
›ti⁄s
 & 
FLAG_CACHE
) {

142 
	`Ârötf
(
°dîr
,"Modifying `x25'Ñouting cacheÇot supported\n");

143 (
	`ußge
());

145 i‡((*
¨gs
 =
NULL
Ë|| (
a˘i⁄
 =
RTACTION_HELP
))

146 (
	`ußge
());

148 (
	`X25_£åouã
(
a˘i⁄
, 
›ti⁄s
, 
¨gs
));

149 
	}
}

	@net-tools-1.60/mii-tool.c

32 
	gvîsi⁄
[] =

35 
	~<uni°d.h
>

36 
	~<°dlib.h
>

37 
	~<°dio.h
>

38 
	~<˘y≥.h
>

39 
	~<°rög.h
>

40 
	~<î∫o.h
>

41 
	~<f˙é.h
>

42 
	~<gë›t.h
>

43 
	~<time.h
>

44 
	~<sy¶og.h
>

45 
	~<sys/ty≥s.h
>

46 
	~<sys/sockë.h
>

47 
	~<sys/io˘l.h
>

48 
	~<√t/if.h
>

49 #i‚de‡
__GLIBC__


50 
	~<löux/if_¨p.h
>

51 
	~<löux/if_ëhî.h
>

53 
	~"mii.h
"

55 
	#MAX_ETH
 8

	)

59 
u_sh‹t
 
	mid1
, 
	mid2
;

60 *
	m«me
;

61 } 
	gmii_id
[] = {

78 
	#NMII
 ((
mii_id
)/(mii_id[0]))

	)

82 
›ti⁄
 
	gl⁄g›ts
[] = {

98 
	gvîbo£
 = 0,

99 
	g›t_vîsi⁄
 = 0,

100 
	g›t_ª°¨t
 = 0,

101 
	g›t_ª£t
 = 0,

102 
	g›t_log
 = 0,

103 
	g›t_w©ch
 = 0;

104 
	gnway_advîti£
 = 0;

105 
	gfixed_•ìd
 = 0;

106 
	govîride_phy
 = -1;

108 
	gskfd
 = -1;

109 
i‰eq
 
	gi‰
;

113 
	$mdio_ªad
(
skfd
, 
loˇti⁄
)

115 
mii_d©a
 *
mii
 = (mii_d©®*)&
i‰
.
i‰_d©a
;

116 
mii
->
ªg_num
 = 
loˇti⁄
;

117 i‡(
	`io˘l
(
skfd
, 
SIOCGMIIREG
, &
i‰
) < 0) {

118 
	`Ârötf
(
°dîr
, "SIOCGMIIREG o¿%†Áûed: %s\n", 
i‰
.
i‰_«me
,

119 
	`°ªº‹
(
î∫o
));

122  
mii
->
vÆ_out
;

123 
	}
}

125 
	$mdio_wrôe
(
skfd
, 
loˇti⁄
, 
vÆue
)

127 
mii_d©a
 *
mii
 = (mii_d©®*)&
i‰
.
i‰_d©a
;

128 
mii
->
ªg_num
 = 
loˇti⁄
;

129 
mii
->
vÆ_ö
 = 
vÆue
;

130 i‡(
	`io˘l
(
skfd
, 
SIOCSMIIREG
, &
i‰
) < 0) {

131 
	`Ârötf
(
°dîr
, "SIOCSMIIREG o¿%†Áûed: %s\n", 
i‰
.
i‰_«me
,

132 
	`°ªº‹
(
î∫o
));

134 
	}
}

139 *
	m«me
;

140 
u_sh‹t
 
	mvÆue
;

141 } 
	gmedü
[] = {

143 { "10ba£T-HD", 
MII_AN_10BASET_HD
 },

144 { "10ba£T-FD", 
MII_AN_10BASET_FD
 },

145 { "100ba£Tx-HD", 
MII_AN_100BASETX_HD
 },

146 { "100ba£Tx-FD", 
MII_AN_100BASETX_FD
 },

147 { "100ba£T4", 
MII_AN_100BASET4
 },

148 { "100ba£Tx", 
MII_AN_100BASETX_FD
 | 
MII_AN_100BASETX_HD
 },

149 { "10ba£T", 
MII_AN_10BASET_FD
 | 
MII_AN_10BASET_HD
 },

151 
	#NMEDIA
 ((
medü
)/(medü[0]))

	)

154 
	$∑r£_medü
(*
¨g
)

156 
mask
, 
i
;

157 *
s
;

158 
mask
 = 
	`°πoul
(
¨g
, &
s
, 16);

159 i‡((*
¨g
 !'\0'Ë&& (*
s
 == '\0')) {

160 i‡((
mask
 & 
MII_AN_ABILITY_MASK
) &&

161 !(
mask
 & ~
MII_AN_ABILITY_MASK
))

162  
mask
;

163 
Áûed
;

165 
mask
 = 0;

166 
s
 = 
	`°πok
(
¨g
, ", ");

168 
i
 = 0; i < 
NMEDIA
; i++)

169 i‡(
	`°rˇ£cmp
(
medü
[
i
].
«me
, 
s
) == 0) ;

170 i‡(
i
 =
NMEDIA
Ë
Áûed
;

171 
mask
 |
medü
[
i
].
vÆue
;

172 } (
s
 = 
	`°πok
(
NULL
, ", ")) != NULL);

174  
mask
;

175 
Áûed
:

176 
	`Ârötf
(
°dîr
, "InvÆid medü s≥cifiˇti⁄ '%s'.\n", 
¨g
);

178 
	}
}

182 *
	$medü_li°
(
mask
, 
be°
)

184 
buf
[100];

185 
i
;

186 *
buf
 = '\0';

187 
mask
 >>= 5;

188 
i
 = 4; i >= 0; i--) {

189 i‡(
mask
 & (1<<
i
)) {

190 
	`°rˇt
(
buf
, " ");

191 
	`°rˇt
(
buf
, 
medü
[
i
].
«me
);

192 i‡(
be°
) ;

195 i‡(
mask
 & (1<<5))

196 
	`°rˇt
(
buf
, " flow-control");

197  
buf
;

198 
	}
}

200 
	$show_basic_mii
(
sock
, 
phy_id
)

202 
buf
[100];

203 
i
, 
mii_vÆ
[32];

204 
bm¸
, 
bm§
, 
advît
, 
lk∑r
;

208 
	`mdio_ªad
(
sock
, 
MII_BMSR
);

209 
i
 = 0; i < ((
vîbo£
 > 1) ? 32 : 8); i++)

210 
mii_vÆ
[
i
] = 
	`mdio_ªad
(
sock
, i);

212 i‡(
mii_vÆ
[
MII_BMCR
] == 0xffff) {

213 
	`Ârötf
(
°dîr
, " No MIIÅransceiverÖresent!.\n");

218 
bm¸
 = 
mii_vÆ
[
MII_BMCR
]; 
bm§
 = mii_vÆ[
MII_BMSR
];

219 
advît
 = 
mii_vÆ
[
MII_ANAR
]; 
lk∑r
 = mii_vÆ[
MII_ANLPAR
];

221 
	`•rötf
(
buf
, "%s: ", 
i‰
.
i‰_«me
);

222 i‡(
bm¸
 & 
MII_BMCR_AN_ENA
) {

223 i‡(
bm§
 & 
MII_BMSR_AN_COMPLETE
) {

224 i‡(
advît
 & 
lk∑r
) {

225 
	`°rˇt
(
buf
, (
lk∑r
 & 
MII_AN_ACK
) ?

227 
	`°rˇt
(
buf
, 
	`medü_li°
(
advît
 & 
lk∑r
, 1));

228 
	`°rˇt
(
buf
, ", ");

230 
	`°rˇt
(
buf
, "autonegotiation failed, ");

232 } i‡(
bm¸
 & 
MII_BMCR_RESTART
) {

233 
	`°rˇt
(
buf
, "autonegotiationÑestarted, ");

236 
	`•rötf
(
buf
+
	`°æí
(buf), "%s Mbit, %s duplex, ",

237 (
bm¸
 & 
MII_BMCR_100MBIT
) ? "100" : "10",

238 (
bm¸
 & 
MII_BMCR_DUPLEX
) ? "full" : "half");

240 
	`°rˇt
(
buf
, (
bm§
 & 
MII_BMSR_LINK_VALID
) ? "link ok" : "noÜink");

242 i‡(
›t_w©ch
) {

243 i‡(
›t_log
) {

244 
	`sy¶og
(
LOG_INFO
, 
buf
);

246 
s
[20];

247 
time_t
 
t
 = 
	`time
(
NULL
);

248 
	`°r·ime
(
s
, (s), "%T", 
	`loˇ…ime
(&
t
));

249 
	`¥ötf
("%†%s\n", 
s
, 
buf
);

252 
	`¥ötf
("%s\n", 
buf
);

255 i‡(
vîbo£
 > 1) {

256 
	`¥ötf
("Ñegi°î†f‹ MII PHY %d: ", 
phy_id
);

257 
i
 = 0; i < 32; i++)

258 
	`¥ötf
("%†%4.4x", ((
i
 % 8Ë? "" : "\¿ "), 
mii_vÆ
[i]);

259 
	`¥ötf
("\n");

262 i‡(
vîbo£
) {

263 
	`¥ötf
("Öroduct info: ");

264 
i
 = 0; i < 
NMII
; i++)

265 i‡((
mii_id
[
i
].
id1
 =
mii_vÆ
[2]) &&

266 (
mii_id
[
i
].
id2
 =(
mii_vÆ
[3] & 0xfff0)))

268 i‡(
i
 < 
NMII
)

269 
	`¥ötf
("%†ªv %d\n", 
mii_id
[
i
].
«me
, 
mii_vÆ
[3]&0x0f);

271 
	`¥ötf
("vendor %02x:%02x:%02x, model %dÑev %d\n",

272 
mii_vÆ
[2]>>10, (mii_val[2]>>2)&0xff,

273 ((
mii_vÆ
[2]<<6)|(mii_val[3]>>10))&0xff,

274 (
mii_vÆ
[3]>>4)&0x3f, mii_val[3]&0x0f);

275 
	`¥ötf
(" basic mode: ");

276 i‡(
bm¸
 & 
MII_BMCR_RESET
)

277 
	`¥ötf
("softwareÑeset, ");

278 i‡(
bm¸
 & 
MII_BMCR_LOOPBACK
)

279 
	`¥ötf
("loopback, ");

280 i‡(
bm¸
 & 
MII_BMCR_ISOLATE
)

281 
	`¥ötf
("isolate, ");

282 i‡(
bm¸
 & 
MII_BMCR_COLTEST
)

283 
	`¥ötf
("collisionÅest, ");

284 i‡(
bm¸
 & 
MII_BMCR_AN_ENA
) {

285 
	`¥ötf
("autonegotiationÉnabled\n");

287 
	`¥ötf
("%s Mbit, %s duplex\n",

288 (
bm¸
 & 
MII_BMCR_100MBIT
) ? "100" : "10",

289 (
bm¸
 & 
MII_BMCR_DUPLEX
) ? "full" : "half");

291 
	`¥ötf
(" basic status: ");

292 i‡(
bm§
 & 
MII_BMSR_AN_COMPLETE
)

293 
	`¥ötf
("autonegotiation complete, ");

294 i‡(
bm¸
 & 
MII_BMCR_RESTART
)

295 
	`¥ötf
("autonegotiationÑestarted, ");

296 i‡(
bm§
 & 
MII_BMSR_REMOTE_FAULT
)

297 
	`¥ötf
("remote fault, ");

298 
	`¥ötf
((
bm§
 & 
MII_BMSR_LINK_VALID
) ? "link ok" : "noÜink");

299 
	`¥ötf
("\¿ c≠abûôõs:%s", 
	`medü_li°
(
bm§
 >> 6, 0));

300 
	`¥ötf
("\¿ádvîtisög: %s", 
	`medü_li°
(
advît
, 0));

301 i‡(
lk∑r
 & 
MII_AN_ABILITY_MASK
)

302 
	`¥ötf
("\¿ÜökÖ¨äî:%s", 
	`medü_li°
(
lk∑r
, 0));

303 
	`¥ötf
("\n");

306 
	}
}

310 
	$do_⁄e_xcvr
(
skfd
, *
i‚ame
, 
maybe
)

312 
mii_d©a
 *
mii
 = (mii_d©®*)&
i‰
.
i‰_d©a
;

315 
	`°∫˝y
(
i‰
.
i‰_«me
, 
i‚ame
, 
IFNAMSIZ
);

316 i‡(
	`io˘l
(
skfd
, 
SIOCGMIIPHY
, &
i‰
) < 0) {

317 i‡(!
maybe
 || (
î∫o
 !
ENODEV
))

318 
	`Ârötf
(
°dîr
, "SIOCGMIIPHY on '%s' failed: %s\n",

319 
i‚ame
, 
	`°ªº‹
(
î∫o
));

323 i‡(
ovîride_phy
 >= 0) {

324 
	`¥ötf
("usögÅhê•ecifõd MII index %d.\n", 
ovîride_phy
);

325 
mii
->
phy_id
 = 
ovîride_phy
;

328 i‡(
›t_ª£t
) {

329 
	`¥ötf
("resettingÅheÅransceiver...\n");

330 
	`mdio_wrôe
(
skfd
, 
MII_BMCR
, 
MII_BMCR_RESET
);

332 i‡(
nway_advîti£
) {

333 
	`mdio_wrôe
(
skfd
, 
MII_ANAR
, 
nway_advîti£
 | 1);

334 
›t_ª°¨t
 = 1;

336 i‡(
›t_ª°¨t
) {

337 
	`¥ötf
("restartingáutonegotiation...\n");

338 
	`mdio_wrôe
(
skfd
, 
MII_BMCR
, 0x0000);

339 
	`mdio_wrôe
(
skfd
, 
MII_BMCR
, 
MII_BMCR_AN_ENA
|
MII_BMCR_RESTART
);

341 i‡(
fixed_•ìd
) {

342 
bm¸
 = 0;

343 i‡(
fixed_•ìd
 & (
MII_AN_100BASETX_FD
|
MII_AN_100BASETX_HD
))

344 
bm¸
 |
MII_BMCR_100MBIT
;

345 i‡(
fixed_•ìd
 & (
MII_AN_100BASETX_FD
|
MII_AN_10BASET_FD
))

346 
bm¸
 |
MII_BMCR_DUPLEX
;

347 
	`mdio_wrôe
(
skfd
, 
MII_BMCR
, 
bm¸
);

350 i‡(!
›t_ª°¨t
 && !
›t_ª£t
 && !
fixed_•ìd
 && !
nway_advîti£
)

351 
	`show_basic_mii
(
skfd
, 
mii
->
phy_id
);

354 
	}
}

358 
	$w©ch_⁄e_xcvr
(
skfd
, *
i‚ame
, 
ödex
)

360 
mii_d©a
 *
mii
 = (mii_d©®*)&
i‰
.
i‰_d©a
;

361 
°©us
[
MAX_ETH
] = { 0, };

362 
now
;

365 
	`°∫˝y
(
i‰
.
i‰_«me
, 
i‚ame
, 
IFNAMSIZ
);

366 i‡(
	`io˘l
(
skfd
, 
SIOCGMIIPHY
, &
i‰
) < 0) {

367 i‡(
î∫o
 !
ENODEV
)

368 
	`Ârötf
(
°dîr
, "SIOCGMIIPHY on '%s' failed: %s\n",

369 
i‚ame
, 
	`°ªº‹
(
î∫o
));

372 
now
 = (
	`mdio_ªad
(
skfd
, 
MII_BMCR
) |

373 (
	`mdio_ªad
(
skfd
, 
MII_BMSR
) << 16));

374 i‡(
°©us
[
ödex
] && (°©us[ödex] !
now
))

375 
	`show_basic_mii
(
skfd
, 
mii
->
phy_id
);

376 
°©us
[
ödex
] = 
now
;

377 
	}
}

381 c⁄° *
	gußge
 =

383 -
V
, --
vîsi⁄
 
di•œy
 vîsi⁄ 
	göf‹m©i⁄


384 -
	gv
, --
vîbo£
 
m‹e
 vîbo£ 
	gouçut


385 -
	gR
, --
ª£t
Ñe£à
MII
 
to
 
powî⁄
 
	g°©e


386 -
	gr
, --
ª°¨t
Ñe°¨à
	gaut⁄egŸüti⁄


387 -
	gw
, --
w©ch
 
m⁄ô‹
 
lök
 
°©us
 
	gch™ges


388 -
	gl
, --
log
 
	gwôh
 -
	gw
, 
wrôe
 
evíts
 
to
 
	gsy¶og


389 -
	gA
, --
	gadvîti£
=
medü
,... 
advîti£
 
⁄ly
 
•ecifõd
 
	gmedü


390 -
	gF
, --
	gf‹˚
=
medü
 
f‹˚
 
•ecifõd
 medü 
ãchnﬁogy


391 
medü
: 100ba
£T4
, 100ba
	g£Tx
-
	gFD
, 100ba£Tx-
	gHD
, 10ba
	g£T
-FD, 10baseT-HD,

392 (
to
 
advîti£
 
bŸh
 
HD
 
™d
 
	gFD
Ë100ba
	g£Tx
, 10ba
	g£T
\
	gn
";

394 
	$maö
(
¨gc
, **
¨gv
)

396 
i
, 
c
, 
ªt
, 
îrÊag
 = 0;

397 
s
[6];

399 (
c
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "A:F:p:ÃRvVw?", 
l⁄g›ts
, 0)Ë!
EOF
)

400 
c
) {

401 'A': 
nway_advîti£
 = 
	`∑r£_medü
(
›èrg
); ;

402 'F': 
fixed_•ìd
 = 
	`∑r£_medü
(
›èrg
); ;

403 'p': 
ovîride_phy
 = 
	`©oi
(
›èrg
); ;

404 'r': 
›t_ª°¨t
++; ;

405 'R': 
›t_ª£t
++; ;

406 'v': 
vîbo£
++; ;

407 'V': 
›t_vîsi⁄
++; ;

408 'w': 
›t_w©ch
++; ;

409 'l': 
›t_log
++; ;

410 '?': 
îrÊag
++;

413 i‡(
›t_w©ch
Ë
vîbo£
 = 0;

414 i‡(
îrÊag
 || (
fixed_•ìd
 & (fixed_speed-1)) ||

415 (
fixed_•ìd
 && (
›t_ª°¨t
 || 
nway_advîti£
))) {

416 
	`Ârötf
(
°dîr
, 
ußge
, 
¨gv
[0]);

420 i‡(
›t_vîsi⁄
)

421 
	`¥ötf
(
vîsi⁄
);

424 i‡((
skfd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
,0)) < 0) {

425 
	`≥º‹
("socket");

426 
	`exô
(-1);

430 i‡(
›töd
 =
¨gc
) {

431 
ªt
 = 1;

432 
i
 = 0; i < 
MAX_ETH
; i++) {

433 
	`•rötf
(
s
, "ëh%d", 
i
);

434 
ªt
 &
	`do_⁄e_xcvr
(
skfd
, 
s
, 1);

436 i‡(
ªt
)

437 
	`Ârötf
(
°dîr
, "no MII interfaces found\n");

439 
ªt
 = 0;

440 
i
 = 
›töd
; i < 
¨gc
; i++) {

441 
ªt
 |
	`do_⁄e_xcvr
(
skfd
, 
¨gv
[
i
], 0);

445 i‡(
›t_w©ch
 && (
ªt
 == 0)) {

447 
	`¶ìp
(1);

448 i‡(
›töd
 =
¨gc
) {

449 
i
 = 0; i < 
MAX_ETH
; i++) {

450 
	`•rötf
(
s
, "ëh%d", 
i
);

451 
	`w©ch_⁄e_xcvr
(
skfd
, 
s
, 
i
);

454 
i
 = 
›töd
; i < 
¨gc
; i++)

455 
	`w©ch_⁄e_xcvr
(
skfd
, 
¨gv
[
i
], i-
›töd
);

460 
	`˛o£
(
skfd
);

461  
ªt
;

462 
	}
}

	@net-tools-1.60/nameif.c

8 #i‚de‡
_GNU_SOURCE


9 
	#_GNU_SOURCE


	)

11 
	~<°dio.h
>

12 
	~<gë›t.h
>

13 
	~<sys/sy¶og.h
>

14 
	~<î∫o.h
>

15 
	~<°dlib.h
>

16 
	~<˘y≥.h
>

17 
	~<°rög.h
>

18 
	~<°d¨g.h
>

19 
	~<sys/sockë.h
>

20 
	~<sys/io˘l.h
>

21 
	~<√t/if.h
>

22 
	~<löux/sockios.h
>

23 
	~<î∫o.h
>

24 
	~"öé.h
"

26 c⁄° 
	gdeÁu…_c⁄f
[] = "/etc/mactab";

27 c⁄° *
	g‚ame
 = 
deÁu…_c⁄f
;

28 
	gu£_sy¶og
;

29 
	g˘l_sk
 = -1;

31 
	$îr
(*
msg
)

33 i‡(
u£_sy¶og
) {

34 
	`sy¶og
(
LOG_ERR
,"%s: %m", 
msg
);

36 
	`≥º‹
(
msg
);

38 
	`exô
(1);

39 
	}
}

41 
	$com∂aö
(*
fmt
, ...)

43 
va_li°
 
≠
;

44 
	`va_°¨t
(
≠
,
fmt
);

45 i‡(
u£_sy¶og
) {

46 
	`vsy¶og
(
LOG_ERR
,
fmt
,
≠
);

48 
	`vÂrötf
(
°dîr
,
fmt
,
≠
);

49 
	`Âutc
('\n',
°dîr
);

51 
	`va_íd
(
≠
);

52 
	`exô
(1);

53 
	}
}

55 
	$w¨nög
(*
fmt
, ...)

57 
va_li°
 
≠
;

58 
	`va_°¨t
(
≠
,
fmt
);

59 i‡(
u£_sy¶og
) {

60 
	`vsy¶og
(
LOG_ERR
,
fmt
,
≠
);

62 
	`vÂrötf
(
°dîr
,
fmt
,
≠
);

63 
	`Âutc
('\n',
°dîr
);

65 
	`va_íd
(
≠
);

66 
	}
}

68 
	$∑r£mac
(*
°r
, *
mac
)

70 *
s
;

71 (
s
 = 
	`°r£p
(&
°r
, ":")Ë!
NULL
) {

72 
byã
;

73 i‡(
	`ssˇnf
(
s
,"%x", &
byã
)!=1 || byte > 0xff)

75 *
mac
++ = 
byã
;

78 
	}
}

80 *
	$xmÆloc
(
sz
)

82 *
p
 = 
	`ˇŒoc
(
sz
,1);

83 i‡(!
p
Ë
î∫o
=
ENOMEM
, 
	`îr
("xmalloc");

84  
p
;

85 
	}
}

87 
	$›ísock
()

89 i‡(
˘l_sk
 < 0)

90 
˘l_sk
 = 
	`sockë
(
PF_INET
,
SOCK_DGRAM
,0);

91 
	}
}

93 #i‚de‡
i‰_√w«me


94 
	#i‰_√w«me
 
i‰_i‰u
.
i‰u_¶ave


	)

97 
	$£äame
(*
ﬁd«me
, *
√w«me
)

99 
i‰eq
 
i‰
;

100 
	`›ísock
();

101 
	`mem£t
(&
i‰
,0,(
i‰eq
));

102 
	`°r˝y
(
i‰
.
i‰_«me
, 
ﬁd«me
);

103 
	`°r˝y
(
i‰
.
i‰_√w«me
, 
√w«me
);

104  
	`io˘l
(
˘l_sk
, 
SIOCSIFNAME
, &
i‰
);

105 
	}
}

107 
	$gëmac
(*
«me
, *
mac
)

109 
r
;

110 
i‰eq
 
i‰
;

111 
	`›ísock
();

112 
	`mem£t
(&
i‰
,0,(
i‰eq
));

113 
	`°r˝y
(
i‰
.
i‰_«me
, 
«me
);

114 
r
 = 
	`io˘l
(
˘l_sk
, 
SIOCGIFHWADDR
, &
i‰
);

115 
	`mem˝y
(
mac
, 
i‰
.
i‰_hwaddr
.
ß_d©a
, 6);

116  
r
;

117 
	}
}

119 
	sch™ge
 {

120 
ch™ge
 *
	m√xt
,**
	mµªv
;

121 
	mi‚ame
[
IFNAMSIZ
+1];

122 
	mmac
[6];

124 
ch™ge
 *
	g˛i°
;

126 
ch™ge
 *
	$lookupmac
(*
mac
)

128 
ch™ge
 *
ch
;

129 
ch
 = 
˛i°
;ch;ch = ch->
√xt
)

130 i‡(!
	`memcmp
(
ch
->
mac
, mac, 6))

131  
ch
;

132  
NULL
;

133 
	}
}

135 
	$addch™ge
(*
p
, 
ch™ge
 *
ch
, *
pos
)

137 i‡(
	`°rchr
(
ch
->
i‚ame
, ':'))

138 
	`w¨nög
(
	`_
("alias device %sát %sÖrobably hasÇo mac"),

139 
ch
->
i‚ame
, 
pos
);

140 i‡(
	`∑r£mac
(
p
,
ch
->
mac
) < 0)

141 
	`com∂aö
(
	`_
("ˇ¬ŸÖ¨£ MAC `%s'áà%s"), 
p
, 
pos
);

142 i‡(
˛i°
)

143 
˛i°
->
µªv
 = &
ch
->
√xt
;

144 
ch
->
√xt
 = 
˛i°
;

145 
ch
->
µªv
 = &
˛i°
;

146 
˛i°
 = 
ch
;

148 
	}
}

150 
	$ªadc⁄f
()

152 *
löe
;

153 
size_t
 
löñ
;

154 
löíum
;

155 
FILE
 *
ifh
;

156 *
p
;

157 
n
;

159 
ifh
 = 
	`f›í
(
‚ame
, "r");

160 i‡(!
ifh
)

161 
	`com∂aö
(
	`_
("›íög c⁄figuøti⁄ fûê%s: %s"),
‚ame
,
	`°ªº‹
(
î∫o
));

163 
löe
 = 
NULL
;

164 
löñ
 = 0;

165 
löíum
 = 1;

166 
	`gëdñim
(&
löe
, &
löñ
, '\n', 
ifh
) > 0) {

167 
ch™ge
 *
ch
 = 
	`xmÆloc
((change));

168 
pos
[20];

170 
	`•rötf
(
pos
, 
	`_
("löê%d"), 
löíum
);

172 i‡((
p
 = 
	`°rchr
(
löe
,'#')Ë!
NULL
)

173 *
p
 = '\0';

174 
p
 = 
löe
;

175 
	`is•a˚
(*
p
))

176 ++
p
;

177 i‡(*
p
 == '\0')

179 
n
 = 
	`°rc•n
(
p
, " \t");

180 i‡(
n
 > 
IFNAMSIZ
)

181 
	`com∂aö
(
	`_
("öãrÁ˚Çamêtoÿl⁄gáàlöê%d"), 
löe
);

182 
	`mem˝y
(
ch
->
i‚ame
, 
p
, 
n
);

183 
ch
->
i‚ame
[
n
] = 0;

184 
p
 +
n
;

185 
p
 +
	`°r•n
(p, " \t");

186 
n
 = 
	`°r•n
(
p
, "0123456789ABCDEFabcdef:");

187 
p
[
n
] = 0;

188 
	`addch™ge
(
p
, 
ch
, 
pos
);

189 
löíum
++;

191 
	`f˛o£
(
ifh
);

192 
	}
}

194 
›ti⁄
 
	gl›t
[] = {

195 {"sy¶og", 0, 
NULL
, 's' },

196 {"c⁄fig-fûe", 1, 
NULL
, 'c' },

197 {"hñp", 0, 
NULL
, '?' },

198 {
NULL
},

201 
	$ußge
()

203 
	`Ârötf
(
°dîr
, 
	`_
("usage:Çameif [-c configurationfile] [-s] {ifname macaddress}"));

204 
	`exô
(1);

205 
	}
}

207 
	$maö
(
ac
, **
av
)

209 
FILE
 *
ifh
;

210 *
p
;

211 
n
;

212 
löíum
;

213 *
löe
 = 
NULL
;

214 
size_t
 
löñ
 = 0;

217 
c
 = 
	`gë›t_l⁄g
(
ac
,
av
,"c:s",
l›t
,
NULL
);

218 i‡(
c
 == -1) ;

219 
c
) {

222 
	`ußge
();

224 
‚ame
 = 
›èrg
;

227 
u£_sy¶og
 = 1;

232 i‡(
u£_sy¶og
)

233 
	`›ílog
("«meif",0,
LOG_LOCAL0
);

235 
›töd
 < 
ac
) {

236 
ch™ge
 *
ch
 = 
	`xmÆloc
((change));

237 
pos
[30];

239 i‡((
ac
-
›töd
) & 1)

240 
	`ußge
();

241 i‡(
	`°æí
(
av
[
›töd
])+1>
IFNAMSIZ
)

242 
	`com∂aö
(
	`_
("öãrÁ˚Çamê`%s'Åoÿl⁄g"), 
av
[
›töd
]);

243 
	`°r˝y
(
ch
->
i‚ame
, 
av
[
›töd
]);

244 
›töd
++;

245 
	`•rötf
(
pos
,
	`_
("¨gumíà%d"),
›töd
);

246 
	`addch™ge
(
av
[
›töd
], 
ch
, 
pos
);

247 
›töd
++;

250 i‡(!
˛i°
 || 
‚ame
 !
deÁu…_c⁄f
)

251 
	`ªadc⁄f
();

253 
ifh
 = 
	`f›í
("/proc/net/dev", "r");

254 i‡(!
ifh
Ë
	`com∂aö
(
	`_
("›í o‡/¥oc/√t/dev: %s"), 
	`°ªº‹
(
î∫o
));

257 
löíum
 = 0;

258 
	`gëdñim
(&
löe
, &
löñ
, '\n', 
ifh
) > 0) {

259 
ch™ge
 *
ch
;

260 
mac
[6];

262 i‡(
löíum
++ < 2)

265 
p
 = 
löe
;

266 
	`is•a˚
(*
p
))

267 ++
p
;

268 
n
 = 
	`°rc•n
(
p
, ": \t");

269 
p
[
n
] = 0;

271 i‡(
n
 > 
IFNAMSIZ
-1)

272 
	`com∂aö
(
	`_
("öãrÁ˚Çamê`%s'Åoÿl⁄g"), 
p
);

274 i‡(
	`gëmac
(
p
, 
mac
) < 0)

277 
ch
 = 
	`lookupmac
(
mac
);

278 i‡(!
ch
)

281 *
ch
->
µªv
 = ch->
√xt
;

282 i‡(
	`°rcmp
(
p
, 
ch
->
i‚ame
)) {

283 i‡(
	`£äame
(
p
, 
ch
->
i‚ame
) < 0)

284 
	`com∂aö
(
	`_
("cannot changeÇame of %sÅo %s: %s"),

285 
p
, 
ch
->
i‚ame
, 
	`°ªº‹
(
î∫o
));

287 
	`‰ì
(
ch
);

289 
	`f˛o£
(
ifh
);

291 
˛i°
) {

292 
ch™ge
 *
ch
 = 
˛i°
;

293 
˛i°
 = cli°->
√xt
;

294 
	`w¨nög
(
	`_
("öãrÁ˚ '%s'ÇŸ found"), 
ch
->
i‚ame
);

295 
	`‰ì
(
ch
);

298 i‡(
u£_sy¶og
)

299 
	`˛o£log
();

301 
	}
}

	@net-tools-1.60/netstat.c

69 
	~<î∫o.h
>

70 
	~<°dio.h
>

71 
	~<°dlib.h
>

72 
	~<°rög.h
>

73 
	~<°rögs.h
>

74 
	~<uni°d.h
>

75 
	~<˘y≥.h
>

76 
	~<f˙é.h
>

77 
	~<√tdb.h
>

78 
	~<∑ths.h
>

79 
	~<pwd.h
>

80 
	~<gë›t.h
>

81 
	~<sys/∑øm.h
>

82 
	~<sys/sockë.h
>

83 
	~<¨∑/öë.h
>

84 
	~<√töë/ö.h
>

85 
	~<sys/io˘l.h
>

86 
	~<√t/if.h
>

87 
	~<dúít.h
>

89 
	~"√t-suµ‹t.h
"

90 
	~"∑th«mes.h
"

91 
	~"vîsi⁄.h
"

92 
	~"c⁄fig.h
"

93 
	~"öé.h
"

94 
	~"sockës.h
"

95 
	~"öãrÁ˚.h
"

96 
	~"utû.h
"

98 
	#PROGNAME_WIDTH
 20

	)

100 #i‡!
deföed
(
s6_addr32
Ë&& deföed(
ö6a_w‹ds
)

101 
	#s6_addr32
 
ö6a_w‹ds


	)

105 
∑r£¢mp
(, , );

106 
öôèb
();

109 
	mSS_FREE
 = 0,

110 
	mSS_UNCONNECTED
,

111 
	mSS_CONNECTING
,

112 
	mSS_CONNECTED
,

113 
	mSS_DISCONNECTING


114 } 
	tsockë_°©e
;

116 
	#SO_ACCEPTCON
 (1<<16Ë

	)

117 
	#SO_WAITDATA
 (1<<17Ë

	)

118 
	#SO_NOSPACE
 (1<<18Ë

	)

120 
	#DFLT_AF
 "öë"

	)

122 
	#FEATURE_NETSTAT


	)

123 
	~"lib/√t-„©uªs.h
"

125 *
	gRñó£
 = 
RELEASE
, *
	gVîsi⁄
 = "√t°© 1.42 (2001-04-15)", *
	gSig«tuª
 = "Fred Baumgarten, Alan Cox, Bernd Eckenfels, Phil Blundell, Tuan Hoangánd others";

128 
	#E_READ
 -1

	)

129 
	#E_IOCTL
 -3

	)

131 
	gÊag_öt
 = 0;

132 
	gÊag_rou
 = 0;

133 
	gÊag_mas
 = 0;

134 
	gÊag_°a
 = 0;

136 
	gÊag_Æl
 = 0;

137 
	gÊag_l°
 = 0;

138 
	gÊag_˙t
 = 0;

139 
	gÊag_deb
 = 0;

140 
	gÊag_nŸ
 = 0;

141 
	gÊag_cf
 = 0;

142 
	gÊag_›t
 = 0;

143 
	gÊag_øw
 = 0;

144 
	gÊag_t˝
 = 0;

145 
	gÊag_udp
 = 0;

146 
	gÊag_igmp
= 0;

147 
	gÊag_rom
 = 0;

148 
	gÊag_exp
 = 1;

149 
	gÊag_¥g
 = 0;

150 
	gÊag_¨g
 = 0;

151 
	gÊag_vî
 = 0;

153 
FILE
 *
	g¥ocöfo
;

155 
	#INFO_GUTS1
(
fûe
,
«me
,
¥oc
) \

156 
¥ocöfo
 = 
	`f›í
((
fûe
), "r"); \

157 i‡(
¥ocöfo
 =
NULL
) { \

158 i‡(
î∫o
 !
ENOENT
) { \

159 
	`≥º‹
((
fûe
)); \

162 i‡(
Êag_¨g
 || 
Êag_vî
) \

163 
	`ESYSNOT
("√t°©", (
«me
)); \

164 i‡(
Êag_¨g
) \

165 
rc
 = 1; \

168 i‡(
	`fgës
(
buf„r
, (buf„r), 
¥ocöfo
)) \

169 (
¥oc
)(
 r
++, 
buf„r
); \

170 } !
	`„of
(
¥ocöfo
)); \

171 
	`f˛o£
(
¥ocöfo
); \

172 }

	)

174 #i‡
HAVE_AFINET6


175 
	#INFO_GUTS2
(
fûe
,
¥oc
) \

176 
 r
 = 0; \

177 
¥ocöfo
 = 
	`f›í
((
fûe
), "r"); \

178 i‡(
¥ocöfo
 !
NULL
) { \

180 i‡(
	`fgës
(
buf„r
, (buf„r), 
¥ocöfo
)) \

181 (
¥oc
)(
 r
++, 
buf„r
); \

182 } !
	`„of
(
¥ocöfo
)); \

183 
	`f˛o£
(
¥ocöfo
); \

184 }

	)

186 
	#INFO_GUTS2
(
fûe
,
¥oc
)

	)

189 
	#INFO_GUTS3
 \

190  
rc
;

	)

192 
	#INFO_GUTS6
(
fûe
,
fûe6
,
«me
,
¥oc
) \

193 
buf„r
[8192]; \

194 
rc
 = 0; \

195 
 r
 = 0; \

196 i‡(!
Êag_¨g
 || 
Êag_öë
) { \

197 
	`INFO_GUTS1
(
fûe
,
«me
,
¥oc
) \

199 i‡(!
Êag_¨g
 || 
Êag_öë6
) { \

200 
	`INFO_GUTS2
(
fûe6
,
¥oc
) \

202 
INFO_GUTS3


	)

204 
	#INFO_GUTS
(
fûe
,
«me
,
¥oc
) \

205 
buf„r
[8192]; \

206 
rc
 = 0; \

207 
 r
 = 0; \

208 
	`INFO_GUTS1
(
fûe
,
«me
,
¥oc
) \

209 
INFO_GUTS3


	)

211 
	#PROGNAME_WIDTHs
 
	`PROGNAME_WIDTH1
(
PROGNAME_WIDTH
)

	)

212 
	#PROGNAME_WIDTH1
(
s
Ë
	`PROGNAME_WIDTH2
(s)

	)

213 
	#PROGNAME_WIDTH2
(
s
Ë#s

	)

215 
	#PRG_HASH_SIZE
 211

	)

217 
	s¥g_node
 {

218 
¥g_node
 *
	m√xt
;

219 
	möode
;

220 
	m«me
[
PROGNAME_WIDTH
];

221 } *
	g¥g_hash
[
PRG_HASH_SIZE
];

223 
	g¥g_ˇche_lﬂded
 = 0;

225 
	#PRG_HASHIT
(
x
Ë((xË% 
PRG_HASH_SIZE
)

	)

227 
	#PROGNAME_BANNER
 "PID/ProgømÇame"

	)

229 
	#¥öt_¥og«me_b™√r
(Ëdÿ{ i‡(
Êag_¥g
Ë
	`¥ötf
("%-" 
PROGNAME_WIDTHs
 "s"," " 
PROGNAME_BANNER
); } 0)

	)

231 
	#PRG_LOCAL_ADDRESS
 "loˇl_addªss"

	)

232 
	#PRG_INODE
 "öode"

	)

233 
	#PRG_SOCKET_PFX
 "sockë:["

	)

234 
	#PRG_SOCKET_PFXl
 (
	`°æí
(
PRG_SOCKET_PFX
))

	)

235 
	#PRG_SOCKET_PFX2
 "[0000]:"

	)

236 
	#PRG_SOCKET_PFX2l
 (
	`°æí
(
PRG_SOCKET_PFX2
))

	)

239 #i‚de‡
LINE_MAX


240 
	#LINE_MAX
 4096

	)

243 
	#PATH_PROC
 "/¥oc"

	)

244 
	#PATH_FD_SUFF
 "fd"

	)

245 
	#PATH_FD_SUFFl
 
	`°æí
(
PATH_FD_SUFF
)

	)

246 
	#PATH_PROC_X_FD
 
PATH_PROC
 "/%s/" 
PATH_FD_SUFF


	)

247 
	#PATH_CMDLINE
 "cmdlöe"

	)

248 
	#PATH_CMDLINEl
 
	`°æí
(
PATH_CMDLINE
)

	)

250 #unde‡
DIRENT_HAVE_D_TYPE_WORKS


252 
	$¥g_ˇche_add
(
öode
, *
«me
)

254 
hi
 = 
	`PRG_HASHIT
(
öode
);

255 
¥g_node
 **
≤p
,*
≤
;

257 
¥g_ˇche_lﬂded
=2;

258 
≤p
=
¥g_hash
+
hi
;(
≤
=*≤p);≤p=&≤->
√xt
) {

259 i‡(
≤
->
öode
==inode) {

265 i‡(!(*
≤p
=
	`mÆloc
((**pnp))))

267 
≤
=*
≤p
;

268 
≤
->
√xt
=
NULL
;

269 
≤
->
öode
=inode;

270 i‡(
	`°æí
(
«me
)>(
≤
->name)-1)

271 
«me
[(
≤
->name)-1]='\0';

272 
	`°r˝y
(
≤
->
«me
,name);

273 
	}
}

275 c⁄° *
	$¥g_ˇche_gë
(
öode
)

277 
hi
=
	`PRG_HASHIT
(
öode
);

278 
¥g_node
 *
≤
;

280 
≤
=
¥g_hash
[
hi
];≤;≤ın->
√xt
)

281 i‡(
≤
->
öode
==öodeË’n->
«me
);

283 
	}
}

285 
	$¥g_ˇche_˛ór
()

287 
¥g_node
 **
≤p
,*
≤
;

289 i‡(
¥g_ˇche_lﬂded
 == 2)

290 
≤p
=
¥g_hash
;≤p<¥g_hash+
PRG_HASH_SIZE
;pnp++)

291 (
≤
=*
≤p
)) {

292 *
≤p
=
≤
->
√xt
;

293 
	`‰ì
(
≤
);

295 
¥g_ˇche_lﬂded
=0;

296 
	}
}

298 
	$exåa˘_ty≥_1_sockë_öode
(c⁄° 
 ame
[], * 
öode_p
) {

304 i‡(
	`°æí
(
 ame
Ë< 
PRG_SOCKET_PFXl
+3Ë*
öode_p
 = -1;

305 i‡(
	`memcmp
(
 ame
, 
PRG_SOCKET_PFX
, 
PRG_SOCKET_PFXl
)Ë*
öode_p
 = -1;

306 i‡(
 ame
[
	`°æí
÷«me)-1] !']'Ë*
öode_p
 = -1;

308 
öode_°r
[
	`°æí
(
 ame
 + 1)];

309 c⁄° 
öode_°r_Àn
 = 
	`°æí
(
 ame
Ë- 
PRG_SOCKET_PFXl
 - 1;

310 *
£º
;

312 
	`°∫˝y
(
öode_°r
, 
 ame
+
PRG_SOCKET_PFXl
, 
öode_°r_Àn
);

313 
öode_°r
[
öode_°r_Àn
] = '\0';

314 *
öode_p
 = 
	`°πﬁ
(
öode_°r
,&
£º
,0);

315 i‡(!
£º
 || *£º || *
öode_p
 < 0 || *öode_∞>
INT_MAX
)

316 *
öode_p
 = -1;

318 
	}
}

322 
	$exåa˘_ty≥_2_sockë_öode
(c⁄° 
 ame
[], * 
öode_p
) {

328 i‡(
	`°æí
(
 ame
Ë< 
PRG_SOCKET_PFX2l
+1Ë*
öode_p
 = -1;

329 i‡(
	`memcmp
(
 ame
, 
PRG_SOCKET_PFX2
, 
PRG_SOCKET_PFX2l
)Ë*
öode_p
 = -1;

331 *
£º
;

333 *
öode_p
=
	`°πﬁ
(
 ame
 + 
PRG_SOCKET_PFX2l
,&
£º
,0);

334 i‡(!
£º
 || *£º || *
öode_p
 < 0 || *öode_∞>
INT_MAX
)

335 *
öode_p
 = -1;

337 
	}
}

341 
	$¥g_ˇche_lﬂd
()

343 
löe
[
LINE_MAX
],
óc˚s
=0;

344 
¥ocfdÀn
,
fd
,
cmdŒí
,
 amñí
;

345 
 ame
[30],
cmdlbuf
[512],
föbuf
[
PROGNAME_WIDTH
];

346 
öode
;

347 c⁄° *
cs
,*
cmdÕ
;

348 
DIR
 *
dú¥oc
=
NULL
,*
dúfd
=NULL;

349 
dúít
 *
dúïroc
,*
dúefd
;

351 i‡(
¥g_ˇche_lﬂded
 || !
Êag_¥g
) ;

352 
¥g_ˇche_lﬂded
=1;

353 
cmdlbuf
[(cmdlbuf)-1]='\0';

354 i‡(!(
dú¥oc
=
	`›ídú
(
PATH_PROC
))Ë
Áû
;

355 
î∫o
=0,
dúïroc
=
	`ªaddú
(
dú¥oc
)) {

356 #ifde‡
DIRENT_HAVE_D_TYPE_WORKS


357 i‡(
dúïroc
->
d_ty≥
!=
DT_DIR
) ;

359 
cs
=
dúïroc
->
d_«me
;*cs;cs++)

360 i‡(!
	`isdigô
(*
cs
))

362 i‡(*
cs
)

364 
¥ocfdÀn
=
	`¢¥ötf
(
löe
,÷öe),
PATH_PROC_X_FD
,
dúïroc
->
d_«me
);

365 i‡(
¥ocfdÀn
<=0 ||ÖrocfdÀn>=(
löe
)-5)

367 
î∫o
=0;

368 
dúfd
=
	`›ídú
(
löe
);

369 i‡(! 
dúfd
) {

370 i‡(
î∫o
==
EACCES
)

371 
óc˚s
=1;

374 
löe
[
¥ocfdÀn
] = '/';

375 
cmdÕ
 = 
NULL
;

376 (
dúefd
 = 
	`ªaddú
(
dúfd
))) {

377 #ifde‡
DIRENT_HAVE_D_TYPE_WORKS


378 i‡(
dúefd
->
d_ty≥
!=
DT_LNK
)

381 i‡(
¥ocfdÀn
+1+
	`°æí
(
dúefd
->
d_«me
)+1>(
löe
))

383 
	`mem˝y
(
löe
 + 
¥ocfdÀn
 - 
PATH_FD_SUFFl
, 
PATH_FD_SUFF
 "/",

384 
PATH_FD_SUFFl
+1);

385 
	`°r˝y
(
löe
 + 
¥ocfdÀn
 + 1, 
dúefd
->
d_«me
);

386 
 amñí
=
	`ªadlök
(
löe
,
 ame
,(lname)-1);

387 
 ame
[
 amñí
] = '\0';

389 
	`exåa˘_ty≥_1_sockë_öode
(
 ame
, &
öode
);

391 i‡(
öode
 < 0Ë
	`exåa˘_ty≥_2_sockë_öode
(
 ame
, &inode);

393 i‡(
öode
 < 0) ;

395 i‡(!
cmdÕ
) {

396 i‡(
¥ocfdÀn
 - 
PATH_FD_SUFFl
 + 
PATH_CMDLINEl
 >=

397 (
löe
) - 5)

399 
	`°r˝y
(
löe
 + 
¥ocfdÀn
-
PATH_FD_SUFFl
, 
PATH_CMDLINE
);

400 
fd
 = 
	`›í
(
löe
, 
O_RDONLY
);

401 i‡(
fd
 < 0)

403 
cmdŒí
 = 
	`ªad
(
fd
, 
cmdlbuf
, (cmdlbuf) - 1);

404 i‡(
	`˛o£
(
fd
))

406 i‡(
cmdŒí
 == -1)

408 i‡(
cmdŒí
 < (
cmdlbuf
) - 1)

409 
cmdlbuf
[
cmdŒí
]='\0';

410 i‡((
cmdÕ
 = 
	`°ºchr
(
cmdlbuf
, '/')))

411 
cmdÕ
++;

413 
cmdÕ
 = 
cmdlbuf
;

416 
	`¢¥ötf
(
föbuf
, (föbuf), "%s/%s", 
dúïroc
->
d_«me
, 
cmdÕ
);

417 
	`¥g_ˇche_add
(
öode
, 
föbuf
);

419 
	`˛o£dú
(
dúfd
);

420 
dúfd
 = 
NULL
;

422 i‡(
dú¥oc
)

423 
	`˛o£dú
(
dú¥oc
);

424 i‡(
dúfd
)

425 
	`˛o£dú
(
dúfd
);

426 i‡(!
óc˚s
)

428 i‡(
¥g_ˇche_lﬂded
 == 1) {

429 
Áû
:

430 
	`Ârötf
(
°dîr
,
	`_
("(No info could beÑead for \"-p\": geteuid()=%d but you should beÑoot.)\n"),

431 
	`gëeuid
());

434 
	`Ârötf
(
°dîr
, 
	`_
("(NotállÖrocesses could be identified,Çon-ownedÖrocess info\n"

436 
	}
}

438 #i‡
HAVE_AFNETROM


439 c⁄° *
	g√åom_°©e
[] =

441 
N_
("LISTENING"),

442 
N_
("CONN SENT"),

443 
N_
("DISC SENT"),

444 
N_
("ESTABLISHED")

447 
	$√åom_öfo
()

449 
FILE
 *
f
;

450 
buf„r
[256], 
dev
[16];

451 
°
, 
vs
, 
vr
, 
£ndq
, 
ªcvq
, 
ªt
;

453 
f
 = 
	`f›í
(
_PATH_PROCNET_NR
, "r");

454 i‡(
f
 =
NULL
) {

455 i‡(
î∫o
 !
ENOENT
) {

456 
	`≥º‹
(
_PATH_PROCNET_NR
);

459 i‡(
Êag_¨g
 || 
Êag_vî
)

460 
	`ESYSNOT
("netstat", "AF NETROM");

461 i‡(
Êag_¨g
)

466 
	`¥ötf
(
	`_
("Active NET/ROM sockets\n"));

467 
	`¥ötf
(
	`_
("User Dest Source Device State Vr/Vs Send-Q Recv-Q\n"));

468 
	`fgës
(
buf„r
, 256, 
f
);

470 
	`fgës
(
buf„r
, 256, 
f
)) {

471 
buf„r
[9] = 0;

472 
buf„r
[19] = 0;

473 
buf„r
[29] = 0;

474 
ªt
 = 
	`ssˇnf
(
buf„r
 + 30, "%s %*x/%*x %*x/%*x %d %d %d %*d %*d/%*d %*d/%*d %*d/%*d %*d/%*d %*d/%*d %*d %d %d %*d",

475 
dev
, &
°
, &
vs
, &
vr
, &
£ndq
, &
ªcvq
);

476 i‡(
ªt
 != 6) {

477 
	`¥ötf
(
	`_
("ProbÀmÑódög d©®‰om %s\n"), 
_PATH_PROCNET_NR
);

480 
	`¥ötf
("%-9s %-9s %-9s %-6s %-11s %03d/%03d %-6d %-6d\n",

481 
buf„r
, buffer + 10, buffer + 20,

482 
dev
,

483 
	`_
(
√åom_°©e
[
°
]),

484 
vr
, 
vs
, 
£ndq
, 
ªcvq
);

486 
	`f˛o£
(
f
);

488 
	}
}

493 
	mTCP_ESTABLISHED
 = 1,

494 
	mTCP_SYN_SENT
,

495 
	mTCP_SYN_RECV
,

496 
	mTCP_FIN_WAIT1
,

497 
	mTCP_FIN_WAIT2
,

498 
	mTCP_TIME_WAIT
,

499 
	mTCP_CLOSE
,

500 
	mTCP_CLOSE_WAIT
,

501 
	mTCP_LAST_ACK
,

502 
	mTCP_LISTEN
,

503 
	mTCP_CLOSING


506 #i‡
HAVE_AFINET
 || 
HAVE_AFINET6


508 c⁄° *
	gt˝_°©e
[] =

511 
N_
("ESTABLISHED"),

512 
N_
("SYN_SENT"),

513 
N_
("SYN_RECV"),

514 
N_
("FIN_WAIT1"),

515 
N_
("FIN_WAIT2"),

516 
N_
("TIME_WAIT"),

517 
N_
("CLOSE"),

518 
N_
("CLOSE_WAIT"),

519 
N_
("LAST_ACK"),

520 
N_
("LISTEN"),

521 
N_
("CLOSING")

524 
	$föish_this_⁄e
(
uid
, 
öode
, c⁄° *
timîs
)

526 
∑sswd
 *
pw
;

528 i‡(
Êag_exp
 > 1) {

529 i‡(!(
Êag_nŸ
 & 
FLAG_NUM_USER
Ë&& ((
pw
 = 
	`gëpwuid
(
uid
)Ë!
NULL
))

530 
	`¥ötf
("%-10†", 
pw
->
pw_«me
);

532 
	`¥ötf
("%-10d ", 
uid
);

533 
	`¥ötf
("%-10ld ",
öode
);

535 i‡(
Êag_¥g
)

536 
	`¥ötf
("%-" 
PROGNAME_WIDTHs
 "s",
	`¥g_ˇche_gë
(
öode
));

537 i‡(
Êag_›t
)

538 
	`¥ötf
("%s", 
timîs
);

539 
	`putch¨
('\n');

540 
	}
}

542 
	$igmp_do_⁄e
(
 r
, c⁄° *
löe
)

544 
mˇ°_addr
[128];

545 #i‡
HAVE_AFINET6


546 
sockaddr_ö6
 
mˇ°addr
;

547 
addr6
[
INET6_ADDRSTRLEN
];

548 
ö6_addr
 
ö6
;

549 
a·y≥
 
öë6_a·y≥
;

551 
sockaddr_ö
 
mˇ°addr
;

553 
a·y≥
 *
≠
;

554 
idx_Êag
 = 0;

555 
igmp6_Êag
 = 0;

556 
devi˚
[16];

557 
num
, 
idx
, 
ªf˙t
;

559 i‡(
 r
 == 0) {

562 i‡–
	`°r°r
–
löe
, "Devi˚" ) =
NULL
 ) {

563 
igmp6_Êag
 = 1;

568 i‡–
	`°∫cmp
–
löe
, "Idx", 
	`°æí
("Idx") ) == 0 )

569 
idx_Êag
 = 1;

571 
idx_Êag
 = 0;

576 i‡(
igmp6_Êag
) {

577 #i‡
HAVE_AFINET6


578 
num
 = 
	`ssˇnf
–
löe
, "%d %15†%64[0-9A-Fa-f] %d", &
idx
, 
devi˚
, 
mˇ°_addr
, &
ªf˙t
 );

579 i‡(
num
 == 4) {

581 
	`ssˇnf
(
mˇ°_addr
, "%08X%08X%08X%08X",

582 &
ö6
.
s6_addr32
[0], &in6.s6_addr32[1],

583 &
ö6
.
s6_addr32
[2], &in6.s6_addr32[3]);

584 
ö6
.
s6_addr32
[0] = 
	`ht⁄l
(in6.s6_addr32[0]);

585 
ö6
.
s6_addr32
[1] = 
	`ht⁄l
(in6.s6_addr32[1]);

586 
ö6
.
s6_addr32
[2] = 
	`ht⁄l
(in6.s6_addr32[2]);

587 
ö6
.
s6_addr32
[3] = 
	`ht⁄l
(in6.s6_addr32[3]);

588 
	`öë_¡›
(
AF_INET6
, &
ö6
, 
addr6
, (addr6));

589 
öë6_a·y≥
.
	`öput
(1, 
addr6
, (
sockaddr
 *Ë&
mˇ°addr
);

590 
mˇ°addr
.
sö6_Ámûy
 = 
AF_INET6
;

592 
	`Ârötf
(
°dîr
, 
	`_
("w¨nög, gŸ bogu†igmp6Üöê%d.\n"), 
 r
);

596 i‡((
≠
 = 
	`gë_a‚ty≥
(((
sockaddr
 *Ë&
mˇ°addr
)->
ß_Ámûy
)Ë=
NULL
) {

597 
	`Ârötf
(
°dîr
, 
	`_
("netstat: unsupportedáddress family %d !\n"),

598 ((
sockaddr
 *Ë&
mˇ°addr
)->
ß_Ámûy
);

601 
	`ß„_°∫˝y
(
mˇ°_addr
, 
≠
->
	`•röt
((
sockaddr
 *Ë&
mˇ°addr
,

602 
Êag_nŸ
), (
mˇ°_addr
));

603 
	`¥ötf
("%-15†%-6d %s\n", 
devi˚
, 
ªf˙t
, 
mˇ°_addr
);

606 #i‡
HAVE_AFINET


607 i‡(
löe
[0] != '\t') {

608 i‡(
idx_Êag
) {

609 i‡((
num
 = 
	`ssˇnf
–
löe
, "%d\t%10c", &
idx
, 
devi˚
)) < 2) {

610 
	`Ârötf
(
°dîr
, 
	`_
("w¨nög, gŸ bogu†igm∞löê%d.\n"), 
 r
);

614 i‡–(
num
 = 
	`ssˇnf
–
löe
, "%10c", 
devi˚
 )) < 1 ) {

615 
	`Ârötf
(
°dîr
, 
	`_
("w¨nög, gŸ bogu†igm∞löê%d.\n"), 
 r
);

619 
devi˚
[10] = '\0';

621 } i‡–
löe
[0] == '\t' ) {

622 i‡–(
num
 = 
	`ssˇnf
(
löe
, "\t%8[0-9A-Fa-f] %d", 
mˇ°_addr
, &
ªf˙t
)) < 2 ) {

623 
	`Ârötf
(
°dîr
, 
	`_
("w¨nög, gŸ bogu†igm∞löê%d.\n"), 
 r
);

626 
	`ssˇnf
–
mˇ°_addr
, "%X",

627 &((
sockaddr_ö
 *Ë&
mˇ°addr
)->
sö_addr
.
s_addr
 );

628 ((
sockaddr
 *Ë&
mˇ°addr
)->
ß_Ámûy
 = 
AF_INET
;

630 
	`Ârötf
(
°dîr
, 
	`_
("w¨nög, gŸ bogu†igm∞löê%d.\n"), 
 r
);

634 i‡((
≠
 = 
	`gë_a‚ty≥
(((
sockaddr
 *Ë&
mˇ°addr
)->
ß_Ámûy
)Ë=
NULL
) {

635 
	`Ârötf
(
°dîr
, 
	`_
("netstat: unsupportedáddress family %d !\n"),

636 ((
sockaddr
 *Ë&
mˇ°addr
)->
ß_Ámûy
);

639 
	`ß„_°∫˝y
(
mˇ°_addr
, 
≠
->
	`•röt
((
sockaddr
 *Ë&
mˇ°addr
,

640 
Êag_nŸ
), (
mˇ°_addr
));

641 
	`¥ötf
("%-15†%-6d %s\n", 
devi˚
, 
ªf˙t
, 
mˇ°_addr
 );

644 
	}
}

646 #i‡
HAVE_AFX25


647 
	$x25_öfo
()

649 
FILE
 *
f
=
	`f›í
(
_PATH_PROCNET_X25
, "r");

650 
buf„r
[256],
dev
[16];

651 
°
,
vs
,
vr
,
£ndq
,
ªcvq
,
lci
;

652 *
x25_°©e
[5]=

660 if(!(
f
=
	`f›í
(
_PATH_PROCNET_X25
, "r")))

662 i‡(
î∫o
 !
ENOENT
) {

663 
	`≥º‹
(
_PATH_PROCNET_X25
);

666 i‡(
Êag_¨g
 || 
Êag_vî
)

667 
	`ESYSNOT
("netstat","AF X25");

668 i‡(
Êag_¨g
)

673 
	`¥ötf
–
	`_
("Active X.25 sockets\n"));

675 
	`¥ötf
–
	`_
("Dest Source Device LCI State Vr/Vs Send-Q Recv-Q\n"));

676 
	`fgës
(
buf„r
,256,
f
);

677 
	`fgës
(
buf„r
,256,
f
))

679 
buf„r
[10]=0;

680 
buf„r
[20]=0;

681 
	`ssˇnf
(
buf„r
+22,"%s %d %d %d %d %*d %*d %*d %*d %*d %*d %d %d %*d",

682 
dev
,&
lci
,&
°
,&
vs
,&
vr
,&
£ndq
,&
ªcvq
);

683 i‡(!(
Êag_Æl
 || 
lci
))

685 
	`¥ötf
("%-15s %-15s %-7s %-3d %-11s %02d/%02d %-6d %-6d\n",

686 
buf„r
,buffer+11,

687 
dev
,

688 
lci
,

689 
x25_°©e
[
°
],

690 
vr
,
vs
,
£ndq
,
ªcvq
);

692 
	`f˛o£
(
f
);

694 
	}
}

697 
	$igmp_öfo
()

699 
	`INFO_GUTS6
(
_PATH_PROCNET_IGMP
, 
_PATH_PROCNET_IGMP6
, "AF INET (igmp)",

700 
igmp_do_⁄e
);

701 
	}
}

703 
	$t˝_do_⁄e
(
 r
, c⁄° *
löe
)

705 
rxq
, 
txq
, 
time_Àn
, 
ªå
, 
öode
;

706 
num
, 
loˇl_p‹t
, 
ªm_p‹t
, 
d
, 
°©e
, 
uid
, 
timî_run
, 
timeout
;

707 
ªm_addr
[128], 
loˇl_addr
[128], 
timîs
[64], 
buf„r
[1024], 
m‹e
[512];

708 
a·y≥
 *
≠
;

709 #i‡
HAVE_AFINET6


710 
sockaddr_ö6
 
loˇœddr
, 
ªmaddr
;

711 
addr6
[
INET6_ADDRSTRLEN
];

712 
ö6_addr
 
ö6
;

713 
a·y≥
 
öë6_a·y≥
;

715 
sockaddr_ö
 
loˇœddr
, 
ªmaddr
;

718 i‡(
 r
 == 0)

721 
num
 = 
	`ssˇnf
(
löe
,

723 &
d
, 
loˇl_addr
, &
loˇl_p‹t
, 
ªm_addr
, &
ªm_p‹t
, &
°©e
,

724 &
txq
, &
rxq
, &
timî_run
, &
time_Àn
, &
ªå
, &
uid
, &
timeout
, &
öode
, 
m‹e
);

726 i‡(
	`°æí
(
loˇl_addr
) > 8) {

727 #i‡
HAVE_AFINET6


729 
	`ssˇnf
(
loˇl_addr
, "%08X%08X%08X%08X",

730 &
ö6
.
s6_addr32
[0], &in6.s6_addr32[1],

731 &
ö6
.
s6_addr32
[2], &in6.s6_addr32[3]);

732 
	`öë_¡›
(
AF_INET6
, &
ö6
, 
addr6
, (addr6));

733 
öë6_a·y≥
.
	`öput
(1, 
addr6
, (
sockaddr
 *Ë&
loˇœddr
);

734 
	`ssˇnf
(
ªm_addr
, "%08X%08X%08X%08X",

735 &
ö6
.
s6_addr32
[0], &in6.s6_addr32[1],

736 &
ö6
.
s6_addr32
[2], &in6.s6_addr32[3]);

737 
	`öë_¡›
(
AF_INET6
, &
ö6
, 
addr6
, (addr6));

738 
öë6_a·y≥
.
	`öput
(1, 
addr6
, (
sockaddr
 *Ë&
ªmaddr
);

739 
loˇœddr
.
sö6_Ámûy
 = 
AF_INET6
;

740 
ªmaddr
.
sö6_Ámûy
 = 
AF_INET6
;

743 
	`ssˇnf
(
loˇl_addr
, "%X",

744 &((
sockaddr_ö
 *Ë&
loˇœddr
)->
sö_addr
.
s_addr
);

745 
	`ssˇnf
(
ªm_addr
, "%X",

746 &((
sockaddr_ö
 *Ë&
ªmaddr
)->
sö_addr
.
s_addr
);

747 ((
sockaddr
 *Ë&
loˇœddr
)->
ß_Ámûy
 = 
AF_INET
;

748 ((
sockaddr
 *Ë&
ªmaddr
)->
ß_Ámûy
 = 
AF_INET
;

751 i‡(
num
 < 11) {

752 
	`Ârötf
(
°dîr
, 
	`_
("warning, got bogusÅcpÜine.\n"));

755 i‡((
≠
 = 
	`gë_a‚ty≥
(((
sockaddr
 *Ë&
loˇœddr
)->
ß_Ámûy
)Ë=
NULL
) {

756 
	`Ârötf
(
°dîr
, 
	`_
("netstat: unsupportedáddress family %d !\n"),

757 ((
sockaddr
 *Ë&
loˇœddr
)->
ß_Ámûy
);

760 i‡(
°©e
 =
TCP_LISTEN
) {

761 
time_Àn
 = 0;

762 
ªå
 = 0L;

763 
rxq
 = 0L;

764 
txq
 = 0L;

766 
	`ß„_°∫˝y
(
loˇl_addr
, 
≠
->
	`•röt
((
sockaddr
 *Ë&
loˇœddr
,

767 
Êag_nŸ
), (
loˇl_addr
));

768 
	`ß„_°∫˝y
(
ªm_addr
, 
≠
->
	`•röt
((
sockaddr
 *Ë&
ªmaddr
, 
Êag_nŸ
),

769 (
ªm_addr
));

770 i‡(
Êag_Æl
 || (
Êag_l°
 && !
ªm_p‹t
) || (!flag_lst &&Ñem_port)) {

771 
	`¢¥ötf
(
buf„r
, (buffer), "%s",

772 
	`gë_¢ame
(
	`ht⁄s
(
loˇl_p‹t
), "tcp",

773 
Êag_nŸ
 & 
FLAG_NUM_PORT
));

775 i‡((
	`°æí
(
loˇl_addr
Ë+ såÀn(
buf„r
)) > 22)

776 
loˇl_addr
[22 - 
	`°æí
(
buf„r
)] = '\0';

778 
	`°rˇt
(
loˇl_addr
, ":");

779 
	`°rˇt
(
loˇl_addr
, 
buf„r
);

780 
	`¢¥ötf
(
buf„r
, (buffer), "%s",

781 
	`gë_¢ame
(
	`ht⁄s
(
ªm_p‹t
), "t˝", 
Êag_nŸ
 & 
FLAG_NUM_PORT
));

783 i‡((
	`°æí
(
ªm_addr
Ë+ såÀn(
buf„r
)) > 22)

784 
ªm_addr
[22 - 
	`°æí
(
buf„r
)] = '\0';

786 
	`°rˇt
(
ªm_addr
, ":");

787 
	`°rˇt
(
ªm_addr
, 
buf„r
);

788 
timîs
[0] = '\0';

790 i‡(
Êag_›t
)

791 
timî_run
) {

793 
	`¢¥ötf
(
timîs
, —imîs), 
	`_
("of‡(0.00/%ld/%d)"), 
ªå
, 
timeout
);

797 
	`¢¥ötf
(
timîs
, —imîs), 
	`_
("on (%2.2f/%ld/%d)"),

798 (Ë
time_Àn
 / 
HZ
, 
ªå
, 
timeout
);

802 
	`¢¥ötf
(
timîs
, —imîs), 
	`_
("keepalive (%2.2f/%ld/%d)"),

803 (Ë
time_Àn
 / 
HZ
, 
ªå
, 
timeout
);

807 
	`¢¥ötf
(
timîs
, —imîs), 
	`_
("timewait (%2.2f/%ld/%d)"),

808 (Ë
time_Àn
 / 
HZ
, 
ªå
, 
timeout
);

812 
	`¢¥ötf
(
timîs
, —imîs), 
	`_
("unkn-%d (%2.2f/%ld/%d)"),

813 
timî_run
, (Ë
time_Àn
 / 
HZ
, 
ªå
, 
timeout
);

816 
	`¥ötf
("tcp %6ld %6ld %-23s %-23s %-12s",

817 
rxq
, 
txq
, 
loˇl_addr
, 
ªm_addr
, 
	`_
(
t˝_°©e
[
°©e
]));

819 
	`föish_this_⁄e
(
uid
,
öode
,
timîs
);

821 
	}
}

823 
	$t˝_öfo
()

825 
	`INFO_GUTS6
(
_PATH_PROCNET_TCP
, 
_PATH_PROCNET_TCP6
, "AF INET (tcp)",

826 
t˝_do_⁄e
);

827 
	}
}

829 
	$udp_do_⁄e
(
 r
, c⁄° *
löe
)

831 
buf„r
[8192], 
loˇl_addr
[64], 
ªm_addr
[64];

832 *
udp_°©e
, 
timîs
[64], 
m‹e
[512];

833 
num
, 
loˇl_p‹t
, 
ªm_p‹t
, 
d
, 
°©e
, 
timî_run
, 
uid
, 
timeout
;

834 #i‡
HAVE_AFINET6


835 
sockaddr_ö6
 
loˇœddr
, 
ªmaddr
;

836 
addr6
[
INET6_ADDRSTRLEN
];

837 
ö6_addr
 
ö6
;

838 
a·y≥
 
öë6_a·y≥
;

840 
sockaddr_ö
 
loˇœddr
, 
ªmaddr
;

842 
a·y≥
 *
≠
;

843 
rxq
, 
txq
, 
time_Àn
, 
ªå
, 
öode
;

845 i‡(
 r
 == 0)

848 
m‹e
[0] = '\0';

849 
num
 = 
	`ssˇnf
(
löe
,

851 &
d
, 
loˇl_addr
, &
loˇl_p‹t
,

852 
ªm_addr
, &
ªm_p‹t
, &
°©e
,

853 &
txq
, &
rxq
, &
timî_run
, &
time_Àn
, &
ªå
, &
uid
, &
timeout
, &
öode
, 
m‹e
);

855 i‡(
	`°æí
(
loˇl_addr
) > 8) {

856 #i‡
HAVE_AFINET6


857 
	`ssˇnf
(
loˇl_addr
, "%08X%08X%08X%08X",

858 &
ö6
.
s6_addr32
[0], &in6.s6_addr32[1],

859 &
ö6
.
s6_addr32
[2], &in6.s6_addr32[3]);

860 
	`öë_¡›
(
AF_INET6
, &
ö6
, 
addr6
, (addr6));

861 
öë6_a·y≥
.
	`öput
(1, 
addr6
, (
sockaddr
 *Ë&
loˇœddr
);

862 
	`ssˇnf
(
ªm_addr
, "%08X%08X%08X%08X",

863 &
ö6
.
s6_addr32
[0], &in6.s6_addr32[1],

864 &
ö6
.
s6_addr32
[2], &in6.s6_addr32[3]);

865 
	`öë_¡›
(
AF_INET6
, &
ö6
, 
addr6
, (addr6));

866 
öë6_a·y≥
.
	`öput
(1, 
addr6
, (
sockaddr
 *Ë&
ªmaddr
);

867 
loˇœddr
.
sö6_Ámûy
 = 
AF_INET6
;

868 
ªmaddr
.
sö6_Ámûy
 = 
AF_INET6
;

871 
	`ssˇnf
(
loˇl_addr
, "%X",

872 &((
sockaddr_ö
 *Ë&
loˇœddr
)->
sö_addr
.
s_addr
);

873 
	`ssˇnf
(
ªm_addr
, "%X",

874 &((
sockaddr_ö
 *Ë&
ªmaddr
)->
sö_addr
.
s_addr
);

875 ((
sockaddr
 *Ë&
loˇœddr
)->
ß_Ámûy
 = 
AF_INET
;

876 ((
sockaddr
 *Ë&
ªmaddr
)->
ß_Ámûy
 = 
AF_INET
;

879 
ªå
 = 0L;

880 i‡(!
Êag_›t
)

881 
m‹e
[0] = '\0';

883 i‡(
num
 < 10) {

884 
	`Ârötf
(
°dîr
, 
	`_
("warning, got bogus udpÜine.\n"));

887 i‡((
≠
 = 
	`gë_a‚ty≥
(((
sockaddr
 *Ë&
loˇœddr
)->
ß_Ámûy
)Ë=
NULL
) {

888 
	`Ârötf
(
°dîr
, 
	`_
("netstat: unsupportedáddress family %d !\n"),

889 ((
sockaddr
 *Ë&
loˇœddr
)->
ß_Ámûy
);

892 
°©e
) {

893 
TCP_ESTABLISHED
:

894 
udp_°©e
 = 
	`_
("ESTABLISHED");

897 
TCP_CLOSE
:

898 
udp_°©e
 = "";

902 
udp_°©e
 = 
	`_
("UNKNOWN");

906 #i‡
HAVE_AFINET6


907 
	#nŸnuŒ
(
A
Ë(((A.
sö6_Ámûy
 =
AF_INET6
) && \

908 ((
A
.
sö6_addr
.
s6_addr32
[0]) || \

909 (
A
.
sö6_addr
.
s6_addr32
[1]) || \

910 (
A
.
sö6_addr
.
s6_addr32
[2]) || \

911 (
A
.
sö6_addr
.
s6_addr32
[3]))) || \

912 ((
A
.
sö6_Ámûy
 =
AF_INET
) && \

913 ((
sockaddr_ö
 *Ë&
A
)->
sö_addr
.
s_addr
))

	)

915 
	#nŸnuŒ
(
A
Ë(A.
sö_addr
.
s_addr
)

	)

918 i‡(
Êag_Æl
 || (
	`nŸnuŒ
(
ªmaddr
Ë&& !
Êag_l°
) || (!notnull(remaddr) && flag_lst))

920 
	`ß„_°∫˝y
(
loˇl_addr
, 
≠
->
	`•röt
((
sockaddr
 *Ë&
loˇœddr
,

921 
Êag_nŸ
), (
loˇl_addr
));

922 
	`¢¥ötf
(
buf„r
, (buffer), "%s",

923 
	`gë_¢ame
(
	`ht⁄s
(
loˇl_p‹t
), "udp",

924 
Êag_nŸ
 & 
FLAG_NUM_PORT
));

925 i‡((
	`°æí
(
loˇl_addr
Ë+ såÀn(
buf„r
)) > 22)

926 
loˇl_addr
[22 - 
	`°æí
(
buf„r
)] = '\0';

927 
	`°rˇt
(
loˇl_addr
, ":");

928 
	`°rˇt
(
loˇl_addr
, 
buf„r
);

930 
	`¢¥ötf
(
buf„r
, (buffer), "%s",

931 
	`gë_¢ame
(
	`ht⁄s
(
ªm_p‹t
), "udp", 
Êag_nŸ
 & 
FLAG_NUM_PORT
));

932 
	`ß„_°∫˝y
(
ªm_addr
, 
≠
->
	`•röt
((
sockaddr
 *Ë&
ªmaddr
,

933 
Êag_nŸ
), (
ªm_addr
));

934 i‡((
	`°æí
(
ªm_addr
Ë+ såÀn(
buf„r
)) > 22)

935 
ªm_addr
[22 - 
	`°æí
(
buf„r
)] = '\0';

936 
	`°rˇt
(
ªm_addr
, ":");

937 
	`°rˇt
(
ªm_addr
, 
buf„r
);

939 
timîs
[0] = '\0';

940 i‡(
Êag_›t
)

941 
timî_run
) {

943 
	`¢¥ötf
(
timîs
, —imîs), 
	`_
("of‡(0.00/%ld/%d)"), 
ªå
, 
timeout
);

948 
	`¢¥ötf
(
timîs
, —imîs), 
	`_
("⁄%d (%2.2f/%ld/%d)"), 
timî_run
, (Ë
time_Àn
 / 100, 
ªå
, 
timeout
);

952 
	`¢¥ötf
(
timîs
, —imîs), 
	`_
("unkn-%d (%2.2f/%ld/%d)"), 
timî_run
, (Ë
time_Àn
 / 100,

953 
ªå
, 
timeout
);

956 
	`¥ötf
("udp %6ld %6ld %-23s %-23s %-12s",

957 
rxq
, 
txq
, 
loˇl_addr
, 
ªm_addr
, 
udp_°©e
);

959 
	`föish_this_⁄e
(
uid
,
öode
,
timîs
);

961 
	}
}

963 
	$udp_öfo
()

965 
	`INFO_GUTS6
(
_PATH_PROCNET_UDP
, 
_PATH_PROCNET_UDP6
, "AF INET (udp)",

966 
udp_do_⁄e
);

967 
	}
}

969 
	$øw_do_⁄e
(
 r
, c⁄° *
löe
)

971 
buf„r
[8192], 
loˇl_addr
[64], 
ªm_addr
[64];

972 
timîs
[64], 
m‹e
[512];

973 
num
, 
loˇl_p‹t
, 
ªm_p‹t
, 
d
, 
°©e
, 
timî_run
, 
uid
, 
timeout
;

974 #i‡
HAVE_AFINET6


975 
sockaddr_ö6
 
loˇœddr
, 
ªmaddr
;

976 
addr6
[
INET6_ADDRSTRLEN
];

977 
ö6_addr
 
ö6
;

978 
a·y≥
 
öë6_a·y≥
;

980 
sockaddr_ö
 
loˇœddr
, 
ªmaddr
;

982 
a·y≥
 *
≠
;

983 
rxq
, 
txq
, 
time_Àn
, 
ªå
, 
öode
;

985 i‡(
 r
 == 0)

988 
m‹e
[0] = '\0';

989 
num
 = 
	`ssˇnf
(
löe
,

991 &
d
, 
loˇl_addr
, &
loˇl_p‹t
, 
ªm_addr
, &
ªm_p‹t
, &
°©e
,

992 &
txq
, &
rxq
, &
timî_run
, &
time_Àn
, &
ªå
, &
uid
, &
timeout
, &
öode
, 
m‹e
);

994 i‡(
	`°æí
(
loˇl_addr
) > 8) {

995 #i‡
HAVE_AFINET6


996 
	`ssˇnf
(
loˇl_addr
, "%08X%08X%08X%08X",

997 &
ö6
.
s6_addr32
[0], &in6.s6_addr32[1],

998 &
ö6
.
s6_addr32
[2], &in6.s6_addr32[3]);

999 
	`öë_¡›
(
AF_INET6
, &
ö6
, 
addr6
, (addr6));

1000 
öë6_a·y≥
.
	`öput
(1, 
addr6
, (
sockaddr
 *Ë&
loˇœddr
);

1001 
	`ssˇnf
(
ªm_addr
, "%08X%08X%08X%08X",

1002 &
ö6
.
s6_addr32
[0], &in6.s6_addr32[1],

1003 &
ö6
.
s6_addr32
[2], &in6.s6_addr32[3]);

1004 
	`öë_¡›
(
AF_INET6
, &
ö6
, 
addr6
, (addr6));

1005 
öë6_a·y≥
.
	`öput
(1, 
addr6
, (
sockaddr
 *Ë&
ªmaddr
);

1006 
loˇœddr
.
sö6_Ámûy
 = 
AF_INET6
;

1007 
ªmaddr
.
sö6_Ámûy
 = 
AF_INET6
;

1010 
	`ssˇnf
(
loˇl_addr
, "%X",

1011 &((
sockaddr_ö
 *Ë&
loˇœddr
)->
sö_addr
.
s_addr
);

1012 
	`ssˇnf
(
ªm_addr
, "%X",

1013 &((
sockaddr_ö
 *Ë&
ªmaddr
)->
sö_addr
.
s_addr
);

1014 ((
sockaddr
 *Ë&
loˇœddr
)->
ß_Ámûy
 = 
AF_INET
;

1015 ((
sockaddr
 *Ë&
ªmaddr
)->
ß_Ámûy
 = 
AF_INET
;

1017 #i‡
HAVE_AFINET6


1018 i‡((
≠
 = 
	`gë_a‚ty≥
(
loˇœddr
.
sö6_Ámûy
)Ë=
NULL
) {

1019 
	`Ârötf
(
°dîr
, 
	`_
("√t°©: unsuµ‹ãdáddªs†Ámûy %d !\n"), 
loˇœddr
.
sö6_Ámûy
);

1023 i‡((
≠
 = 
	`gë_a‚ty≥
(
loˇœddr
.
sö_Ámûy
)Ë=
NULL
) {

1024 
	`Ârötf
(
°dîr
, 
	`_
("√t°©: unsuµ‹ãdáddªs†Ámûy %d !\n"), 
loˇœddr
.
sö_Ámûy
);

1029 i‡(!
Êag_›t
)

1030 
m‹e
[0] = '\0';

1032 i‡(
num
 < 10) {

1033 
	`Ârötf
(
°dîr
, 
	`_
("warning, got bogusÑawÜine.\n"));

1037 i‡(
Êag_Æl
 || (
	`nŸnuŒ
(
ªmaddr
Ë&& !
Êag_l°
) || (!notnull(remaddr) && flag_lst))

1039 
	`¢¥ötf
(
buf„r
, (buffer), "%s",

1040 
	`gë_¢ame
(
	`ht⁄s
(
loˇl_p‹t
), "raw",

1041 
Êag_nŸ
 & 
FLAG_NUM_PORT
));

1042 
	`ß„_°∫˝y
(
loˇl_addr
, 
≠
->
	`•röt
((
sockaddr
 *Ë&
loˇœddr
,

1043 
Êag_nŸ
), (
loˇl_addr
));

1044 i‡((
	`°æí
(
loˇl_addr
Ë+ såÀn(
buf„r
)) > 22)

1045 
loˇl_addr
[22 - 
	`°æí
(
buf„r
)] = '\0';

1046 
	`°rˇt
(
loˇl_addr
, ":");

1047 
	`°rˇt
(
loˇl_addr
, 
buf„r
);

1049 
	`¢¥ötf
(
buf„r
, (buffer), "%s",

1050 
	`gë_¢ame
(
	`ht⁄s
(
ªm_p‹t
), "øw", 
Êag_nŸ
 & 
FLAG_NUM_PORT
));

1051 
	`ß„_°∫˝y
(
ªm_addr
, 
≠
->
	`•röt
((
sockaddr
 *Ë&
ªmaddr
,

1052 
Êag_nŸ
), (
ªm_addr
));

1053 i‡((
	`°æí
(
ªm_addr
Ë+ såÀn(
buf„r
)) > 22)

1054 
ªm_addr
[22 - 
	`°æí
(
buf„r
)] = '\0';

1055 
	`°rˇt
(
ªm_addr
, ":");

1056 
	`°rˇt
(
ªm_addr
, 
buf„r
);

1058 
timîs
[0] = '\0';

1059 i‡(
Êag_›t
)

1060 
timî_run
) {

1062 
	`¢¥ötf
(
timîs
, —imîs), 
	`_
("of‡(0.00/%ld/%d)"), 
ªå
, 
timeout
);

1067 
	`¢¥ötf
(
timîs
, —imîs), 
	`_
("⁄%d (%2.2f/%ld/%d)"), 
timî_run
, (Ë
time_Àn
 / 100,

1068 
ªå
, 
timeout
);

1072 
	`¢¥ötf
(
timîs
, —imîs), 
	`_
("unkn-%d (%2.2f/%ld/%d)"),

1073 
timî_run
, (Ë
time_Àn
 / 100,

1074 
ªå
, 
timeout
);

1077 
	`¥ötf
("raw %6ld %6ld %-23s %-23s %-12d",

1078 
rxq
, 
txq
, 
loˇl_addr
, 
ªm_addr
, 
°©e
);

1080 
	`föish_this_⁄e
(
uid
,
öode
,
timîs
);

1082 
	}
}

1084 
	$øw_öfo
()

1086 
	`INFO_GUTS6
(
_PATH_PROCNET_RAW
, 
_PATH_PROCNET_RAW6
, "AF INET (raw)",

1087 
øw_do_⁄e
);

1088 
	}
}

1093 #i‡
HAVE_AFUNIX


1095 
	#HAS_INODE
 1

	)

1097 
	$unix_do_⁄e
(
ƒ
, c⁄° *
löe
)

1099 
has
 = 0;

1100 
∑th
[
MAXPATHLEN
], 
ss_Êags
[32];

1101 *
ss_¥Ÿo
, *
ss_°©e
, *
ss_ty≥
;

1102 
num
, 
°©e
, 
ty≥
, 
öode
;

1103 *
d
;

1104 
ªf˙t
, 
¥Ÿo
, 
Êags
;

1106 i‡(
ƒ
 == 0) {

1107 i‡(
	`°r°r
(
löe
, "Inode"))

1108 
has
 |
HAS_INODE
;

1111 
∑th
[0] = '\0';

1112 
num
 = 
	`ssˇnf
(
löe
, "%p: %lX %lX %lX %X %X %d %s",

1113 &
d
, &
ªf˙t
, &
¥Ÿo
, &
Êags
, &
ty≥
, &
°©e
, &
öode
, 
∑th
);

1114 i‡(
num
 < 6) {

1115 
	`Ârötf
(
°dîr
, 
	`_
("warning, got bogus unixÜine.\n"));

1118 i‡(!(
has
 & 
HAS_INODE
))

1119 
	`¢¥ötf
(
∑th
,’©h),"%d",
öode
);

1121 i‡(!
Êag_Æl
) {

1122 i‡((
°©e
 =
SS_UNCONNECTED
Ë&& (
Êags
 & 
SO_ACCEPTCON
)) {

1123 i‡(!
Êag_l°
)

1126 i‡(
Êag_l°
)

1131 
¥Ÿo
) {

1133 
ss_¥Ÿo
 = "unix";

1137 
ss_¥Ÿo
 = "??";

1140 
ty≥
) {

1141 
SOCK_STREAM
:

1142 
ss_ty≥
 = 
	`_
("STREAM");

1145 
SOCK_DGRAM
:

1146 
ss_ty≥
 = 
	`_
("DGRAM");

1149 
SOCK_RAW
:

1150 
ss_ty≥
 = 
	`_
("RAW");

1153 
SOCK_RDM
:

1154 
ss_ty≥
 = 
	`_
("RDM");

1157 
SOCK_SEQPACKET
:

1158 
ss_ty≥
 = 
	`_
("SEQPACKET");

1162 
ss_ty≥
 = 
	`_
("UNKNOWN");

1165 
°©e
) {

1166 
SS_FREE
:

1167 
ss_°©e
 = 
	`_
("FREE");

1170 
SS_UNCONNECTED
:

1175 i‡(
Êags
 & 
SO_ACCEPTCON
) {

1176 
ss_°©e
 = 
	`_
("LISTENING");

1178 
ss_°©e
 = "";

1182 
SS_CONNECTING
:

1183 
ss_°©e
 = 
	`_
("CONNECTING");

1186 
SS_CONNECTED
:

1187 
ss_°©e
 = 
	`_
("CONNECTED");

1190 
SS_DISCONNECTING
:

1191 
ss_°©e
 = 
	`_
("DISCONNECTING");

1195 
ss_°©e
 = 
	`_
("UNKNOWN");

1198 
	`°r˝y
(
ss_Êags
, "[ ");

1199 i‡(
Êags
 & 
SO_ACCEPTCON
)

1200 
	`°rˇt
(
ss_Êags
, "ACC ");

1201 i‡(
Êags
 & 
SO_WAITDATA
)

1202 
	`°rˇt
(
ss_Êags
, "W ");

1203 i‡(
Êags
 & 
SO_NOSPACE
)

1204 
	`°rˇt
(
ss_Êags
, "N ");

1206 
	`°rˇt
(
ss_Êags
, "]");

1208 
	`¥ötf
("%-5s %-6ld %-11s %-10s %-13s ",

1209 
ss_¥Ÿo
, 
ªf˙t
, 
ss_Êags
, 
ss_ty≥
, 
ss_°©e
);

1210 i‡(
has
 & 
HAS_INODE
)

1211 
	`¥ötf
("%-6d ",
öode
);

1213 
	`¥ötf
("- ");

1214 i‡(
Êag_¥g
)

1215 
	`¥ötf
("%-" 
PROGNAME_WIDTHs
 "s",(
has
 & 
HAS_INODE
?
	`¥g_ˇche_gë
(
öode
):"-"));

1216 
	`puts
(
∑th
);

1217 
	}
}

1219 
	$unix_öfo
()

1222 
	`¥ötf
(
	`_
("Active UNIX domain sockets "));

1223 i‡(
Êag_Æl
)

1224 
	`¥ötf
(
	`_
("(serversándÉstablished)"));

1226 i‡(
Êag_l°
)

1227 
	`¥ötf
(
	`_
("(only servers)"));

1229 
	`¥ötf
(
	`_
("(w/o servers)"));

1232 
	`¥ötf
(
	`_
("\nProto RefCnt Flags Type State I-Node"));

1233 
	`¥öt_¥og«me_b™√r
();

1234 
	`¥ötf
(
	`_
(" Path\n"));

1237 
	`INFO_GUTS
(
_PATH_PROCNET_UNIX
, "AF UNIX", 
unix_do_⁄e
);

1239 
	}
}

1243 #i‡
HAVE_AFAX25


1244 
	$ax25_öfo
()

1246 
FILE
 *
f
;

1247 
buf„r
[256], 
buf
[16];

1248 *
§c
, *
d°
, *
dev
, *
p
;

1249 
°
, 
vs
, 
vr
, 
£ndq
, 
ªcvq
, 
ªt
;

1250 
√w
 = -1;

1251 *
ax25_°©e
[5] =

1253 
	`N_
("LISTENING"),

1254 
	`N_
("SABM SENT"),

1255 
	`N_
("DISC SENT"),

1256 
	`N_
("ESTABLISHED"),

1257 
	`N_
("RECOVERY")

1259 i‡(!(
f
 = 
	`f›í
(
_PATH_PROCNET_AX25
, "r"))) {

1260 i‡(
î∫o
 !
ENOENT
) {

1261 
	`≥º‹
(
_PATH_PROCNET_AX25
);

1264 i‡(
Êag_¨g
 || 
Êag_vî
)

1265 
	`ESYSNOT
("netstat", "AF AX25");

1266 i‡(
Êag_¨g
)

1271 
	`¥ötf
(
	`_
("Active AX.25 sockets\n"));

1272 
	`¥ötf
(
	`_
("Dest Source Device State Vr/Vs Send-Q Recv-Q\n"));

1273 
	`fgës
(
buf„r
, 256, 
f
)) {

1274 i‡(
√w
 == -1) {

1275 i‡(!
	`°∫cmp
(
buf„r
, "dest_addr", 9)) {

1276 
√w
 = 0;

1279 
√w
 = 1;

1285 
£ndq
 = 0;

1286 
ªcvq
 = 0;

1287 i‡(
√w
 == 0) {

1288 
d°
 = 
buf„r
;

1289 
§c
 = 
buf„r
 + 10;

1290 
d°
[9] = 0;

1291 
§c
[9] = 0;

1292 
ªt
 = 
	`ssˇnf
(
buf„r
 + 20, "%s %d %d %d %*d %*d/%*d %*d/%*d %*d/%*d %*d/%*d %*d/%*d %*d %*d %*d %d %d %*d",

1293 
buf
, &
°
, &
vs
, &
vr
, &
£ndq
, &
ªcvq
);

1294 i‡(
ªt
 != 4 &&Ñet != 6) {

1295 
	`¥ötf
(
	`_
("ProbÀmÑódög d©®‰om %s\n"), 
_PATH_PROCNET_AX25
);

1298 
dev
 = 
buf
;

1300 
p
 = 
buf„r
;

1301 *
p
 != ' ')Ö++;

1302 
p
++;

1303 
dev
 = 
p
;

1304 *
p
 != ' ')Ö++;

1305 *
p
++ = 0;

1306 
§c
 = 
p
;

1307 *
p
 != ' ')Ö++;

1308 *
p
++ = 0;

1309 
d°
 = 
p
;

1310 *
p
 != ' ')Ö++;

1311 *
p
++ = 0;

1312 
ªt
 = 
	`ssˇnf
(
p
, "%d %d %d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %d %d %*d",

1313 &
°
, &
vs
, &
vr
, &
£ndq
, &
ªcvq
);

1314 i‡(
ªt
 != 3 &&Ñet != 5) {

1315 
	`¥ötf
(
	`_
("¥obÀmÑódög d©®‰om %s\n"), 
_PATH_PROCNET_AX25
);

1322 
p
 = 
d°
;

1323 *
p
 && *p != ',')Ö++;

1324 *
p
 = 0;

1326 
	`¥ötf
("%-9s %-9s %-6s %-11s %03d/%03d %-6d %-6d\n",

1327 
d°
, 
§c
,

1328 
dev
,

1329 
	`_
(
ax25_°©e
[
°
]),

1330 
vr
, 
vs
, 
£ndq
, 
ªcvq
);

1332 
	`f˛o£
(
f
);

1334 
	}
}

1338 #i‡
HAVE_AFIPX


1339 
	$ùx_öfo
()

1341 
FILE
 *
f
;

1342 
buf
[256];

1343 
txq
, 
rxq
;

1344 
°©e
;

1345 
uid
;

1346 *
°
;

1347 
nc
;

1348 
a·y≥
 *
≠
;

1349 
∑sswd
 *
pw
;

1350 
ßd
[50], 
dad
[50];

1351 
sockaddr
 
ß
;

1352 
•‹t
 = 0, 
dp‹t
 = 0;

1354 i‡(!(
f
 = 
	`f›í
(
_PATH_PROCNET_IPX
, "r"))) {

1355 i‡(
î∫o
 !
ENOENT
) {

1356 
	`≥º‹
(
_PATH_PROCNET_IPX
);

1359 i‡(
Êag_¨g
 || 
Êag_vî
)

1360 
	`ESYSNOT
("netstat", "AF IPX");

1361 i‡(
Êag_¨g
)

1366 
	`¥ötf
(
	`_
("Active IPX sockets\nProto Recv-Q Send-Q Local Address Foreign Address State"));

1367 i‡(
Êag_exp
 > 1)

1368 
	`¥ötf
(
	`_
(" User"));

1369 
	`¥ötf
("\n");

1370 i‡((
≠
 = 
	`gë_a‚ty≥
(
AF_IPX
)Ë=
NULL
) {

1371 
	`EINTERN
("netstat.c", "AF_IPX missing");

1374 
	`fgës
(
buf
, 255, 
f
);

1376 
	`fgës
(
buf
, 255, 
f
Ë!
NULL
) {

1377 
	`ssˇnf
(
buf
, "%s %s %lX %lX %d %d",

1378 
ßd
, 
dad
, &
txq
, &
rxq
, &
°©e
, &
uid
);

1379 i‡((
°
 = 
	`rödex
(
ßd
, ':'))) {

1380 *
°
++ = '\0';

1381 
	`ssˇnf
(
°
, "%X", &
•‹t
);

1382 
•‹t
 = 
	`¡ohs
(sport);

1384 
	`EINTERN
("√t°©.c", 
_PATH_PROCNET_IPX
 " sport formatÉrror");

1387 
nc
 = 0;

1388 i‡(
	`°rcmp
(
dad
, "Not_Connected") != 0) {

1389 i‡((
°
 = 
	`rödex
(
dad
, ':'))) {

1390 *
°
++ = '\0';

1391 
	`ssˇnf
(
°
, "%X", &
dp‹t
);

1392 
dp‹t
 = 
	`¡ohs
(dport);

1394 
	`EINTERN
("√t°©.c", 
_PATH_PROCNET_IPX
 " dport formatÉrror");

1398 
nc
 = 1;

1400 
°©e
) {

1401 
TCP_ESTABLISHED
:

1402 
°
 = 
	`_
("ESTAB");

1405 
TCP_CLOSE
:

1406 
°
 = "";

1410 
°
 = 
	`_
("UNK.");

1415 (Ë
≠
->
	`öput
(4, 
ßd
, &
ß
);

1416 
	`ß„_°∫˝y
(
buf
, 
≠
->
	`•röt
(&
ß
, 
Êag_nŸ
), (buf));

1417 
	`¢¥ötf
(
ßd
, (ßd), "%s:%04X", 
buf
, 
•‹t
);

1419 i‡(!
nc
) {

1421 (Ë
≠
->
	`öput
(4, 
dad
, &
ß
);

1422 
	`ß„_°∫˝y
(
buf
, 
≠
->
	`•röt
(&
ß
, 
Êag_nŸ
), (buf));

1423 
	`¢¥ötf
(
dad
, (dad), "%s:%04X", 
buf
, 
dp‹t
);

1425 
	`°r˝y
(
dad
, "-");

1427 
	`¥ötf
("IPX %6ld %6ld %-26†%-26†%-5s", 
txq
, 
rxq
, 
ßd
, 
dad
, 
°
);

1428 i‡(
Êag_exp
 > 1) {

1429 i‡(!(
Êag_nŸ
 & 
FLAG_NUM_USER
Ë&& ((
pw
 = 
	`gëpwuid
(
uid
)Ë!
NULL
))

1430 
	`¥ötf
(" %-10s", 
pw
->
pw_«me
);

1432 
	`¥ötf
(" %-10d", 
uid
);

1434 
	`¥ötf
("\n");

1436 
	`f˛o£
(
f
);

1438 
	}
}

1441 
	$iÁ˚_öfo
()

1443 i‡(
skfd
 < 0) {

1444 i‡((
skfd
 = 
	`sockës_›í
(0)) < 0) {

1445 
	`≥º‹
("socket");

1446 
	`exô
(1);

1448 
	`¥ötf
(
	`_
("Kernel InterfaceÅable\n"));

1450 i‡(
Êag_exp
 < 2) {

1451 
i„_sh‹t
 = 1;

1452 
	`¥ötf
(
	`_
("Iface MTU Met RX-OK RX-ERR RX-DRP RX-OVR TX-OK TX-ERR TX-DRP TX-OVR Flg\n"));

1455 i‡(
	`f‹_Æl_öãrÁ˚s
(
do_if_¥öt
, &
Êag_Æl
) < 0) {

1456 
	`≥º‹
(
	`_
("missing interface information"));

1457 
	`exô
(1);

1459 i‡(
Êag_˙t
)

1460 
	`‰ì_öãrÁ˚_li°
();

1462 
	`˛o£
(
skfd
);

1463 
skfd
 = -1;

1467 
	}
}

1470 
	$vîsi⁄
()

1472 
	`¥ötf
("%s\n%s\n%s\n%s\n", 
Rñó£
, 
Vîsi⁄
, 
Sig«tuª
, 
Fótuªs
);

1473 
	`exô
(
E_VERSION
);

1474 
	}
}

1477 
	$ußge
()

1479 
	`Ârötf
(
°dîr
, 
	`_
("usage:Çetstat [-veenNcCF] [<Af>] -rÇetstat {-V|--version|-h|--help}\n"));

1480 
	`Ârötf
(
°dîr
, 
	`_
("Çetstat [-vnNcaeol] [<Socket> ...]\n"));

1481 
	`Ârötf
(
°dîr
, 
	`_
("Çetstat { [-veenNac] -i | [-cnNe] -M | -s }\n\n"));

1483 
	`Ârötf
(
°dîr
, 
	`_
(" -r, --route displayÑoutingÅable\n"));

1484 
	`Ârötf
(
°dîr
, 
	`_
(" -i, --interfaces display interfaceÅable\n"));

1485 
	`Ârötf
(
°dîr
, 
	`_
(" -g, --groups display multicast group memberships\n"));

1486 
	`Ârötf
(
°dîr
, 
	`_
(" -s, --statistics displayÇetworking statistics (like SNMP)\n"));

1487 #i‡
HAVE_FW_MASQUERADE


1488 
	`Ârötf
(
°dîr
, 
	`_
(" -M, --masquerade display masqueraded connections\n\n"));

1490 
	`Ârötf
(
°dîr
, 
	`_
(" -v, --verbose be verbose\n"));

1491 
	`Ârötf
(
°dîr
, 
	`_
(" -n, --numeric don'tÑesolveÇames\n"));

1492 
	`Ârötf
(
°dîr
, 
	`_
(" --numeric-hosts don'tÑesolve hostÇames\n"));

1493 
	`Ârötf
(
°dîr
, 
	`_
(" --numeric-ports don'tÑesolveÖortÇames\n"));

1494 
	`Ârötf
(
°dîr
, 
	`_
(" --numeric-users don'tÑesolve userÇames\n"));

1495 
	`Ârötf
(
°dîr
, 
	`_
(" -N, --symbolicÑesolve hardwareÇames\n"));

1496 
	`Ârötf
(
°dîr
, 
	`_
(" -e, --extend display other/more information\n"));

1497 
	`Ârötf
(
°dîr
, 
	`_
(" -p, --programs display PID/ProgramÇame for sockets\n"));

1498 
	`Ârötf
(
°dîr
, 
	`_
(" -c, --continuous continuousÜisting\n\n"));

1499 
	`Ârötf
(
°dîr
, 
	`_
(" -l, --listening displayÜistening server sockets\n"));

1500 
	`Ârötf
(
°dîr
, 
	`_
(" -a, --all, --listening displayáll sockets (default: connected)\n"));

1501 
	`Ârötf
(
°dîr
, 
	`_
(" -o, --timers displayÅimers\n"));

1502 
	`Ârötf
(
°dîr
, 
	`_
(" -F, --fib display Forwarding Information Base (default)\n"));

1503 
	`Ârötf
(
°dîr
, 
	`_
(" -C, --cache displayÑouting cache instead of FIB\n\n"));

1505 
	`Ârötf
(
°dîr
, 
	`_
(" <Socket>={-t|--tcp} {-u|--udp} {-w|--raw} {-x|--unix} --ax25 --ipx --netrom\n"));

1506 
	`Ârötf
(
°dîr
, 
	`_
(" <AF>=U£ '-A <af>' o∏'--<af>'; deÁu…: %s\n"), 
DFLT_AF
);

1507 
	`Ârötf
(
°dîr
, 
	`_
(" List ofÖossibleáddress families (which supportÑouting):\n"));

1508 
	`¥öt_aÊi°
(1);

1509 
	`exô
(
E_USAGE
);

1510 
	}
}

1513 
	gmaö


1514 (
	g¨gc
, *
	g¨gv
[]) {

1515 
	gi
;

1516 
	gl›
;

1517 
›ti⁄
 
	gl⁄g›ts
[] =

1519 
AFTRANS_OPTS
,

1524 #i‡
HAVE_FW_MASQUERADE


1548 {
NULL
, 0, 0, 0}

1551 #i‡
I18N


1552 
£éoˇÀ
 (
LC_ALL
, "");

1553 
bödãxtdomaö
("net-tools", "/usr/share/locale");

1554 
ãxtdomaö
("net-tools");

1556 
gërouã_öô
();

1558 
	ga‚ame
[0] = '\0';

1559 (
	gi
 = 
gë›t_l⁄g
(
¨gc
, 
¨gv
, "MCFA:acdegphöN‹°uVv?wxl", 
l⁄g›ts
, &
l›
)Ë!
EOF
)

1560 
i
) {

1564 i‡(
l›
 < 0 ||Ü› >
AFTRANS_CNT
) {

1565 
EINTERN
("netstat.c", "longopts 1Ñange");

1568 i‡(
a·øns_›t
(
l⁄g›ts
[
l›
].
«me
))

1569 
exô
(1);

1572 i‡(
a·øns_›t
(
›èrg
))

1573 
exô
(1);

1576 
Êag_mas
++;

1579 
Êag_Æl
++;

1582 
Êag_l°
++;

1585 
Êag_˙t
++;

1589 
Êag_deb
++;

1592 
Êag_igmp
++;

1595 
Êag_exp
++;

1598 
Êag_¥g
++;

1601 
Êag_öt
++;

1604 
Êag_nŸ
 |
FLAG_NUM
;

1607 
Êag_nŸ
 |
FLAG_NUM_HOST
;

1610 
Êag_nŸ
 |
FLAG_NUM_PORT
;

1613 
Êag_nŸ
 |
FLAG_NUM_USER
;

1616 
Êag_nŸ
 |
FLAG_SYM
;

1619 
Êag_cf
 |
FLAG_CACHE
;

1622 
Êag_cf
 |
FLAG_FIB
;

1625 
Êag_›t
++;

1628 
vîsi⁄
();

1631 
Êag_vî
 |
FLAG_VERBOSE
;

1634 
Êag_rou
++;

1638 
Êag_t˝
++;

1642 
Êag_udp
++;

1645 
Êag_øw
++;

1648 i‡(
a·øns_›t
("unix"))

1649 
exô
(1);

1653 
ußge
();

1655 
Êag_°a
++;

1658 i‡(
	gÊag_öt
 + 
	gÊag_rou
 + 
	gÊag_mas
 + 
	gÊag_°a
 > 1)

1659 
ußge
();

1661 i‡((
	gÊag_öë
 || 
	gÊag_öë6
 || 
	gÊag_°a
Ë&& !(
	gÊag_t˝
 || 
	gÊag_udp
 || 
	gÊag_øw
))

1662 
	gÊag_t˝
 = 
Êag_udp
 = 
Êag_øw
 = 1;

1664 i‡((
	gÊag_t˝
 || 
	gÊag_udp
 || 
	gÊag_øw
 || 
	gÊag_igmp
Ë&& !(
	gÊag_öë
 || 
	gÊag_öë6
))

1665 
	gÊag_öë
 = 
Êag_öë6
 = 1;

1667 
	gÊag_¨g
 = 
Êag_t˝
 + 
Êag_udp
 + 
Êag_øw
 + 
Êag_unx
 + 
Êag_ùx


1668 + 
Êag_ax25
 + 
Êag_√åom
 + 
Êag_igmp
 + 
Êag_x25
;

1670 i‡(
	gÊag_mas
) {

1671 #i‡
HAVE_FW_MASQUERADE
 && 
HAVE_AFINET


1672 #i‡
MORE_THAN_ONE_MASQ_AF


1673 i‡(!
	ga‚ame
[0])

1674 
°r˝y
(
a‚ame
, 
DFLT_AF
);

1677 
	gi
 = 
ù_masq_öfo
(
Êag_nŸ
 & 
FLAG_NUM_HOST
,

1678 
Êag_nŸ
 & 
FLAG_NUM_PORT
, 
Êag_exp
);

1679 i‡(
	gi
 || !
	gÊag_˙t
)

1681 
¶ìp
(1);

1684 
ENOSUPP
("netstat.c", "FW_MASQUERADE");

1685 
	gi
 = -1;

1687  (
	gi
);

1690 i‡(
	gÊag_°a
) {

1691 
öôèb
();

1692 
∑r£¢mp
(
Êag_øw
, 
Êag_t˝
, 
Êag_udp
);

1693 
exô
(0);

1696 i‡(
	gÊag_rou
) {

1697 
	g›ti⁄s
 = 0;

1699 i‡(!
	ga‚ame
[0])

1700 
°r˝y
(
a‚ame
, 
DFLT_AF
);

1702 i‡(
	gÊag_exp
 == 2)

1703 
Êag_exp
 = 1;

1704 i‡(
	gÊag_exp
 == 1)

1705 
Êag_exp
 = 2;

1707 
	g›ti⁄s
 = (
Êag_exp
 & 
FLAG_EXT
Ë| 
Êag_nŸ
 | 
Êag_cf
 | 
Êag_vî
;

1708 i‡(!
	gÊag_cf
)

1709 
	g›ti⁄s
 |
FLAG_FIB
;

1712 
	gi
 = 
rouã_öfo
(
a‚ame
, 
›ti⁄s
);

1713 i‡(
	gi
 || !
	gÊag_˙t
)

1715 
¶ìp
(1);

1717  (
	gi
);

1719 i‡(
	gÊag_öt
) {

1721 
	gi
 = 
iÁ˚_öfo
();

1722 i‡(!
	gÊag_˙t
 || 
	gi
)

1724 
¶ìp
(1);

1726  (
	gi
);

1729 i‡(!
	gÊag_¨g
 || 
	gÊag_t˝
 || 
	gÊag_udp
 || 
	gÊag_øw
) {

1730 #i‡
HAVE_AFINET


1731 
¥g_ˇche_lﬂd
();

1732 
¥ötf
(
_
("Active Internet connections "));

1734 i‡(
	gÊag_Æl
)

1735 
¥ötf
(
_
("(serversándÉstablished)"));

1737 i‡(
	gÊag_l°
)

1738 
¥ötf
(
_
("(only servers)"));

1740 
¥ötf
(
_
("(w/o servers)"));

1742 
¥ötf
(
_
("\nProto Recv-Q Send-Q Local Address Foreign Address State "));

1743 i‡(
	gÊag_exp
 > 1)

1744 
¥ötf
(
_
(" User Inode "));

1745 
¥öt_¥og«me_b™√r
();

1746 i‡(
	gÊag_›t
)

1747 
¥ötf
(
_
(" Timer"));

1748 
¥ötf
("\n");

1750 i‡(
	gÊag_¨g
) {

1751 
	gi
 = 1;

1752 
ENOSUPP
("netstat", "AF INET");

1756 #i‡
HAVE_AFINET


1757 i‡(!
	gÊag_¨g
 || 
	gÊag_t˝
) {

1758 
	gi
 = 
t˝_öfo
();

1759 i‡(
	gi
)

1760  (
	gi
);

1762 i‡(!
	gÊag_¨g
 || 
	gÊag_udp
) {

1763 
	gi
 = 
udp_öfo
();

1764 i‡(
	gi
)

1765  (
	gi
);

1767 i‡(!
	gÊag_¨g
 || 
	gÊag_øw
) {

1768 
	gi
 = 
øw_öfo
();

1769 i‡(
	gi
)

1770  (
	gi
);

1773 i‡(
	gÊag_igmp
) {

1774 #i‡
HAVE_AFINET6


1775 
¥ötf
( "IPv6/");

1777 
¥ötf
–
_
("IPv4 Group Memberships\n") );

1778 
¥ötf
–
_
("Interface RefCnt Group\n") );

1779 
¥ötf
( "--------------- ------ ---------------------\n" );

1780 
	gi
 = 
igmp_öfo
();

1781 i‡(
	gi
)

1782  (
	gi
);

1786 i‡(!
	gÊag_¨g
 || 
	gÊag_unx
) {

1787 #i‡
HAVE_AFUNIX


1788 
¥g_ˇche_lﬂd
();

1789 
	gi
 = 
unix_öfo
();

1790 i‡(
	gi
)

1791  (
	gi
);

1793 i‡(
	gÊag_¨g
) {

1794 
	gi
 = 1;

1795 
ENOSUPP
("netstat", "AF UNIX");

1799 i‡(!
	gÊag_¨g
 || 
	gÊag_ùx
) {

1800 #i‡
HAVE_AFIPX


1801 
	gi
 = 
ùx_öfo
();

1802 i‡(
	gi
)

1803  (
	gi
);

1805 i‡(
	gÊag_¨g
) {

1806 
	gi
 = 1;

1807 
ENOSUPP
("netstat", "AF IPX");

1811 i‡(!
	gÊag_¨g
 || 
	gÊag_ax25
) {

1812 #i‡
HAVE_AFAX25


1813 
	gi
 = 
ax25_öfo
();

1814 i‡(
	gi
)

1815  (
	gi
);

1817 i‡(
	gÊag_¨g
) {

1818 
	gi
 = 1;

1819 
ENOSUPP
("netstat", "AF AX25");

1823 if(!
	gÊag_¨g
 || 
	gÊag_x25
) {

1824 #i‡
HAVE_AFX25


1826 
	gi
 = 
x25_öfo
();

1827 i‡(
	gi
)

1828 (
	gi
);

1830 i‡(
	gÊag_¨g
) {

1831 
	gi
 = 1;

1832 
ENOSUPP
("netstat", "AF X25");

1836 i‡(!
	gÊag_¨g
 || 
	gÊag_√åom
) {

1837 #i‡
HAVE_AFNETROM


1838 
	gi
 = 
√åom_öfo
();

1839 i‡(
	gi
)

1840  (
	gi
);

1842 i‡(
	gÊag_¨g
) {

1843 
	gi
 = 1;

1844 
ENOSUPP
("netstat", "AF NETROM");

1848 i‡(!
	gÊag_˙t
 || 
	gi
)

1850 
¶ìp
(1);

1851 
¥g_ˇche_˛ór
();

1853  (
	gi
);

	@net-tools-1.60/plipconfig.c

32 
	~<°dio.h
>

33 
	~<°dlib.h
>

34 
	~<°rög.h
>

35 
	~<uni°d.h
>

36 
	~<sys/sockë.h
>

37 
	~<sys/io˘l.h
>

38 
	~<√t/if.h
>

39 
	~<löux/if_∂ù.h
>

41 
	~"c⁄fig.h
"

42 
	~"öé.h
"

43 
	~"√t-suµ‹t.h
"

44 
	~"vîsi⁄.h
"

46 
	g›t_a
 = 0;

47 
	g›t_i
 = 0;

48 
	g›t_v
 = 0;

49 
	gskfd
 = -1;

51 
i‰eq
 
	gi‰
;

52 
∂ùc⁄f
 *
	g∂ù
;

54 *
	gRñó£
 = 
RELEASE
,

55 *
	gVîsi⁄
 = "plipconfig 0.2",

56 *
	gSig«tuª
 = "John Paul Morrison, Alan CoxÉtál.";

58 
	$vîsi⁄
()

60 
	`¥ötf
("%s\n%s\n%s\n", 
Rñó£
, 
Vîsi⁄
, 
Sig«tuª
);

61 
	`exô
(
E_VERSION
);

62 
	}
}

64 
	$ußge
()

66 
	`Ârötf
(
°dîr
, 
	`_
("Usage:Ölipconfig [-a] [-i] [-v] interface\n"));

67 
	`Ârötf
(
°dîr
, 
	`_
(" [nibble NN] [trigger NN]\n"));

68 
	`Ârötf
(
°dîr
, 
	`_
("Ölipconfig -V | --version\n"));

69 
	`exô
(-1);

70 
	}
}

72 
	$¥öt_∂ù
()

74 
	`¥ötf
(
	`_
("%s\äibbÀ %luÅriggî %lu\n"), 
i‰
.
i‰_«me
, 
∂ù
->
nibbÀ
,Ölù->
åiggî
);

75 
	}
}

77 
	$maö
(
¨gc
, **
¨gv
)

79 
ªt
 = 0;

80 **
•p
;

82 #i‡
I18N


83 
	`£éoˇÀ
 (
LC_ALL
, "");

84 
	`bödãxtdomaö
("net-tools", "/usr/share/locale");

85 
	`ãxtdomaö
("net-tools");

88 i‡((
skfd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0)) < 0) {

89 
	`≥º‹
("socket");

90 
	`exô
(-1);

93 
¨gc
--;

94 
¨gv
++;

95 
¨gv
[0] && *argv[0] == '-') {

96 i‡(!
	`°rcmp
(*
¨gv
, "-a"))

97 
›t_a
 = 1;

98 i‡(!
	`°rcmp
(*
¨gv
, "-v"))

99 
›t_v
 = 1;

100 i‡(!
	`°rcmp
(*
¨gv
, "-V") || !strcmp(*argv, "--version"))

101 
	`vîsi⁄
();

102 
¨gv
++;

103 
¨gc
--;

106 i‡(
¨gc
 == 0)

107 
	`ußge
();

109 
•p
 = 
¨gv
;

110 
	`°∫˝y
(
i‰
.
i‰_«me
, *
•p
++, 
IFNAMSIZ
);

111 
∂ù
=(
∂ùc⁄f
 *)&
i‰
.
i‰_d©a
;

113 
∂ù
->
pcmd
 = 
PLIP_GET_TIMEOUT
;

114 i‡(
	`io˘l
(
skfd
, 
SIOCDEVPLIP
, &
i‰
) < 0) {

115 
	`≥º‹
("ioctl");

116 
	`exô
(-1);

118 i‡(*
•p
 =(*Ë
NULL
) {

119 
	`¥öt_∂ù
();

120 (Ë
	`˛o£
(
skfd
);

121 
	`exô
(0);

123 *
•p
 !(*Ë
NULL
) {

124 i‡(!
	`°rcmp
(*
•p
, "nibble")) {

125 i‡(*++
•p
 =
NULL
)

126 
	`ußge
();

127 
∂ù
->
nibbÀ
 = 
	`©oi
(*
•p
);

128 
•p
++;

131 i‡(!
	`°rcmp
(*
•p
, "trigger")) {

132 i‡(*++
•p
 =
NULL
)

133 
	`ußge
();

134 
∂ù
->
åiggî
 = 
	`©oi
(*
•p
);

135 
•p
++;

138 
	`ußge
();

141 
∂ù
->
pcmd
 = 
PLIP_SET_TIMEOUT
;

142 i‡(
	`io˘l
(
skfd
, 
SIOCDEVPLIP
, &
i‰
) < 0)

143 
	`≥º‹
("ioctl");

145 
	`¥öt_∂ù
();

148 (Ë
	`˛o£
(
skfd
);

150  (
ªt
);

151 
	}
}

	@net-tools-1.60/rarp.c

20 
	~<sys/ty≥s.h
>

21 
	~<sys/sockë.h
>

22 
	~<sys/io˘l.h
>

23 
	~<√töë/ö.h
>

24 
	~<¨∑/öë.h
>

25 
	~<√t/if.h
>

26 
	~<√t/if_¨p.h
>

27 
	~<°dlib.h
>

28 
	~<°dio.h
>

29 
	~<î∫o.h
>

30 
	~<f˙é.h
>

31 
	~<√tdb.h
>

32 
	~<°rög.h
>

33 
	~<uni°d.h
>

34 
	~<gë›t.h
>

36 
	#DFLT_HW
 "ëhî"

	)

38 
	~"c⁄fig.h
"

39 
	~"öé.h
"

40 
	~"√t-suµ‹t.h
"

41 
	~"vîsi⁄.h
"

42 
	~"∑th«mes.h
"

44 
	gno_øΩ_mesßge
[] = 
N_
("This kernel doesÇot support RARP.\n");

46 
	gvîsi⁄_°rög
[] = 
RELEASE
 "\nrarp 1.03 (2001-04-04)\n";

48 
hwty≥
 *
	gh¨dw¨e
 = 
NULL
;

51 
	$øΩ_dñëe
(
fd
, 
ho°ít
 *
hp
)

53 
¨¥eq
 
ªq
;

54 
sockaddr_ö
 *
si
;

55 
found
 = 0;

56 **
addr
;

59 
addr
 = 
hp
->
h_addr_li°
; *add∏!
NULL
;áddr++) {

60 
	`mem£t
((*Ë&
ªq
, 0, (req));

61 
si
 = (
sockaddr_ö
 *Ë&
ªq
.
¨p_∑
;

62 
si
->
sö_Ámûy
 = 
hp
->
h_addπy≥
;

63 
	`mem˝y
((*Ë&
si
->
sö_addr
, *
addr
, 
hp
->
h_Àngth
);

66 i‡(
	`io˘l
(
fd
, 
SIOCDRARP
, &
ªq
) == 0) {

67 
found
++;

69 
î∫o
) {

70 
ENXIO
:

72 
ENODEV
:

73 
	`Âuts
(
	`_
(
no_øΩ_mesßge
), 
°dîr
);

76 
	`≥º‹
("SIOCDRARP");

82 i‡(
found
 == 0)

83 
	`¥ötf
(
	`_
("nÿRARPÉ¡ry f‹ %s.\n"), 
hp
->
h_«me
);

85 
	}
}

89 
	$øΩ_£t
(
fd
, 
ho°ít
 *
hp
, *
hw_addr
)

91 
¨¥eq
 
ªq
;

92 
sockaddr_ö
 *
si
;

93 
sockaddr
 
ßp
;

95 i‡(
h¨dw¨e
->
	`öput
(
hw_addr
, &
ßp
)) {

96 
	`Ârötf
(
°dîr
, 
	`_
("%s: bad h¨dw¨êaddªss\n"), 
hw_addr
);

100 
	`mem£t
((*Ë&
ªq
, 0, (req));

101 
si
 = (
sockaddr_ö
 *Ë&
ªq
.
¨p_∑
;

102 
si
->
sö_Ámûy
 = 
hp
->
h_addπy≥
;

103 
	`mem˝y
((*Ë&
si
->
sö_addr
, 
hp
->
h_addr_li°
[0], hp->
h_Àngth
);

104 
ªq
.
¨p_ha
.
ß_Ámûy
 = 
h¨dw¨e
->
ty≥
;

105 
	`mem˝y
(
ªq
.
¨p_ha
.
ß_d©a
, 
ßp
.ß_d©a, 
h¨dw¨e
->
Æí
);

108 i‡(
	`io˘l
(
fd
, 
SIOCSRARP
, &
ªq
) < 0) {

109 i‡(
î∫o
 =
ENODEV
)

110 
	`Âuts
(
	`_
(
no_øΩ_mesßge
), 
°dîr
);

112 
	`≥º‹
("SIOCSRARP");

116 
	}
}

119 
	$øΩ_fûe
(
fd
, c⁄° *
«me
)

121 
buff
[1024];

122 *
ho°
, *
addr
;

123 
löír
;

124 
FILE
 *
Â
;

125 
ho°ít
 *
hp
;

127 i‡((
Â
 = 
	`f›í
(
«me
, "r")Ë=
NULL
) {

128 
	`Ârötf
(
°dîr
, 
	`_
("øΩ: c™nŸ o≥¿fûê%s:%s.\n"), 
«me
, 
	`°ªº‹
(
î∫o
));

132 
löír
 = 0;

133 
	`fgës
(
buff
, (buff), 
Â
)) {

134 ++
löír
;

135 i‡(
buff
[0] == '#' || buff[0] == '\0')

137 i‡((
addr
 = 
	`°πok
(
buff
, "\¿\t")Ë=
NULL
)

139 i‡((
ho°
 = 
	`°πok
(
NULL
, "\n \t")) == NULL) {

140 
	`Ârötf
(
°dîr
, 
	`_
("øΩ: f‹m©Éº‹áà%s:%u\n"), 
«me
, 
löír
);

143 i‡((
hp
 = 
	`gëho°by«me
(
ho°
)Ë=
NULL
) {

144 
	`Ârötf
(
°dîr
, 
	`_
("øΩ: %s: unknow¿ho°\n"), 
ho°
);

146 i‡(
	`øΩ_£t
(
fd
, 
hp
, 
addr
) != 0) {

147 
	`Ârötf
(
°dîr
, 
	`_
("øΩ: c™nŸ sëÉ¡ry from %s:%u\n"), 
«me
, 
löír
);

151 (Ë
	`f˛o£
(
Â
);

153 
	}
}

155 
	$di•œy_ˇche
()

157 
FILE
 *
fd
 = 
	`f›í
(
_PATH_PROCNET_RARP
, "r");

158 
buf„r
[256];

159 i‡(
fd
 =
NULL
) {

160 i‡(
î∫o
 =
ENOENT
)

161 
	`Âuts
(
	`_
(
no_øΩ_mesßge
), 
°dîr
);

163 
	`≥º‹
(
_PATH_PROCNET_RARP
);

166 
	`„of
(
fd
) == 0) {

167 i‡(
	`fgës
(
buf„r
, 255, 
fd
))

168 
	`Âuts
(
buf„r
, 
°dout
);

170 
	`f˛o£
(
fd
);

172 
	}
}

174 
	$ußge
()

176 
	`Ârötf
(
°dîr
, 
	`_
("Usage:Ñarp -aÜistÉntries in cache.\n"));

177 
	`Ârötf
(
°dîr
, 
	`_
("Ñarp -d <hostname> deleteÉntry from cache.\n"));

178 
	`Ârötf
(
°dîr
, 
	`_
("Ñarp [<HW>] -s <hostname> <hwaddr>áddÉntryÅo cache.\n"));

179 
	`Ârötf
(
°dîr
, 
	`_
("Ñarp -fáddÉntries from /etc/ethers.\n"));

180 
	`Ârötf
(
°dîr
, 
	`_
("Ñarp -V displayÖrogram version.\n\n"));

182 
	`Ârötf
(
°dîr
, 
	`_
(" <HW>=U£ '-H <hw>'Åÿ•ecify h¨dw¨êaddªs†ty≥. DeÁu…: %s\n"), 
DFLT_HW
);

183 
	`Ârötf
(
°dîr
, 
	`_
(" List ofÖossible hardwareÅypes (which support ARP):\n"));

184 
	`¥öt_hwli°
(1);

185 
	`exô
(
E_USAGE
);

186 
	}
}

188 
	#MODE_DISPLAY
 1

	)

189 
	#MODE_DELETE
 2

	)

190 
	#MODE_SET
 3

	)

191 
	#MODE_ETHERS
 4

	)

193 
›ti⁄
 
	gl⁄g›ts
[] =

195 {"vîsi⁄", 0, 
NULL
, 'V'},

196 {"vîbo£", 0, 
NULL
, 'v'},

197 {"li°", 0, 
NULL
, 'a'},

198 {"£t", 0, 
NULL
, 's'},

199 {"dñëe", 0, 
NULL
, 'd'},

200 {"hñp", 0, 
NULL
, 'h'},

201 {
NULL
, 0, NULL, 0}

204 
	$maö
(
¨gc
, **
¨gv
)

206 
ªsu…
 = 0, 
mode
 = 0, 
c
, 
«rgs
 = 0, 
vîbo£
 = 0;

207 *
¨gs
[3];

208 
ho°ít
 *
hp
;

209 
fd
;

211 #i‡
I18N


212 
	`£éoˇÀ
 (
LC_ALL
, "");

213 
	`bödãxtdomaö
("net-tools", "/usr/share/locale");

214 
	`ãxtdomaö
("net-tools");

218 
h¨dw¨e
 = 
	`gë_hwty≥
(
DFLT_HW
);

221 
c
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "-ht:aHdsVvf", 
l⁄g›ts
, 
NULL
);

222 
c
) {

223 
EOF
:

226 
	`ußge
();

228 
	`Ârötf
(
°dîr
, 
vîsi⁄_°rög
);

229 
	`exô
(
E_VERSION
);

232 
vîbo£
++;

237 i‡(
mode
) {

238 
	`Ârötf
(
°dîr
, 
	`_
("%s: iŒegÆ o±i⁄ mix.\n"), 
¨gv
[0]);

239 
	`ußge
();

241 
mode
 = (
c
 ='a' ? 
MODE_DISPLAY
 : (¯='d' ? 
MODE_DELETE
 : 
MODE_SET
));

245 
mode
 = 
MODE_ETHERS
;

249 i‡(
›èrg
) {

250 
h¨dw¨e
 = 
	`gë_hwty≥
(
›èrg
);

252 
	`ußge
();

256 i‡(
«rgs
 == 2) {

257 
	`ußge
();

258 
	`exô
(1);

260 
¨gs
[
«rgs
++] = 
›èrg
;

264 
	`ußge
();

266 } 
c
 !
EOF
);

268 i‡(
h¨dw¨e
 =
NULL
) {

269 
	`Ârötf
(
°dîr
, 
	`_
("øΩ: %s: unknow¿h¨dw¨êty≥.\n"), 
›èrg
);

270 
	`exô
(1);

272 
mode
) {

274 
	`ußge
();

276 
MODE_DISPLAY
:

277 i‡(
«rgs
 !(
mode
 - 1)) {

278 
	`ußge
();

280 
ªsu…
 = 
	`di•œy_ˇche
();

283 
MODE_DELETE
:

284 
MODE_SET
:

285 i‡(
«rgs
 !(
mode
 - 1)) {

286 
	`ußge
();

288 i‡((
hp
 = 
	`gëho°by«me
(
¨gs
[0])Ë=
NULL
) {

289 
	`Ârötf
(
°dîr
, 
	`_
("øΩ: %s: unknow¿ho°\n"), 
¨gs
[0]);

290 
	`exô
(1);

292 i‡(
fd
 = 
	`sockë
(
PF_INET
, 
SOCK_DGRAM
, 0), fd < 0) {

293 
	`≥º‹
("socket");

294 
	`exô
(1);

296 
ªsu…
 = (
mode
 =
MODE_DELETE
Ë? 
	`øΩ_dñëe
(
fd
, 
hp
Ë: 
	`øΩ_£t
(fd, hp, 
¨gs
[1]);

297 
	`˛o£
(
fd
);

300 
MODE_ETHERS
:

301 i‡(
«rgs
 != 0 &&Çargs != 1)

302 
	`ußge
();

303 i‡(
fd
 = 
	`sockë
(
PF_INET
, 
SOCK_DGRAM
, 0), fd < 0) {

304 
	`≥º‹
("socket");

305 
	`exô
(1);

307 
ªsu…
 = 
	`øΩ_fûe
(
fd
, 
«rgs
 ? 
¨gs
[0] : 
_PATH_ETHERS
);

308 
	`˛o£
(
fd
);

311 
	`exô
(
ªsu…
);

312 
	}
}

	@net-tools-1.60/route.c

39 
	~<sys/ty≥s.h
>

40 
	~<sys/io˘l.h
>

41 
	~<sys/sockë.h
>

42 
	~<√t/if.h
>

44 
	~<√töë/ö.h
>

45 
	~<√tdb.h
>

46 
	~<√töë/ö.h
>

47 
	~<¨∑/«me£r.h
>

48 
	~<ªsﬁv.h
>

49 
	~<löux/∑øm.h
>

50 
	~<°dio.h
>

51 
	~<î∫o.h
>

52 
	~<f˙é.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~<gë›t.h
>

56 
	~<uni°d.h
>

57 
	~<˘y≥.h
>

58 
	~"√t-suµ‹t.h
"

59 
	~"c⁄fig.h
"

60 
	~"öé.h
"

61 
	~"∑th«mes.h
"

62 
	~"vîsi⁄.h
"

64 
	#DFLT_AF
 "öë"

	)

66 
	#FEATURE_ROUTE


	)

67 
	~"lib/√t-„©uªs.h
"

69 *
	gRñó£
 = 
RELEASE
, *
	gVîsi⁄
 = "route 1.98 (2001-04-15)";

71 
	g›t_n
 = 0;

72 
	g›t_v
 = 0;

73 
	g›t_e
 = 1;

74 
	g›t_fc
 = 0;

75 
	g›t_h
 = 0;

76 
a·y≥
 *
	g≠
;

78 
	$ußge
()

80 
	`Ârötf
(
°dîr
, 
	`_
("Usage:Ñoute [-nNvee] [-FC] [<AF>] List kernelÑoutingÅables\n"));

81 
	`Ârötf
(
°dîr
, 
	`_
("Ñoute [-v] [-FC] {add|del|flush} ... ModifyÑoutingÅable for AF.\n\n"));

83 
	`Ârötf
(
°dîr
, 
	`_
("Ñoute {-h|--help} [<AF>] Detailed usage syntax for specified AF.\n"));

84 
	`Ârötf
(
°dîr
, 
	`_
("Ñoute {-V|--version} Display version/authorándÉxit.\n\n"));

86 
	`Ârötf
(
°dîr
, 
	`_
(" -v, --verbose be verbose\n"));

87 
	`Ârötf
(
°dîr
, 
	`_
(" -n, --numeric don'tÑesolveÇames\n"));

88 
	`Ârötf
(
°dîr
, 
	`_
(" -e, --extend display other/more information\n"));

89 
	`Ârötf
(
°dîr
, 
	`_
(" -F, --fib display Forwarding Information Base (default)\n"));

90 
	`Ârötf
(
°dîr
, 
	`_
(" -C, --cache displayÑouting cache instead of FIB\n\n"));

92 
	`Ârötf
(
°dîr
, 
	`_
(" <AF>=U£ '-A <af>' o∏'--<af>'; deÁu…: %s\n"), 
DFLT_AF
);

93 
	`Ârötf
(
°dîr
, 
	`_
(" List ofÖossibleáddress families (which supportÑouting):\n"));

94 
	`¥öt_aÊi°
(1);

95 
	`exô
(
E_USAGE
);

96 
	}
}

99 
	$vîsi⁄
()

101 
	`Ârötf
(
°dîr
, "%s\n%s\n%s\n", 
Rñó£
, 
Vîsi⁄
, 
Fótuªs
);

102 
	`exô
(
E_VERSION
);

103 
	}
}

106 
	$maö
(
¨gc
, **
¨gv
)

108 
i
, 
l›
, 
wh©
 = 0;

109 
›ti⁄
 
l⁄g›ts
[] =

111 
AFTRANS_OPTS
,

121 {
NULL
, 0, 0, 0}

123 **
tmp
;

124 *
¥og«me
;

125 
›ti⁄s
;

126 #i‡
I18N


127 
	`£éoˇÀ
 (
LC_ALL
, "");

128 
	`bödãxtdomaö
("net-tools", "/usr/share/locale");

129 
	`ãxtdomaö
("net-tools");

131 
	`gërouã_öô
();

132 
	`£åouã_öô
();

133 
a‚ame
[0] = '\0';

134 
¥og«me
 = 
¨gv
[0];

137 
tmp
 = 
¨gv
; *tmp;Åmp++) {

138 i‡(!
	`°rcmp
(*
tmp
, "-net"))

139 
	`°r˝y
(*
tmp
, "#net");

140 i‡(!
	`°rcmp
(*
tmp
, "-host"))

141 
	`°r˝y
(*
tmp
, "#host");

145 (
i
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "A:eCFhnNVv?", 
l⁄g›ts
, &
l›
)Ë!
EOF
)

146 
i
) {

150 
›t_n
 |
FLAG_NUM
;

153 
›t_n
 |
FLAG_SYM
;

156 
›t_v
 |
FLAG_VERBOSE
;

159 
›t_e
++;

162 i‡(
l›
 < 0 ||Ü› >
AFTRANS_CNT
) {

163 
	`EINTERN
("route.c", "longopts 1Ñange");

166 i‡((
i
 = 
	`a·øns_›t
(
l⁄g›ts
[
l›
].
«me
)))

167 
	`exô
(
i
);

170 
›t_fc
 |
FLAG_CACHE
;

173 
›t_fc
 |
FLAG_FIB
;

176 i‡((
i
 = 
	`a·øns_›t
(
›èrg
)))

177 
	`exô
(
i
);

180 
	`vîsi⁄
();

183 
›t_h
++;

186 
	`ußge
();

189 
¨gv
 +
›töd
;

190 
¨gc
 -
›töd
;

192 i‡(
›t_h
) {

193 i‡(!
a‚ame
[0])

194 
	`ußge
();

196 
wh©
 = 
RTACTION_HELP
;

198 i‡(!
a‚ame
[0])

200 
	`a·øns_def
("rouã", 
¥og«me
, 
DFLT_AF
);

203 i‡(*
¨gv
 =
NULL
) {

204 
wh©
 = 
RTACTION_SHOW
;

206 i‡(!
	`°rcmp
(*
¨gv
, "add"))

207 
wh©
 = 
RTACTION_ADD
;

208 i‡(!
	`°rcmp
(*
¨gv
, "del") || !strcmp(*argv, "delete"))

209 
wh©
 = 
RTACTION_DEL
;

210 i‡(!
	`°rcmp
(*
¨gv
, "flush"))

211 
wh©
 = 
RTACTION_FLUSH
;

213 
	`ußge
();

217 
›ti⁄s
 = (
›t_e
 & 
FLAG_EXT
Ë| 
›t_n
 | 
›t_fc
 | 
›t_v
;

218 i‡(!
›t_fc
)

219 
›ti⁄s
 |
FLAG_FIB
;

221 i‡(
wh©
 =
RTACTION_SHOW
)

222 
i
 = 
	`rouã_öfo
(
a‚ame
, 
›ti⁄s
);

224 
i
 = 
	`rouã_edô
(
wh©
, 
a‚ame
, 
›ti⁄s
, ++
¨gv
);

226 i‡(
i
 =
E_OPTERR
)

227 
	`ußge
();

229  (
i
);

230 
	}
}

	@net-tools-1.60/slattach.c

31 
	~<sys/∑øm.h
>

32 
	~<sys/ty≥s.h
>

33 
	~<sys/sockë.h
>

34 
	~<sys/io˘l.h
>

35 
	~<sys/°©.h
>

36 
	~<°dio.h
>

37 
	~<˘y≥.h
>

38 
	~<î∫o.h
>

39 
	~<f˙é.h
>

40 
	~<limôs.h
>

41 
	~<pwd.h
>

42 
	~<sig«l.h
>

43 
	~<°dlib.h
>

44 
	~<°rög.h
>

45 
	~<uni°d.h
>

46 
	~<gë›t.h
>

47 
	~<löux/if_¶ù.h
>

49 #i‡
deföed
(
__GLIBC__
)

50 #i‡
__GLIBC__
 =2 && 
__GLIBC_MINOR__
 == 0

51 
	~<ãrmbôs.h
>

53 
	~<ãrmios.h
>

57 
	~"∑th«mes.h
"

58 
	~"√t-suµ‹t.h
"

59 
	~"vîsi⁄.h
"

60 
	~"c⁄fig.h
"

61 
	~"öé.h
"

62 
	~"utû.h
"

64 #i‚de‡
_PATH_LOCKD


65 
	#_PATH_LOCKD
 "/v¨/lock"

	)

67 #i‚de‡
_UID_UUCP


68 
	#_UID_UUCP
 "uu˝"

	)

72 
	#DEF_PROTO
 "c¶ù"

	)

75 c⁄° *
	gRñó£
 = 
RELEASE
,

76 *
	gVîsi⁄
 = "@(#) slattach 1.21 (1999-11-21)",

77 *
	gSig«tuª
 = "net-tools, Fred N. van KempenÉtál.";

81 c⁄° *
	m•ìd
;

82 
	mcode
;

83 } 
	gây_•ìds
[] = {

84 { "50", 
B50
 }, { "75", 
B75
 },

85 { "110", 
B110
 }, { "300", 
B300
 },

86 { "600", 
B600
 }, { "1200", 
B1200
 },

87 { "2400", 
B2400
 }, { "4800", 
B4800
 },

88 { "9600", 
B9600
 },

89 #ifde‡
B14400


90 { "14400", 
B14400
 },

92 #ifde‡
B19200


93 { "19200", 
B19200
 },

95 #ifde‡
B38400


96 { "38400", 
B38400
 },

98 #ifde‡
B57600


99 { "57600", 
B57600
 },

101 #ifde‡
B115200


102 { "115200", 
B115200
 },

104 { 
NULL
, 0 }

106 
ãrmios
 
	gây_ßved
,

107 
	gây_cuºít
;

108 
	gây_sdisc
,

109 
	gây_ldisc
,

110 
	gây_fd
 = -1;

111 
	g›t_c
 = 0;

112 
	g›t_e
 = 0;

113 
	g›t_h
 = 0;

114 #ifde‡
SIOCSKEEPALIVE


115 
	g›t_k
 = 0;

117 
	g›t_l
 = 0;

118 
	g›t_L
 = 0;

119 
	g›t_m
 = 0;

120 
	g›t_n
 = 0;

121 #ifde‡
SIOCSOUTFILL


122 
	g›t_o
 = 0;

124 
	g›t_q
 = 0;

125 
	g›t_d
 = 0;

126 
	g›t_v
 = 0;

130 
	$ây_nomesg
(
fd
)

132 i‡(
›t_n
 == 0) (0);

133 (
	`fchmod
(
fd
, 0600));

134 
	}
}

138 
	$ây_Æªady_locked
(*
«m
)

140 
i
 = 0, 
pid
 = 0;

141 
FILE
 *
fd
 = (FILE *)0;

144 i‡((
fd
 = 
	`f›í
(
«m
, "r")Ë=(
FILE
 *)0)

150 
i
 = 
	`fsˇnf
(
fd
, "%d", &
pid
);

151 (Ë
	`f˛o£
(
fd
);

153 i‡(
i
 != 1)

157 i‡(
	`kûl
(
pid
, 0) == 0)

162 
	}
}

166 
	$ây_lock
(*
∑th
, 
mode
)

168 
ßved_∑th
[
PATH_MAX
];

169 
ßved_lock
 = 0;

170 
∑sswd
 *
pw
;

171 
fd
;

172 
≠id
[16];

175 i‡((
›t_l
 =0Ë|| ((
∑th
 =
NULL
Ë&& (
ßved_lock
 == 0))) (0);

177 i‡(
mode
 == 1) {

178 
	`•rötf
(
ßved_∑th
, "%s/LCK..%s", 
_PATH_LOCKD
, 
∑th
);

179 i‡(
	`ây_Æªady_locked
(
ßved_∑th
)) {

180 
	`Ârötf
(
°dîr
, 
	`_
("¶©èch: /dev/%†ÆªadyÜocked!\n"), 
∑th
);

183 i‡((
fd
 = 
	`¸ót
(
ßved_∑th
, 0644)) < 0) {

184 i‡(
î∫o
 !
EEXIST
)

185 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
,

186 
	`_
("slattach:Åty_lock: (%s): %s\n"),

187 
ßved_∑th
, 
	`°ªº‹
(
î∫o
));

190 
	`•rötf
(
≠id
, "%10d\n", 
	`gëpid
());

191 i‡(
	`wrôe
(
fd
, 
≠id
, 
	`°æí
(apid)) != strlen(apid)) {

192 
	`Ârötf
(
°dîr
, 
	`_
("slattach: cannot write PID file\n"));

193 
	`˛o£
(
fd
);

194 
	`u∆ök
(
ßved_∑th
);

198 (Ë
	`˛o£
(
fd
);

201 i‡((
pw
 = 
	`gëpw«m
(
_UID_UUCP
)Ë=
NULL
) {

202 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
, 
	`_
("slattach:Åty_lock: UUCP user %s unknown!\n"),

203 
_UID_UUCP
);

206 (Ë
	`chown
(
ßved_∑th
, 
pw
->
pw_uid
,Öw->
pw_gid
);

207 
ßved_lock
 = 1;

209 i‡(
ßved_lock
 != 1) (0);

210 i‡(
	`u∆ök
(
ßved_∑th
) < 0) {

211 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
,

212 "¶©èch:Åty_u∆ock: (%s): %s\n", 
ßved_∑th
,

213 
	`°ªº‹
(
î∫o
));

216 
ßved_lock
 = 0;

220 
	}
}

225 
	$ây_föd_•ìd
(c⁄° *
•ìd
)

227 
i
;

229 
i
 = 0;

230 
ây_•ìds
[
i
].
•ìd
 !
NULL
) {

231 i‡(!
	`°rcmp
(
ây_•ìds
[
i
].
•ìd
, s≥ed)Ë—ty_•ìds[i].
code
);

232 
i
++;

234 (-
EINVAL
);

235 
	}
}

240 
	$ây_£t_°›bôs
(
ãrmios
 *
ây
, *
°›bôs
)

242 i‡(
›t_d
Ë
	`¥ötf
("¶©èch:Åty_£t_°›bôs: %c\n", *
°›bôs
);

243 *
°›bôs
) {

245 
ây
->
c_cÊag
 &~
CSTOPB
;

249 
ây
->
c_cÊag
 |
CSTOPB
;

253 (-
EINVAL
);

256 
	}
}

261 
	$ây_£t_d©abôs
(
ãrmios
 *
ây
, *
d©abôs
)

263 i‡(
›t_d
Ë
	`¥ötf
("¶©èch:Åty_£t_d©abôs: %c\n", *
d©abôs
);

264 
ây
->
c_cÊag
 &~
CSIZE
;

265 *
d©abôs
) {

267 
ây
->
c_cÊag
 |
CS5
;

271 
ây
->
c_cÊag
 |
CS6
;

275 
ây
->
c_cÊag
 |
CS7
;

279 
ây
->
c_cÊag
 |
CS8
;

283 (-
EINVAL
);

286 
	}
}

291 
	$ây_£t_∑rôy
(
ãrmios
 *
ây
, *
∑rôy
)

293 i‡(
›t_d
Ë
	`¥ötf
("¶©èch:Åty_£t_∑rôy: %c\n", *
∑rôy
);

294 
	`touµî
(*
∑rôy
)) {

296 
ây
->
c_cÊag
 &~(
PARENB
 | 
PARODD
);

300 
ây
->
c_cÊag
 &~(
PARENB
 | 
PARODD
);

301 
ây
->
c_cÊag
 |(
PARENB
 | 
PARODD
);

305 
ây
->
c_cÊag
 &~(
PARENB
 | 
PARODD
);

306 
ây
->
c_cÊag
 |(
PARENB
);

310 (-
EINVAL
);

313 
	}
}

318 
	$ây_£t_•ìd
(
ãrmios
 *
ây
, c⁄° *
•ìd
)

320 
code
;

322 i‡(
›t_d
Ë
	`¥ötf
("¶©èch:Åty_£t_•ìd: %s\n", 
•ìd
);

323 i‡((
code
 = 
	`ây_föd_•ìd
(
•ìd
)) < 0) (code);

324 
ây
->
c_cÊag
 &~
CBAUD
;

325 
ây
->
c_cÊag
 |
code
;

327 
	}
}

332 
	$ây_£t_øw
(
ãrmios
 *
ây
)

334 
i
;

335 
•ìd
;

337 
i
 = 0; i < 
NCCS
; i++)

338 
ây
->
c_cc
[
i
] = '\0';

339 
ây
->
c_cc
[
VMIN
] = 1;

340 
ây
->
c_cc
[
VTIME
] = 0;

341 
ây
->
c_iÊag
 = (
IGNBRK
 | 
IGNPAR
);

342 
ây
->
c_oÊag
 = (0);

343 
ây
->
c_lÊag
 = (0);

344 
•ìd
 = (
ây
->
c_cÊag
 & 
CBAUD
);

345 
ây
->
c_cÊag
 = (
CRTSCTS
 | 
HUPCL
 | 
CREAD
);

346 i‡(
›t_L
)

347 
ây
->
c_cÊag
 |
CLOCAL
;

348 
ây
->
c_cÊag
 |
•ìd
;

350 
	}
}

355 
	$ây_gë_°©e
(
ãrmios
 *
ây
)

357 i‡(
	`io˘l
(
ây_fd
, 
TCGETS
, 
ây
) < 0) {

358 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
,

359 "¶©èch:Åty_gë_°©e: %s\n", 
	`°ªº‹
(
î∫o
));

360 (-
î∫o
);

363 
	}
}

368 
	$ây_£t_°©e
(
ãrmios
 *
ây
)

370 i‡(
	`io˘l
(
ây_fd
, 
TCSETS
, 
ây
) < 0) {

371 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
,

372 "¶©èch:Åty_£t_°©e: %s\n", 
	`°ªº‹
(
î∫o
));

373 (-
î∫o
);

376 
	}
}

381 
	$ây_gë_disc
(*
disc
)

383 i‡(
	`io˘l
(
ây_fd
, 
TIOCGETD
, 
disc
) < 0) {

384 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
,

385 "¶©èch:Åty_gë_disc: %s\n", 
	`°ªº‹
(
î∫o
));

386 (-
î∫o
);

389 
	}
}

394 
	$ây_£t_disc
(
disc
)

396 i‡(
disc
 =-1Ëdis¯
ây_sdisc
;

398 i‡(
	`io˘l
(
ây_fd
, 
TIOCSETD
, &
disc
) < 0) {

399 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
,

400 "¶©èch:Åty_£t_disc(%d, %d): %s\n", 
ây_fd
,

401 
disc
, 
	`°ªº‹
(
î∫o
));

402 (-
î∫o
);

405 
	}
}

410 
	$ây_gë_«me
(*
«me
)

412 i‡(
	`io˘l
(
ây_fd
, 
SIOCGIFNAME
, 
«me
) < 0) {

413 i‡(
›t_q
 == 0)

414 
	`≥º‹
("tty_get_name");

415 (-
î∫o
);

418 
	}
}

423 
	$ây_h™gup
()

425 
ãrmios
 
ây
;

427 
ây
 = 
ây_cuºít
;

428 (Ë
	`ây_£t_•ìd
(&
ây
, "0");

429 i‡(
	`ây_£t_°©e
(&
ây
) < 0) {

430 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
, 
	`_
("¶©èch:Åty_h™gup(DROP): %s\n"), 
	`°ªº‹
(
î∫o
));

431 (-
î∫o
);

434 (Ë
	`¶ìp
(1);

436 i‡(
	`ây_£t_°©e
(&
ây_cuºít
) < 0) {

437 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
, 
	`_
("¶©èch:Åty_h™gup(RAISE): %s\n"), 
	`°ªº‹
(
î∫o
));

438 (-
î∫o
);

441 
	}
}

446 
	$ây_˛o£
()

448 (Ë
	`ây_£t_disc
(
ây_sdisc
);

449 (Ë
	`ây_h™gup
();

450 (Ë
	`ây_lock
(
NULL
, 0);

452 
	}
}

457 
	$ây_›í
(*
«me
, c⁄° *
•ìd
)

459 
∑thbuf
[
PATH_MAX
];

460 *
∑th_›í
, *
∑th_lock
;

461 
fd
;

464 i‡(
«me
 !
NULL
) {

465 i‡(
«me
[0] != '/') {

466 i‡(
	`°æí
(
«me
 + 6Ë> (
∑thbuf
)) {

467 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
,

468 
	`_
("slattach:ÅtyÇameÅooÜong\n"));

471 
	`•rötf
(
∑thbuf
, "/dev/%s", 
«me
);

472 
∑th_›í
 = 
∑thbuf
;

473 
∑th_lock
 = 
«me
;

474 } i‡(!
	`°∫cmp
(
«me
, "/dev/", 5)) {

475 
∑th_›í
 = 
«me
;

476 
∑th_lock
 = 
«me
 + 5;

478 
∑th_›í
 = 
«me
;

479 
∑th_lock
 = 
«me
;

481 i‡(
›t_d
Ë
	`¥ötf
("slattach:Åty_open:Üooking forÜock\n");

482 i‡(
	`ây_lock
(
∑th_lock
, 1)) (-1);

483 i‡(
›t_d
Ë
	`¥ötf
("¶©èch:Åty_›í:ÅryögÅÿ›í %s\n", 
∑th_›í
);

484 i‡((
fd
 = 
	`›í
(
∑th_›í
, 
O_RDWR
|
O_NDELAY
)) < 0) {

485 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
,

487 
∑th_›í
, 
	`°ªº‹
(
î∫o
));

488 (-
î∫o
);

490 
ây_fd
 = 
fd
;

491 i‡(
›t_d
Ë
	`¥ötf
("¶©èch:Åty_›í: %†(fd=%dË", 
∑th_›í
, 
fd
);

493 
ây_fd
 = 0;

497 i‡(
	`ây_gë_°©e
(&
ây_ßved
) < 0) {

498 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
, 
	`_
("slattach:Åty_open: cannot get current state!\n"));

499 (-
î∫o
);

501 
ây_cuºít
 = 
ây_ßved
;

504 i‡(
	`ây_gë_disc
(&
ây_sdisc
) < 0) {

505 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
, 
	`_
("slattach:Åty_open: cannot get currentÜine disc!\n"));

506 (-
î∫o
);

508 
ây_ldisc
 = 
ây_sdisc
;

511 i‡(
›t_m
 == 0) {

512 i‡(
	`ây_£t_øw
(&
ây_cuºít
) < 0) {

513 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
, 
	`_
("slattach:Åty_open: cannot set RAW mode!\n"));

514 (-
î∫o
);

518 i‡(
•ìd
 !
NULL
) {

519 i‡(
	`ây_£t_•ìd
(&
ây_cuºít
, 
•ìd
) != 0) {

520 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
, 
	`_
("slattach:Åty_open: cannot set %s bps!\n"),

521 
•ìd
);

522 (-
î∫o
);

527 i‡(
	`ây_£t_d©abôs
(&
ây_cuºít
, "8") ||

528 
	`ây_£t_°›bôs
(&
ây_cuºít
, "1") ||

529 
	`ây_£t_∑rôy
(&
ây_cuºít
, "N")) {

530 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
, 
	`_
("slattach:Åty_open: cannot set 8N1 mode!\n"));

531 (-
î∫o
);

535 i‡((
fd
 = 
	`ây_£t_°©e
(&
ây_cuºít
)) < 0) (fd);

539 (Ë
	`ây_nomesg
(
ây_fd
);

542 
	}
}

547 
	$sig_ˇtch
(
sig
)

550 
	`ây_˛o£
();

551 
	`exô
(0);

552 
	}
}

556 
	$ußge
()

558 *
ußge_msg
 = "Usage: slattach [-ehlLmnqv] "

559 #ifde‡
SIOCSKEEPALIVE


562 #ifde‡
SIOCSOUTFILL


568 
	`Ârötf
(
°dîr
, 
ußge_msg
);

569 
	`exô
(1);

570 
	}
}

574 
	$vîsi⁄
()

576 
	`¥ötf
("%s\n%s\n%s\n", 
Rñó£
, 
Vîsi⁄
, 
Sig«tuª
);

577 
	`exô
(
E_VERSION
);

578 
	}
}

582 
	$maö
(
¨gc
, *
¨gv
[])

584 
∑th_buf
[128];

585 *
∑th_dev
;

586 
buff
[128];

587 c⁄° *
•ìd
 = 
NULL
;

588 c⁄° *
¥Ÿo
 = 
DEF_PROTO
;

589 c⁄° *
extcmd
 = 
NULL
;

590 
s
;

591 
›ti⁄
 
l⁄g›ts
[] = {

592 { "vîsi⁄", 0, 
NULL
, 'V' },

593 { 
NULL
, 0, NULL, 0 }

596 
	`°r˝y
(
∑th_buf
, "");

597 
∑th_dev
 = 
∑th_buf
;

600 
›ãº
 = 0;

601 (
s
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "c:ehlLm≈:qs:vdVk:o:", 
l⁄g›ts
, 
NULL
)Ë!
EOF
) s) {

603 
extcmd
 = 
›èrg
;

607 
›t_e
 = 1 - opt_e;

611 
›t_h
 = 1 - opt_h;

614 #ifde‡
SIOCSKEEPALIVE


616 
›t_k
 = 
	`©oi
(
›èrg
);

621 
›t_L
 = 1 - opt_L;

625 
›t_l
 = 1 - opt_l;

629 
›t_m
 = 1 - opt_m;

633 
›t_n
 = 1 - opt_n;

636 #ifde‡
SIOCSOUTFILL


638 
›t_o
 = 
	`©oi
(
›èrg
);

643 
¥Ÿo
 = 
›èrg
;

647 
›t_q
 = 1 - opt_q;

651 
•ìd
 = 
›èrg
;

655 
›t_d
 = 1 - opt_d;

659 
›t_v
 = 1 - opt_v;

663 
	`vîsi⁄
();

667 
	`ußge
();

671 i‡(
	`£tvbuf
(
°dout
,0,
_IOLBF
,0)) {

672 i‡(
›t_q
 =0Ë
	`Ârötf
(
°dîr
, 
	`_
("slattach: setvbuf(stdout,0,_IOLBF,0) : %s\n"),

673 
	`°ªº‹
(
î∫o
));

674 
	`exô
(1);

677 
	`a˘iv©e_öô
();

679 i‡(!
	`°rcmp
(
¥Ÿo
, "tty"))

680 
›t_m
++;

683 i‡(
›töd
 !(
¨gc
 - 1)Ë
	`ußge
();

684 
	`ß„_°∫˝y
(
∑th_buf
, 
¨gv
[
›töd
], (path_buf));

685 i‡(!
	`°rcmp
(
∑th_buf
, "-")) {

686 
›t_e
 = 1;

687 
∑th_dev
 = 
NULL
;

688 i‡(
	`ây_›í
(
NULL
, 
•ìd
) < 0) { (3); }

690 
∑th_dev
 = 
∑th_buf
;

691 i‡(
	`ây_›í
(
∑th_dev
, 
•ìd
) < 0) { (3); }

695 i‡(!
	`°rcmp
(
¥Ÿo
, "tty")) {

696 
ây_sdisc
 = 
N_TTY
;

697 
	`ây_˛o£
();

700 i‡(
	`a˘iv©e_ld
(
¥Ÿo
, 
ây_fd
))

702 i‡((
›t_v
 =1Ë|| (
›t_d
 == 1)) {

703 i‡(
	`ây_gë_«me
(
buff
)) { (3); }

704 
	`¥ötf
(
	`_
("%†°¨ãd"), 
¥Ÿo
);

705 i‡(
∑th_dev
 !
NULL
Ë
	`¥ötf
(
	`_
(" on %s"),Öath_dev);

706 
	`¥ötf
(
	`_
(" i¡îÁ˚ %s\n"), 
buff
);

710 #ifde‡
SIOCSKEEPALIVE


711 i‡(
›t_k
 && (
	`io˘l
(
ây_fd
, 
SIOCSKEEPALIVE
, &opt_k) < 0))

712 
	`Ârötf
(
°dîr
, "¶©èch: io˘l(SIOCSKEEPALIVE): %s\n", 
	`°ªº‹
(
î∫o
));

714 #ifde‡
SIOCSOUTFILL


715 i‡(
›t_o
 && (
	`io˘l
(
ây_fd
, 
SIOCSOUTFILL
, &opt_o) < 0))

716 
	`Ârötf
(
°dîr
, "¶©èch: io˘l(SIOCSOUTFILL): %s\n", 
	`°ªº‹
(
î∫o
));

719 (Ë
	`sig«l
(
SIGHUP
, 
sig_ˇtch
);

720 (Ë
	`sig«l
(
SIGINT
, 
sig_ˇtch
);

721 (Ë
	`sig«l
(
SIGQUIT
, 
sig_ˇtch
);

722 (Ë
	`sig«l
(
SIGTERM
, 
sig_ˇtch
);

725 i‡(
›t_e
 == 0) {

727 if(
›t_h
 == 1) {

728 
n
 = 0;

730 
	`io˘l
(
ây_fd
, 
TIOCMGET
, &
n
);

731 if(!(
n
 & 
TIOCM_CAR
))

733 
	`¶ìp
(15);

736 
	`¶ìp
(60);

739 
	`ây_˛o£
();

740 if(
extcmd
)

741 
	`sy°em
(
extcmd
);

743 
	`exô
(0);

744 
	}
}

	@net-tools-1.60/statistics.c

8 
	~<˘y≥.h
>

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~"c⁄fig.h
"

13 
	~"öé.h
"

17 #ifde‡
WARN


18 
	#UFWARN
(
x
Ë
	)
x

20 
	#UFWARN
(
x
)

	)

23 
	g¥öt_°©ic
,
	gf_øw
,
	gf_t˝
,
	gf_udp
,
	gf_unknown
 = 1;

25 
	eSèã
 {

26 
	mnumbî
 = 0, 
	m›t_numbî
, 
	mi_f‹w¨d
, 
	mi_öp_icmp
, 
	mi_ouç_icmp
, 
	mi_πo_Æg
,

27 
	mMaxSèã


30 
	#n‹mÆ
 
numbî


	)

32 
	síåy
 {

33 *
	mtôÀ
;

34 *
	mout
;

35 
Sèã
 
	mty≥
;

38 
	s°©edesc
 {

39 
	mödít
;

40 *
	mtôÀ
;

43 
°©edesc
 
	g°©es
[] = {

44 [
numbî
] = { 4, 
NULL
 },

45 [
›t_numbî
] = { 4, 
NULL
 },

46 [
i_f‹w¨d
] = { 4, 
NULL
 },

47 [
i_öp_icmp
] = { 8, 
N_
("ICMP input histogram:") },

48 [
i_ouç_icmp
] = { 8, 
N_
("ICMP output histogram:") },

49 [
MaxSèã
] = {0},

52 
Sèã
 
	g°©e
;

54 
	#I_STATIC
 (1<<16Ë

	)

55 
	#I_TITLE
 (1<<17)

	)

63 
íåy
 
	gI±ab
[] =

65 {"F‹w¨dög", 
N_
("F‹w¨dög i†%s"), 
i_f‹w¨d
 | 
I_STATIC
},

66 {"DeÁu…TTL", 
N_
("DeÁu… TTL i†%u"), 
numbî
 | 
I_STATIC
},

67 {"InRe˚ives", 
N_
("%uÅŸÆÖackë†ª˚ived"), 
numbî
},

68 {"InHdrEº‹s", 
N_
("%u wôh invÆid hódîs"), 
›t_numbî
},

69 {"InAddrEº‹s", 
N_
("%u wôh invÆidáddªs£s"), 
›t_numbî
},

70 {"F‹wD©agøms", 
N_
("%u f‹w¨ded"), 
numbî
},

71 {"InUnknownPrŸos", 
N_
("%u wôh unknow¿¥Ÿocﬁ"), 
›t_numbî
},

72 {"InDisˇrds", 
N_
("%u incomögÖackë†disˇrded"), 
numbî
},

73 {"InDñivîs", 
N_
("%u incomögÖackë†dñivîed"), 
numbî
},

74 {"OutReque°s", 
N_
("%uÑeque°†£¡ out"), 
numbî
},

75 {"OutDisˇrds", 
N_
("%u outgoögÖackë†dr›≥d"), 
›t_numbî
},

76 {"OutNoRouãs", 
N_
("%u dr›≥d beˇu£ o‡missögÑouã"), 
›t_numbî
},

77 {"RósmTimeout", 
N_
("%u føgmít†dr›≥dá·îÅimeout"), 
›t_numbî
},

78 {"RósmReqds", 
N_
("%uÑós£mblõ†ªquúed"), 
›t_numbî
},

79 {"RósmOKs", 
N_
("%uÖackë†ªas£mbÀd ok"), 
›t_numbî
},

80 {"RósmFaûs", 
N_
("%uÖackëÑós£mbÀ†Áûed"), 
›t_numbî
},

81 {"FøgOKs", 
N_
("%u føgmít†ª˚ived ok"), 
›t_numbî
},

82 {"FøgFaûs", 
N_
("%u føgmít†Áûed"), 
›t_numbî
},

83 {"FøgCª©es", 
N_
("%u føgmít†¸óãd"), 
›t_numbî
}

86 
íåy
 
	gIcm±ab
[] =

88 {"InMsgs", 
N_
("%u ICMP mesßge†ª˚ived"), 
numbî
},

89 {"InEº‹s", 
N_
("%u i≈uàICMP mesßgêÁûed."), 
numbî
},

90 {"InDe°Uƒóchs", 
N_
("de°ö©i⁄ uƒóchabÀ: %u"), 
i_öp_icmp
 | 
I_TITLE
},

91 {"InTimeExcds", 
N_
("timeouàöÅønsô: %u"), 
i_öp_icmp
 | 
I_TITLE
},

92 {"InP¨mProbs", 
N_
("wr⁄gÖ¨amëîs: %u"), 
i_öp_icmp
 | 
I_TITLE
},

93 {"InSrcQuíchs", 
N_
("sour˚ quíches: %u"), 
i_öp_icmp
 | 
I_TITLE
},

94 {"InRedúe˘s", 
N_
("ªdúe˘s: %u"), 
i_öp_icmp
 | 
I_TITLE
},

95 {"InEchos", 
N_
("echÿªque°s: %u"), 
i_öp_icmp
 | 
I_TITLE
},

96 {"InEchoRïs", 
N_
("echÿª∂õs: %u"), 
i_öp_icmp
 | 
I_TITLE
},

97 {"InTime°amps", 
N_
("time°am∞ªque°: %u"), 
i_öp_icmp
 | 
I_TITLE
},

98 {"InTime°ampRïs", 
N_
("time°am∞ª∂y: %u"), 
i_öp_icmp
 | 
I_TITLE
},

99 {"InAddrMasks", 
N_
("addªs†maskÑeque°: %u"), 
i_öp_icmp
 | 
I_TITLE
},

100 {"InAddrMaskRïs", 
N_
("addªs†maskÑïlõs: %u"), 
i_öp_icmp
 | 
I_TITLE
},

101 {"OutMsgs", 
N_
("%u ICMP mesßge†£¡"), 
numbî
},

102 {"OutEº‹s", 
N_
("%u ICMP mesßge†Áûed"), 
numbî
},

103 {"OutDe°Uƒóchs", 
N_
("de°ö©i⁄ uƒóchabÀ: %u"), 
i_ouç_icmp
 | 
I_TITLE
},

104 {"OutTimeExcds", 
N_
("timêex˚eded: %u"), 
i_ouç_icmp
 | 
I_TITLE
},

105 {"OutP¨mProbs", 
N_
("wr⁄gÖ¨amëîs: %u"), 
i_ouç_icmp
 | 
I_TITLE
},

106 {"OutSrcQuíchs", 
N_
("sour˚ quích: %u"), 
i_ouç_icmp
 | 
I_TITLE
},

107 {"OutRedúe˘s", 
N_
("ªdúe˘: %u"), 
i_ouç_icmp
 | 
I_TITLE
},

108 {"OutEchos", 
N_
("echÿªque°: %u"), 
i_ouç_icmp
 | 
I_TITLE
},

109 {"OutEchoRïs", 
N_
("echÿª∂õs: %u"), 
i_ouç_icmp
 | 
I_TITLE
},

110 {"OutTime°amps", 
N_
("time°am∞ªque°s: %u"), 
i_ouç_icmp
 | 
I_TITLE
},

111 {"OutTime°ampRïs", 
N_
("time°am∞ª∂õs: %u"), 
i_ouç_icmp
 | 
I_TITLE
},

112 {"OutAddrMasks", 
N_
("addªs†maskÑeque°s: %u"), 
i_ouç_icmp
 | 
I_TITLE
},

113 {"OutAddrMaskRïs", 
N_
("addªs†maskÑïlõs: %u"), 
i_ouç_icmp
 | 
I_TITLE
},

116 
íåy
 
	gT˝èb
[] =

118 {"RtoAlg‹ôhm", 
N_
("RTOálg‹ôhm i†%s"), 
i_πo_Æg
 | 
I_STATIC
},

119 {"RtoMö", "", 
numbî
},

120 {"RtoMax", "", 
numbî
},

121 {"MaxC⁄n", "", 
numbî
},

122 {"A˘iveO≥ns", 
N_
("%uá˘ivêc⁄√˘i⁄†›íögs"), 
numbî
},

123 {"PassiveO≥ns", 
N_
("%uÖassivêc⁄√˘i⁄ o≥nögs"), 
numbî
},

124 {"Aâem±Faûs", 
N_
("%u faûed c⁄√˘i⁄áâem±s"), 
numbî
},

125 {"E°abRe£ts", 
N_
("%u c⁄√˘i⁄Ñe£t†ª˚ived"), 
numbî
},

126 {"CuºE°ab", 
N_
("%u c⁄√˘i⁄†e°ablished"), 
numbî
},

127 {"InSegs", 
N_
("%u segmít†ª˚ived"), 
numbî
},

128 {"OutSegs", 
N_
("%u segmít†£nd out"), 
numbî
},

129 {"RëønsSegs", 
N_
("%u segmít†ªå™smôed"), 
numbî
},

130 {"InEºs", 
N_
("%u bad segmít†ª˚ived."), 
numbî
},

131 {"OutR°s", 
N_
("%uÑe£t†£¡"), 
numbî
},

134 
íåy
 
	gUd±ab
[] =

136 {"InD©agøms", 
N_
("%uÖackë†ª˚ived"), 
numbî
},

137 {"NoP‹ts", 
N_
("%uÖackë†tÿunknow¿p‹àª˚ived."), 
numbî
},

138 {"InEº‹s", 
N_
("%uÖackëÑe˚ivêîr‹s"), 
numbî
},

139 {"OutD©agøms", 
N_
("%uÖackë†£¡"), 
numbî
},

142 
íåy
 
	gT˝exâab
[] =

144 {"SyncookõsSít", 
N_
("%u SYN cookõ†£¡"), 
›t_numbî
},

145 {"SyncookõsRecv", 
N_
("%u SYN cookõ†ª˚ived"), 
›t_numbî
},

146 {"SyncookõsFaûed", 
N_
("%u invÆid SYN cookõ†ª˚ived"), 
›t_numbî
},

148 { "Embry⁄icR°s", 
N_
("%uÑesetsÑeceived forÉmbryonic SYN_RECV sockets"),

149 
›t_numbî
 },

150 { "Pru√CÆÀd", 
N_
("%uÖacketsÖruned fromÑeceive queue because of socket"

151 " buf„∏ovîrun"), 
›t_numbî
 },

153 { "RcvPru√d", 
N_
("%uÖackë†¥u√d fromÑe˚ivêqueue"), 
›t_numbî
 },

154 { "OfoPru√d", 
N_
("%uÖackets dropped from out-of-order queue because of"

155 " sockë buf„∏ovîrun"), 
›t_numbî
 },

156 { "OutOfWödowIcmps", 
N_
("%u ICMPÖackets dropped becauseÅhey were "

157 "out-of-wödow"), 
›t_numbî
 },

158 { "LockDr›≥dIcmps", 
N_
("%u ICMPÖackets dropped because"

159 " sockë wa†locked"), 
›t_numbî
 },

160 { "TW", 
N_
("%u TCP sockë†föishedÅimêwaô i¿Á°Åimî"), 
›t_numbî
 },

161 { "TWRecy˛ed", 
N_
("%uÅimêwaô sockë†ªcy˛ed byÅimê°amp"), 
›t_numbî
 },

162 { "TWKûÀd", 
N_
("%u TCP sockë†föishedÅimêwaô i¿¶owÅimî"), 
›t_numbî
 },

163 { "PAWSPassive", 
N_
("%uÖassive connectionsÑejected because of"

164 "Åimê°amp"), 
›t_numbî
 },

165 { "PAWSA˘ive", 
N_
("%uáctive connectionsÑejected because of "

166 "timê°amp"), 
›t_numbî
 },

167 { "PAWSE°ab", 
N_
("%uÖacketsÑejects inÉstablished connections because of"

168 "Åime°amp"), 
›t_numbî
 },

169 { "DñayedACKs", 
N_
("%u dñayedáck†£¡"), 
›t_numbî
 },

170 { "DñayedACKLocked", 
N_
("%u delayedácks further delayed because of"

171 "Üocked sockë"), 
›t_numbî
 },

172 { "DñayedACKLo°", 
N_
("Quickáck modêwa†a˘iv©ed %uÅimes"), 
›t_numbî
 },

173 { "Li°íOvîÊows", 
N_
("%uÅimesÅheÜisten queue ofá socket overflowed"),

174 
›t_numbî
 },

175 { "Li°íDr›s", 
N_
("%u SYN†tÿLISTEN sockë†ign‹ed"), 
›t_numbî
 },

176 { "TCPPªqueued", 
N_
("%uÖackets directly queuedÅoÑecvmsgÖrequeue."),

177 
›t_numbî
 },

178 { "TCPDúe˘C›yFromBacklog", 
N_
("%uÖackets directlyÑeceived"

179 " from backlog"), 
›t_numbî
 },

180 { "TCPDúe˘C›yFromPªqueue", 
N_
("%uÖackets directlyÑeceived"

181 " fromÖªqueue"), 
›t_numbî
 },

182 { "TCPPªqueueDr›≥d", 
N_
("%uÖackë†dr›≥d fromÖªqueue"), 
›t_numbî
 },

183 { "TCPHPHôs", 
N_
("%uÖackë†hódîÖªdi˘ed"), 
numbî
 },

184 { "TCPHPHôsToU£r", 
N_
("%uÖackets headerÖredictedánd "

185 "dúe˘ly queuedÅÿu£r"), 
›t_numbî
 },

186 { "SockMÆlocOOM", 
N_
("Ran %uÅimes out of system memory during "

187 "∑ckë sídög"), 
›t_numbî
 },

190 
	sèbèb
 {

191 *
	mtôÀ
;

192 
íåy
 *
	mèb
;

193 
size_t
 
	msize
;

194 *
	mÊag
;

197 
èbèb
 
	g¢m±abs
[] =

199 {"Ip", 
I±ab
, (I±ab), &
f_øw
},

200 {"Icmp", 
Icm±ab
, (Icm±ab), &
f_øw
},

201 {"T˝", 
T˝èb
, (T˝èb), &
f_t˝
},

202 {"Udp", 
Ud±ab
, (Ud±ab), &
f_udp
},

203 {"T˝Ext", 
T˝exâab
, (T˝exâab), &
f_t˝
},

204 {
NULL
}

209 
	$cm≥¡rõs
(c⁄° *
a
, c⁄° *
b
)

211  
	`°rcmp
(((
íåy
 *Ë
a
)->
tôÀ
, ((íåy *Ë
b
)->title);

212 
	}
}

214 
	$¥ötvÆ
(
èbèb
 *
èb
, *
tôÀ
, 
vÆ
)

216 
íåy
 *
ít
 = 
NULL
, 
key
;

217 
ty≥
;

218 
buf
[512];

220 
key
.
tôÀ
 =Åitle;

221 i‡(
èb
->tab)

222 
ít
 = 
	`b£¨ch
(&
key
, 
èb
->èb,Åab->
size
 / (
íåy
),

223 (
íåy
), 
cm≥¡rõs
);

224 i‡(!
ít
) {

225 
	`¥ötf
("%*s%s: %d\n", 
°©es
[
°©e
].
ödít
, "", 
tôÀ
, 
vÆ
);

228 
ty≥
 = 
ít
->type;

229 i‡(
ty≥
 & 
I_STATIC
) {

230 
ty≥
 &~
I_STATIC
;

231 i‡(!
¥öt_°©ic
)

234 i‡(*
ít
->
out
 == '\0')

237 i‡(
ty≥
 & 
I_TITLE
) {

238 
ty≥
 &~
I_TITLE
;

239 i‡(
°©e
 !
ty≥
)

240 
	`¥ötf
("%*s%s\n", 
°©es
[
°©e
].
ödít
, "", 
	`_
(°©es[
ty≥
].
tôÀ
));

242 
buf
[0] = '\0';

243 
ty≥
) {

244 
›t_numbî
:

245 i‡(
vÆ
 == 0)

248 
numbî
:

249 
	`¢¥ötf
(
buf
, (buf), 
	`_
(
ít
->
out
), 
vÆ
);

251 
i_f‹w¨d
:

252 
ty≥
 = 
n‹mÆ
;

253 
	`¢¥ötf
(
buf
, (buf), 
	`_
(
ít
->
out
), 
vÆ
 == 2 ? _("enabled") : _("disabled"));

255 
i_ouç_icmp
:

256 
i_öp_icmp
:

257 i‡(
vÆ
 > 0)

258 
	`¢¥ötf
(
buf
, (buf), 
	`_
(
ít
->
out
), 
vÆ
);

260 
i_πo_Æg
:

263 
	`ab‹t
();

265 i‡(
buf
[0])

266 
	`¥ötf
("%*s%s\n", 
°©es
[
ty≥
].
ödít
, "", 
buf
);

268 
°©e
 = 
ty≥
;

269 
	}
}

271 
èbèb
 *
	$√wèbÀ
(
èbèb
 *
èbs
, *
tôÀ
)

273 
èbèb
 *
t
;

274 
èbèb
 
dummyèb
;

276 
t
 = 
èbs
;Å->
tôÀ
;Å++) {

277 i‡(!
	`°rcmp
(
tôÀ
, 
t
->title)) {

278 i‡(*(
t
->
Êag
))

279 
	`¥ötf
("%s:\n", 
	`_
(
tôÀ
));

280 
°©e
 = 
n‹mÆ
;

281  
t
;

284 i‡(!
f_unknown
)

285  
NULL
;

286 
	`¥ötf
("%s:\n", 
	`_
(
tôÀ
));

287 
dummyèb
.
tôÀ
 =Åitle;

288 
dummyèb
.
Êag
 = &
f_unknown
;

289  &
dummyèb
;

290 
	}
}

292 
	$¥o˚ss_fd
(
FILE
 *
f
)

294 
buf1
[1024], 
buf2
[1024];

295 *
•
, *
≈
, *
p
;

296 
	`fgës
(
buf1
,  buf1, 
f
)) {

297 
ídÊag
;

298 
èbèb
 *
èb
;

300 i‡(!
	`fgës
(
buf2
,  buf2, 
f
))

302 
•
 = 
	`°rchr
(
buf1
, ':');

303 
≈
 = 
	`°rchr
(
buf2
, ':');

304 i‡(!
≈
 || !
•
)

305 
f‹m©îr
;

306 *
•
 = '\0';

308 
èb
 = 
	`√wèbÀ
(
¢m±abs
, 
buf1
);

309 i‡(
èb
 =
NULL
) {

310 
	`¥ötf
("unknow¿%s\n", 
buf1
);

313 
≈
++;

314 
•
++;

316 
ídÊag
 = 0;

317 !
ídÊag
) {

318 
•
 +
	`°r•n
(sp, " \t\n");

319 
≈
 +
	`°r•n
(np, " \t\n");

322 
p
 = 
•
+
	`°rc•n
(sp, " \t\n");

323 i‡(*
p
 == '\0')

324 
ídÊag
 = 1;

325 *
p
 = '\0';

327 i‡(*
•
 !'\0' && *(
èb
->
Êag
))

328 
	`¥ötvÆ
(
èb
, 
•
, 
	`°πoul
(
≈
, &np, 10));

330 
•
 = 
p
 + 1;

335 
f‹m©îr
:

336 
	`≥º‹
(
	`_
("errorÖarsing /proc/net/snmp"));

338 
	}
}

341 
	$∑r£¢mp
(
Êag_øw
, 
Êag_t˝
, 
Êag_udp
)

343 
FILE
 *
f
;

345 
f_øw
 = 
Êag_øw
; 
f_t˝
 = 
Êag_t˝
; 
f_udp
 = 
Êag_udp
;

347 
f
 = 
	`f›í
("/proc/net/snmp", "r");

348 i‡(!
f
) {

349 
	`≥º‹
(
	`_
("cannot open /proc/net/snmp"));

352 
	`¥o˚ss_fd
(
f
);

354 i‡(
	`„º‹
(
f
))

355 
	`≥º‹
("/proc/net/snmp");

357 
	`f˛o£
(
f
);

359 
f
 = 
	`f›í
("/proc/net/netstat", "r");

361 i‡(
f
) {

362 
	`¥o˚ss_fd
(
f
);

364 i‡(
	`„º‹
(
f
))

365 
	`≥º‹
("/proc/net/netstat");

367 
	`f˛o£
(
f
);

370 
	}
}

373 
	$öôèb
()

375 
èbèb
 *
t
;

378 
t
 = 
¢m±abs
;Å->
tôÀ
;Å++)

379 
	`qs‹t
(
t
->
èb
,Å->
size
 / (
íåy
),

380 (
íåy
), 
cm≥¡rõs
);

381 
	}
}

	@net-tools-1.60/version.h

1 
	#RELEASE
 "√t-toﬁ†1.60"

	)

	@q1.h

1 
	~<°dio.h
>

3 
func1
();

4 
func2
();

5 
func3
();

6 
func4
();

7 
func5
();

8 
func6
();

	@question1.c

1 
	~"q1.h
"

3 
	~<î∫o.h
>

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<f˙é.h
>

7 
	~<°rög.h
>

13 
	#BUFSIZE
 32

	)

16 
	#RW_PERM
 
O_RDWR


	)

19 
	$func1
()

21 
fd
;

22 
buf
[
BUFSIZE
] = {0};

23 
ªad_Àn
=-1;

24 
Àngth
=0;

26 
	`¥ötf
("func1()Ñead with ROÖermissions:\n");

27 
	`¥ötf
("=================================\n");

29 i‡–(
fd
 = 
	`›í
("/home/mrv/mrv", 
O_RDONLY
 | 
O_CREAT
, 0666)) < 0 )

31 
	`≥º‹
("failedÅo open /home/mrv/mrv");

32 
	`exô
(
î∫o
);

36 
Àngth
=
BUFSIZE
;

37 
ªad_Àn
 = 
	`ªad
 (
fd
, 
buf
, 
Àngth
);

38 i‡(
ªad_Àn
 < 0)

41 
	`≥º‹
("errorÑeading file");

42 
	`exô
(-2);

44 
	`¥ötf
("%d byã†havêbì¿ªad from fûê\n",
ªad_Àn
);

46 i‡(
ªad_Àn
 =
BUFSIZE
Ë
buf
[BUFSIZE-1] = '\0';

47 
	`¥ötf
("fûêc⁄ã¡ = %s", 
buf
);

49 
	`˛o£
(
fd
);

51 
	}
}

56 
	$func2
()

58 
fd
 ;

59 
buf
[
BUFSIZE
] = "1234567890";

60 
wrôe_Àn
=-1;

61 
ªad_Àn
=-1;

62 
Àngth
=0;

64 
	`¥ötf
("func2() write with ROÖermissions:\n");

65 
	`¥ötf
("==================================\n");

67 i‡–(
fd
 = 
	`›í
("/home/mrv/q.txt", 
RW_PERM
 | 
O_CREAT
, 0666)) < 0 )

69 
	`≥º‹
("failedÅo open /home/mrv/mrv");

70 
	`exô
(
î∫o
);

74 
wrôe_Àn
 = 
	`wrôe
(
fd
, 
buf
, 
	`°æí
(buf));

75 i‡(
wrôe_Àn
 < 0)

78 
	`≥º‹
("error writing file");

79 
	`exô
(
î∫o
);

81 
	`¥ötf
("%d byã†havêbì¿wrôã¿tÿfûê\n",
wrôe_Àn
);

85 
	`l£ek
 (
fd
, 0, 
SEEK_SET
);

88 
Àngth
=
	`°æí
(
buf
);

89 
ªad_Àn
 = 
	`ªad
 (
fd
, 
buf
, 
Àngth
);

90 i‡(
ªad_Àn
 < 0)

93 
	`≥º‹
("errorÑeading file");

94 
	`exô
(
î∫o
);

96 
	`¥ötf
("%d byã†havêbì¿ªad from fûê\n",
ªad_Àn
);

98 i‡(
ªad_Àn
 =
BUFSIZE
Ë
buf
[BUFSIZE-1] = '\0';

99 
	`¥ötf
("fûêc⁄ã¡ = %s", 
buf
);

100 
	`¥ötf
("\n");

102 
	`˛o£
(
fd
);

104 
	}
}

107 
	$func3
(*
∑th
)

109 
fd
, 
fd1
;

110 *
buf
;

111 
ªad_Àn
=-1;

112 
wrôe_Àn
=-1;

113 
Àngth
=0;

115 i‡(!
∑th
)

117 
	`¥ötf
("fileÖath is NULL\n\r");

121 
	`¥ötf
("func3(Ë˝á fûê%†tÿ~/a.txt:\n", 
∑th
);

122 
	`¥ötf
("===========================================\n");

124 i‡–(
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
 | 
O_CREAT
, 0666)) < 0 )

126 
	`≥º‹
("failedÅo open user file");

127 
	`exô
(
î∫o
);

132 i‡((
Àngth
 = 
	`l£ek
(
fd
, 0, 
SEEK_END
)) < 0 )

134 
	`≥º‹
("failedÅoÜseek user file");

135 
	`exô
(
î∫o
);

137 
	`¥ötf
("l£ekÑëu∫edÅhêfûêÀngth i¿byãs: %d\n",
Àngth
);

140 
buf
 = (*Ë
	`mÆloc
 (
Àngth
);

141 i‡(
buf
 =
NULL
)

143 
	`≥º‹
("errorállocating Memory");

144 
	`exô
(
î∫o
);

146 
	`¥ötf
("AŒoˇãd buf„∏addªs†i† %∞\n",
buf
);

150 
	`l£ek
 (
fd
, 0, 
SEEK_SET
);

151 
ªad_Àn
 = 
	`ªad
 (
fd
, 
buf
, 
Àngth
);

152 i‡(
ªad_Àn
 < 0)

155 
	`≥º‹
("errorÑeading file");

156 
	`exô
(
î∫o
);

158 
	`¥ötf
("%d byã†havêbì¿ªad from fûê\n",
ªad_Àn
);

160 i‡–(
fd1
 = 
	`›í
("/home/mrv/a.txt", 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 0666)) < 0 )

162 
	`≥º‹
("failedÅo open /home/mrv/a.txt");

163 
	`exô
(
î∫o
);

166 
wrôe_Àn
 = 
	`wrôe
 (
fd1
, 
buf
, 
Àngth
);

167 i‡(
wrôe_Àn
 < 0)

170 
	`≥º‹
("error writing file");

171 
	`exô
(
î∫o
);

173 
	`¥ötf
("%d byã†havêbì¿wrôã¿tÿfûê\n",
wrôe_Àn
);

175 
	`‰ì
(
buf
);

176 
	`˛o£
(
fd
);

177 
	`˛o£
(
fd1
);

180 
	}
}

182 
	$func4
()

184 
fd
;

185 
buf
[
BUFSIZE
] = {0};

186 
ªad_Àn
=-1;

187 
Àngth
=0;

189 
	`¥ötf
("func4()Ñeads /dev/zero:\n");

190 
	`¥ötf
("=================================\n");

192 i‡–(
fd
 = 
	`›í
("/dev/zîo", 
O_RDONLY
, 0666)) < 0 )

194 
	`≥º‹
("failedÅo open /dev/zero");

195 
	`exô
(
î∫o
);

199 
Àngth
=
BUFSIZE
;

200 
ªad_Àn
 = 
	`ªad
 (
fd
, 
buf
, 
Àngth
);

201 i‡(
ªad_Àn
 < 0)

204 
	`≥º‹
("errorÑeading file");

205 
	`exô
(-2);

207 
	`¥ötf
("%d byã†havêbì¿ªad from /dev/zîÿ\n",
ªad_Àn
);

209 i‡(
ªad_Àn
 =
BUFSIZE
Ë
buf
[BUFSIZE-1] = '\0';

210 
	`¥ötf
("fûêc⁄ã¡ = %s", 
buf
);

211 
i
;

212 
i
 = 0; i < 
ªad_Àn
; i++)

214 
	`¥ötf
("ch¨ i¿buf[%d] = %d\n\r", 
i
, 
buf
[i]);

217 
	`˛o£
(
fd
);

219 
	}
}

221 
	$func5
()

223 
fd
;

224 
buf
[
BUFSIZE
] = {0};

225 
wrôe_Àn
 =-1;

227 
	`¥ötf
("func5() isÅryingÅo write /dev/full:\n");

228 
	`¥ötf
("========================================\n");

230 i‡–(
fd
 = 
	`›í
("/dev/fuŒ", 
O_RDWR
, 0666)) < 0 )

232 
	`≥º‹
("failedÅo open /dev/full");

233 
	`exô
(
î∫o
);

236 
wrôe_Àn
 = 
	`wrôe
 (
fd
, 
buf
, 
BUFSIZE
);

237 i‡(
wrôe_Àn
 < 0)

240 
	`≥º‹
("error writing file");

241 
	`exô
(
î∫o
);

243 
	`¥ötf
("%d byã†havêbì¿wrôã¿tÿfûê/dev/fuŒ \n",
wrôe_Àn
);

245 
	`˛o£
(
fd
);

247 
	}
}

249 **
ívú⁄
;

250 
	$func6
()

252 
fd
;

253 
wrôe_Àn
 =-1;

254 **
v¨
;

255 *
fûe
 = 
	`°rˇt
(
	`gëív
("HOME"), "/environment");

257 
	`¥ötf
("func6(Ëi†wrôögáŒ ENV v¨übÀ†ötÿ%s:\n", 
fûe
);

258 
	`¥ötf
("====================================================\n");

260 i‡–(
fd
 = 
	`›í
(
fûe
 , 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 0666)) < 0 )

262 
	`≥º‹
("failedÅo open /home/mrv/envrionment");

263 
	`exô
(
î∫o
);

266 
v¨
=
ívú⁄
; *v¨!=
NULL
; ++var)

269 
wrôe_Àn
 = 
	`wrôe
 (
fd
, *
v¨
, 
	`°æí
(*var));

270 i‡(
wrôe_Àn
 < 0)

273 
	`≥º‹
("error writing file");

274 
	`exô
(
î∫o
);

276 
	`wrôe
(
fd
, "\n", 1);

281 
	}
}

	@serial_program.c

8 
	~<uni°d.h
>

9 
	~<sys/ty≥s.h
>

10 
	~<î∫o.h
>

11 
	~<°dio.h
>

12 
	~<sys/waô.h
>

13 
	~<°dlib.h
>

17 
	~<ãrmios.h
>

18 
	~<f˙é.h
>

19 
	~<°rög.h
>

21 
	$maö
()

23 
fd
;

24 
ãrmios
 
›ti⁄s
;

25 
n
;

26 
buff
[255];

30 
fd
 = 
	`›í
("/dev/âyUSB0", 
O_RDWR
 | 
O_NOCTTY
 | 
O_NDELAY
);

33 if(
fd
 == -1) {

34 
	`¥ötf
("ERROR Open Serial Port!");

35 
	`exô
(-1);

39 
	`tcgë©å
(
fd
, &
›ti⁄s
);

40 
	`cf£ti•ìd
(&
›ti⁄s
, 
B9600
);

41 
	`cf£to•ìd
(&
›ti⁄s
, 
B9600
);

42 
›ti⁄s
.
c_cÊag
 = (›ti⁄s.c_cÊag & ~
CSIZE
Ë| 
CS8
;

43 
›ti⁄s
.
c_iÊag
 = 
IGNBRK
;

44 
›ti⁄s
.
c_lÊag
 = 0;

45 
›ti⁄s
.
c_oÊag
 = 0;

46 
›ti⁄s
.
c_cÊag
 |
CLOCAL
 | 
CREAD
;

47 
›ti⁄s
.
c_cc
[
VMIN
] = 1;

48 
›ti⁄s
.
c_cc
[
VTIME
] = 5;

49 
›ti⁄s
.
c_iÊag
 &~(
IXON
|
IXOFF
|
IXANY
);

50 
›ti⁄s
.
c_cÊag
 &~(
PARENB
 | 
PARODD
);

53 
	`tc£èâr
(
fd
, 
TCSANOW
, &
›ti⁄s
);

55 
	`tcÊush
(
fd
,
TCIOFLUSH
);

58 
	`wrôe
(
fd
,"YOUR COMMAND STRING HERE",24);

61 
n
 = 
	`ªad
(
fd
,
buff
,255);

62 
buff
[
n
] = 0;

63 if(
n
>0)

65 
	`¥ötf
("%s",
buff
);

67 }
	`°∫cmp
(
buff
,"bye",3));

69 
	`˛o£
(
fd
);

71 
	}
}

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/arpa/nameser.h

52 #i‚de‡
_ARPA_NAMESER_H_


53 
	#_ARPA_NAMESER_H_


	)

57 
	#BIND_4_COMPAT


	)

59 
	~<sys/∑øm.h
>

60 #i‡(!
deföed
(
BSD
)) || (BSD < 199306)

61 
	~<sys/bôy≥s.h
>

63 
	~<sys/ty≥s.h
>

65 
	~<sys/cdefs.h
>

75 
	#__NAMESER
 19991006

	)

79 
	#NS_PACKETSZ
 512

	)

80 
	#NS_MAXDNAME
 1025

	)

81 
	#NS_MAXMSG
 65535

	)

82 
	#NS_MAXCDNAME
 255

	)

83 
	#NS_MAXLABEL
 63

	)

84 
	#NS_HFIXEDSZ
 12

	)

85 
	#NS_QFIXEDSZ
 4

	)

86 
	#NS_RRFIXEDSZ
 10

	)

87 
	#NS_INT32SZ
 4

	)

88 
	#NS_INT16SZ
 2

	)

89 
	#NS_INT8SZ
 1

	)

90 
	#NS_INADDRSZ
 4

	)

91 
	#NS_IN6ADDRSZ
 16

	)

92 
	#NS_CMPRSFLGS
 0xc0

	)

93 
	#NS_DEFAULTPORT
 53

	)

98 
	e__ns_£˘
 {

99 
	mns_s_qd
 = 0,

100 
	mns_s_zn
 = 0,

101 
	mns_s_™
 = 1,

102 
	mns_s_¥
 = 1,

103 
	mns_s_ns
 = 2,

104 
	mns_s_ud
 = 2,

105 
	mns_s_¨
 = 3,

106 
	mns_s_max
 = 4

107 } 
	tns_£˘
;

114 
	s__ns_msg
 {

115 c⁄° 
u_ch¨
 *
	m_msg
, *
	m_eom
;

116 
u_öt16_t
 
	m_id
, 
	m_Êags
, 
	m_cou¡s
[
ns_s_max
];

117 c⁄° 
u_ch¨
 *
	m_£˘i⁄s
[
ns_s_max
];

118 
ns_£˘
 
	m_£˘
;

119 
	m_ºnum
;

120 c⁄° 
u_ch¨
 *
	m_msg_±r
;

121 } 
	tns_msg
;

124 
	s_ns_Êagd©a
 { 
	mmask
, 
	mshi·
; };

125 c⁄° 
_ns_Êagd©a
 _ns_flagdata[];

129 
	#ns_msg_id
(
h™dÀ
Ë((h™dÀ).
_id
 + 0)

	)

130 
	#ns_msg_ba£
(
h™dÀ
Ë((h™dÀ).
_msg
 + 0)

	)

131 
	#ns_msg_íd
(
h™dÀ
Ë((h™dÀ).
_eom
 + 0)

	)

132 
	#ns_msg_size
(
h™dÀ
Ë((h™dÀ).
_eom
 - (h™dÀ).
_msg
)

	)

133 
	#ns_msg_cou¡
(
h™dÀ
, 
£˘i⁄
Ë((h™dÀ).
_cou¡s
[£˘i⁄] + 0)

	)

138 
	s__ns_º
 {

139 
	m«me
[
NS_MAXDNAME
];

140 
u_öt16_t
 
	mty≥
;

141 
u_öt16_t
 
	mº_˛ass
;

142 
u_öt32_t
 
	mâl
;

143 
u_öt16_t
 
	mrdÀngth
;

144 c⁄° 
u_ch¨
 * 
	mrd©a
;

145 } 
	tns_º
;

148 
	#ns_º_«me
(
º
Ë((‘r).
«me
[0] !'\0'Ë? (º).«mê: ".")

	)

149 
	#ns_º_ty≥
(
º
Ë((
ns_ty≥
)(‘r).
ty≥
 + 0))

	)

150 
	#ns_º_˛ass
(
º
Ë((
ns_˛ass
)(‘r).
º_˛ass
 + 0))

	)

151 
	#ns_º_âl
(
º
Ë(‘r).
âl
 + 0)

	)

152 
	#ns_º_rdÀn
(
º
Ë(‘r).
rdÀngth
 + 0)

	)

153 
	#ns_º_rd©a
(
º
Ë(‘r).
rd©a
 + 0)

	)

160 
	e__ns_Êag
 {

161 
	mns_f_qr
,

162 
	mns_f_›code
,

163 
	mns_f_Ø
,

164 
	mns_f_tc
,

165 
	mns_f_rd
,

166 
	mns_f_ø
,

167 
	mns_f_z
,

168 
	mns_f_ad
,

169 
	mns_f_cd
,

170 
	mns_f_rcode
,

171 
	mns_f_max


172 } 
	tns_Êag
;

177 
	e__ns_›code
 {

178 
	mns_o_quîy
 = 0,

179 
	mns_o_iquîy
 = 1,

180 
	mns_o_°©us
 = 2,

182 
	mns_o_nŸify
 = 4,

183 
	mns_o_upd©e
 = 5,

184 
	mns_o_max
 = 6

185 } 
	tns_›code
;

190 
	e__ns_rcode
 {

191 
	mns_r_n€º‹
 = 0,

192 
	mns_r_f‹mîr
 = 1,

193 
	mns_r_£rvÁû
 = 2,

194 
	mns_r_nxdomaö
 = 3,

195 
	mns_r_nŸim∂
 = 4,

196 
	mns_r_ªfu£d
 = 5,

198 
	mns_r_yxdomaö
 = 6,

199 
	mns_r_yxº£t
 = 7,

200 
	mns_r_nxº£t
 = 8,

201 
	mns_r_nŸauth
 = 9,

202 
	mns_r_nŸz⁄e
 = 10,

203 
	mns_r_max
 = 11,

205 
	mns_r_badvîs
 = 16,

207 
	mns_r_badsig
 = 16,

208 
	mns_r_badkey
 = 17,

209 
	mns_r_badtime
 = 18

210 } 
	tns_rcode
;

213 
	e__ns_upd©e_›î©i⁄
 {

214 
	mns_u›_dñëe
 = 0,

215 
	mns_u›_add
 = 1,

216 
	mns_u›_max
 = 2

217 } 
	tns_upd©e_›î©i⁄
;

222 
	sns_tsig_key
 {

223 
	m«me
[
NS_MAXDNAME
], 
	mÆg
[NS_MAXDNAME];

224 *
	md©a
;

225 
	mÀn
;

227 
ns_tsig_key
 
	tns_tsig_key
;

232 
	sns_t˝_tsig_°©e
 {

233 
	mcou¡î
;

234 
d°_key
 *
	mkey
;

235 *
	m˘x
;

236 
	msig
[
NS_PACKETSZ
];

237 
	msigÀn
;

239 
ns_t˝_tsig_°©e
 
	tns_t˝_tsig_°©e
;

241 
	#NS_TSIG_FUDGE
 300

	)

242 
	#NS_TSIG_TCP_COUNT
 100

	)

243 
	#NS_TSIG_ALG_HMAC_MD5
 "HMAC-MD5.SIG-ALG.REG.INT"

	)

245 
	#NS_TSIG_ERROR_NO_TSIG
 -10

	)

246 
	#NS_TSIG_ERROR_NO_SPACE
 -11

	)

247 
	#NS_TSIG_ERROR_FORMERR
 -12

	)

252 
	e__ns_ty≥
 {

253 
	mns_t_övÆid
 = 0,

254 
	mns_t_a
 = 1,

255 
	mns_t_ns
 = 2,

256 
	mns_t_md
 = 3,

257 
	mns_t_mf
 = 4,

258 
	mns_t_˙ame
 = 5,

259 
	mns_t_sﬂ
 = 6,

260 
	mns_t_mb
 = 7,

261 
	mns_t_mg
 = 8,

262 
	mns_t_mr
 = 9,

263 
	mns_t_nuŒ
 = 10,

264 
	mns_t_wks
 = 11,

265 
	mns_t_±r
 = 12,

266 
	mns_t_höfo
 = 13,

267 
	mns_t_möfo
 = 14,

268 
	mns_t_mx
 = 15,

269 
	mns_t_txt
 = 16,

270 
	mns_t_Ω
 = 17,

271 
	mns_t_afsdb
 = 18,

272 
	mns_t_x25
 = 19,

273 
	mns_t_isdn
 = 20,

274 
	mns_t_π
 = 21,

275 
	mns_t_nßp
 = 22,

276 
	mns_t_nßp_±r
 = 23,

277 
	mns_t_sig
 = 24,

278 
	mns_t_key
 = 25,

279 
	mns_t_px
 = 26,

280 
	mns_t_gpos
 = 27,

281 
	mns_t_ØØ
 = 28,

282 
	mns_t_loc
 = 29,

283 
	mns_t_nxt
 = 30,

284 
	mns_t_eid
 = 31,

285 
	mns_t_nimloc
 = 32,

286 
	mns_t_§v
 = 33,

287 
	mns_t_©ma
 = 34,

288 
	mns_t_«±r
 = 35,

289 
	mns_t_kx
 = 36,

290 
	mns_t_˚π
 = 37,

291 
	mns_t_a6
 = 38,

292 
	mns_t_d«me
 = 39,

293 
	mns_t_sök
 = 40,

294 
	mns_t_›t
 = 41,

295 
	mns_t_≠l
 = 42,

296 
	mns_t_tkey
 = 249,

297 
	mns_t_tsig
 = 250,

298 
	mns_t_ix‰
 = 251,

299 
	mns_t_ax‰
 = 252,

300 
	mns_t_maûb
 = 253,

301 
	mns_t_maûa
 = 254,

302 
	mns_t_™y
 = 255,

303 
	mns_t_zx‰
 = 256,

304 
	mns_t_max
 = 65536

305 } 
	tns_ty≥
;

308 
	#ns_t_qt_p
(
t
Ë(
	`ns_t_x‰_p
—Ë|| (tË=
ns_t_™y
 || \

309 (
t
Ë=
ns_t_maûb
 || (tË=
ns_t_maûa
)

	)

311 
	#ns_t_mº_p
(
t
Ë(—Ë=
ns_t_tsig
 || (tË=
ns_t_›t
)

	)

313 
	#ns_t_º_p
(
t
Ë(!
	`ns_t_qt_p
—Ë&& !
	`ns_t_mº_p
—))

	)

314 
	#ns_t_udp_p
(
t
Ë(—Ë!
ns_t_ax‰
 && (tË!
ns_t_zx‰
)

	)

315 
	#ns_t_x‰_p
(
t
Ë(—Ë=
ns_t_ax‰
 || (tË=
ns_t_ix‰
 || \

316 (
t
Ë=
ns_t_zx‰
)

	)

321 
	e__ns_˛ass
 {

322 
	mns_c_övÆid
 = 0,

323 
	mns_c_ö
 = 1,

324 
	mns_c_2
 = 2,

325 
	mns_c_chaos
 = 3,

326 
	mns_c_hs
 = 4,

328 
	mns_c_n⁄e
 = 254,

329 
	mns_c_™y
 = 255,

330 
	mns_c_max
 = 65536

331 } 
	tns_˛ass
;

335 
	e__ns_key_ty≥s
 {

336 
	mns_kt_rß
 = 1,

337 
	mns_kt_dh
 = 2,

338 
	mns_kt_dß
 = 3,

339 
	mns_kt_¥iv©e
 = 254

340 } 
	tns_key_ty≥s
;

342 
	e__ns_˚π_ty≥s
 {

343 
	m˚π_t_pkix
 = 1,

344 
	m˚π_t_•ki
 = 2,

345 
	m˚π_t_pgp
 = 3,

346 
	m˚π_t_uæ
 = 253,

347 
	m˚π_t_oid
 = 254

348 } 
	tns_˚π_ty≥s
;

351 
	#NS_KEY_TYPEMASK
 0xC000

	)

352 
	#NS_KEY_TYPE_AUTH_CONF
 0x0000

	)

353 
	#NS_KEY_TYPE_CONF_ONLY
 0x8000

	)

354 
	#NS_KEY_TYPE_AUTH_ONLY
 0x4000

	)

355 
	#NS_KEY_TYPE_NO_KEY
 0xC000

	)

357 
	#NS_KEY_NO_AUTH
 0x8000

	)

358 
	#NS_KEY_NO_CONF
 0x4000

	)

359 
	#NS_KEY_RESERVED2
 0x2000

	)

360 
	#NS_KEY_EXTENDED_FLAGS
 0x1000

	)

361 
	#NS_KEY_RESERVED4
 0x0800

	)

362 
	#NS_KEY_RESERVED5
 0x0400

	)

363 
	#NS_KEY_NAME_TYPE
 0x0300

	)

364 
	#NS_KEY_NAME_USER
 0x0000

	)

365 
	#NS_KEY_NAME_ENTITY
 0x0200

	)

366 
	#NS_KEY_NAME_ZONE
 0x0100

	)

367 
	#NS_KEY_NAME_RESERVED
 0x0300

	)

368 
	#NS_KEY_RESERVED8
 0x0080

	)

369 
	#NS_KEY_RESERVED9
 0x0040

	)

370 
	#NS_KEY_RESERVED10
 0x0020

	)

371 
	#NS_KEY_RESERVED11
 0x0010

	)

372 
	#NS_KEY_SIGNATORYMASK
 0x000F

	)

373 
	#NS_KEY_RESERVED_BITMASK
 ( 
NS_KEY_RESERVED2
 | \

374 
NS_KEY_RESERVED4
 | \

375 
NS_KEY_RESERVED5
 | \

376 
NS_KEY_RESERVED8
 | \

377 
NS_KEY_RESERVED9
 | \

378 
NS_KEY_RESERVED10
 | \

379 
NS_KEY_RESERVED11
 )

	)

380 
	#NS_KEY_RESERVED_BITMASK2
 0xFFFF

	)

382 
	#NS_ALG_MD5RSA
 1

	)

383 
	#NS_ALG_DH
 2

	)

384 
	#NS_ALG_DSA
 3

	)

385 
	#NS_ALG_DSS
 
NS_ALG_DSA


	)

386 
	#NS_ALG_EXPIRE_ONLY
 253

	)

387 
	#NS_ALG_PRIVATE_OID
 254

	)

390 
	#NS_KEY_PROT_TLS
 1

	)

391 
	#NS_KEY_PROT_EMAIL
 2

	)

392 
	#NS_KEY_PROT_DNSSEC
 3

	)

393 
	#NS_KEY_PROT_IPSEC
 4

	)

394 
	#NS_KEY_PROT_ANY
 255

	)

397 
	#NS_MD5RSA_MIN_BITS
 512

	)

398 
	#NS_MD5RSA_MAX_BITS
 4096

	)

400 
	#NS_MD5RSA_MAX_BYTES
 ((
NS_MD5RSA_MAX_BITS
+7/8)*2+3)

	)

402 
	#NS_MD5RSA_MAX_BASE64
 (((
NS_MD5RSA_MAX_BYTES
+2)/3)*4)

	)

403 
	#NS_MD5RSA_MIN_SIZE
 ((
NS_MD5RSA_MIN_BITS
+7)/8)

	)

404 
	#NS_MD5RSA_MAX_SIZE
 ((
NS_MD5RSA_MAX_BITS
+7)/8)

	)

406 
	#NS_DSA_SIG_SIZE
 41

	)

407 
	#NS_DSA_MIN_SIZE
 213

	)

408 
	#NS_DSA_MAX_BYTES
 405

	)

411 
	#NS_SIG_TYPE
 0

	)

412 
	#NS_SIG_ALG
 2

	)

413 
	#NS_SIG_LABELS
 3

	)

414 
	#NS_SIG_OTTL
 4

	)

415 
	#NS_SIG_EXPIR
 8

	)

416 
	#NS_SIG_SIGNED
 12

	)

417 
	#NS_SIG_FOOT
 16

	)

418 
	#NS_SIG_SIGNER
 18

	)

420 
	#NS_NXT_BITS
 8

	)

421 
	#NS_NXT_BIT_SET
–
n
,
p
Ë’[“)/
NS_NXT_BITS
] |(0x80>>(“)%NS_NXT_BITS)))

	)

422 
	#NS_NXT_BIT_CLEAR
(
n
,
p
Ë’[“)/
NS_NXT_BITS
] &~(0x80>>(“)%NS_NXT_BITS)))

	)

423 
	#NS_NXT_BIT_ISSET
(
n
,
p
Ë’[“)/
NS_NXT_BITS
] & (0x80>>(“)%NS_NXT_BITS)))

	)

424 
	#NS_NXT_MAX
 127

	)

429 
	#NS_OPT_DNSSEC_OK
 0x8000U

	)

430 
	#NS_OPT_NSID
 3

	)

435 
	#NS_GET16
(
s
, 
˝
) do { \

436 c⁄° 
u_ch¨
 *
t_˝
 = (c⁄° u_ch¨ *)(
˝
); \

437 (
s
Ë((
u_öt16_t
)
t_˝
[0] << 8) \

438 | ((
u_öt16_t
)
t_˝
[1]) \

440 (
˝
Ë+
NS_INT16SZ
; \

441 } 0)

	)

443 
	#NS_GET32
(
l
, 
˝
) do { \

444 c⁄° 
u_ch¨
 *
t_˝
 = (c⁄° u_ch¨ *)(
˝
); \

445 (
l
Ë((
u_öt32_t
)
t_˝
[0] << 24) \

446 | ((
u_öt32_t
)
t_˝
[1] << 16) \

447 | ((
u_öt32_t
)
t_˝
[2] << 8) \

448 | ((
u_öt32_t
)
t_˝
[3]) \

450 (
˝
Ë+
NS_INT32SZ
; \

451 } 0)

	)

453 
	#NS_PUT16
(
s
, 
˝
) do { \

454 
u_öt16_t
 
t_s
 = (u_öt16_t)(
s
); \

455 
u_ch¨
 *
t_˝
 = (u_ch¨ *)(
˝
); \

456 *
t_˝
++ = 
t_s
 >> 8; \

457 *
t_˝
 = 
t_s
; \

458 (
˝
Ë+
NS_INT16SZ
; \

459 } 0)

	)

461 
	#NS_PUT32
(
l
, 
˝
) do { \

462 
u_öt32_t
 
t_l
 = (u_öt32_t)(
l
); \

463 
u_ch¨
 *
t_˝
 = (u_ch¨ *)(
˝
); \

464 *
t_˝
++ = 
t_l
 >> 24; \

465 *
t_˝
++ = 
t_l
 >> 16; \

466 *
t_˝
++ = 
t_l
 >> 8; \

467 *
t_˝
 = 
t_l
; \

468 (
˝
Ë+
NS_INT32SZ
; \

469 } 0)

	)

471 
__BEGIN_DECLS


472 
	$ns_msg_gëÊag
 (
ns_msg
, Ë
__THROW
;

473 
u_öt
 
	$ns_gë16
 (c⁄° 
u_ch¨
 *Ë
__THROW
;

474 
u_l⁄g
 
	$ns_gë32
 (c⁄° 
u_ch¨
 *Ë
__THROW
;

475 
	$ns_put16
 (
u_öt
, 
u_ch¨
 *Ë
__THROW
;

476 
	$ns_put32
 (
u_l⁄g
, 
u_ch¨
 *Ë
__THROW
;

477 
	$ns_öô∑r£
 (c⁄° 
u_ch¨
 *, , 
ns_msg
 *Ë
__THROW
;

478 
	$ns_skùº
 (c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *, 
ns_£˘
, )

479 
__THROW
;

480 
	$ns_∑r£º
 (
ns_msg
 *, 
ns_£˘
, , 
ns_º
 *Ë
__THROW
;

481 
	$ns_•röår
 (c⁄° 
ns_msg
 *, c⁄° 
ns_º
 *,

482 c⁄° *, c⁄° *, *, 
size_t
)

483 
__THROW
;

484 
	$ns_•röårf
 (c⁄° 
u_ch¨
 *, 
size_t
, const *,

485 
ns_˛ass
, 
ns_ty≥
, 
u_l⁄g
, c⁄° 
u_ch¨
 *,

486 
size_t
, const *, const *,

487 *, 
size_t
Ë
__THROW
;

488 
	$ns_f‹m©_âl
 (
u_l⁄g
, *, 
size_t
Ë
__THROW
;

489 
	$ns_∑r£_âl
 (c⁄° *, 
u_l⁄g
 *Ë
__THROW
;

490 
u_öt32_t
 
	$ns_d©ëo£cs
 (c⁄° *, *Ë
__THROW
;

491 
	$ns_«me_¡ﬁ
 (c⁄° 
u_ch¨
 *, u_ch¨ *, 
size_t
Ë
__THROW
;

492 
	$ns_«me_¡›
 (c⁄° 
u_ch¨
 *, *, 
size_t
Ë
__THROW
;

493 
	$ns_«me_±⁄
 (c⁄° *, 
u_ch¨
 *, 
size_t
Ë
__THROW
;

494 
	$ns_«me_u≈ack
 (c⁄° 
u_ch¨
 *, const u_char *,

495 c⁄° 
u_ch¨
 *, u_ch¨ *, 
size_t
Ë
__THROW
;

496 
	$ns_«me_∑ck
 (c⁄° 
u_ch¨
 *, u_char *, ,

497 c⁄° 
u_ch¨
 **, c⁄° u_ch¨ **Ë
__THROW
;

498 
	$ns_«me_uncom¥ess
 (c⁄° 
u_ch¨
 *, const u_char *,

499 c⁄° 
u_ch¨
 *, *, 
size_t
Ë
__THROW
;

500 
	$ns_«me_com¥ess
 (c⁄° *, 
u_ch¨
 *, 
size_t
,

501 c⁄° 
u_ch¨
 **, c⁄° u_ch¨ **Ë
__THROW
;

502 
	$ns_«me_skù
 (c⁄° 
u_ch¨
 **, c⁄° u_ch¨ *Ë
__THROW
;

503 
	$ns_«me_rﬁlback
 (c⁄° 
u_ch¨
 *, const u_char **,

504 c⁄° 
u_ch¨
 **Ë
__THROW
;

505 
	$ns_sign
 (
u_ch¨
 *, *, , , *,

506 c⁄° 
u_ch¨
 *, , u_ch¨ *, *, 
time_t
Ë
__THROW
;

507 
	$ns_sign2
 (
u_ch¨
 *, *, , , *,

508 c⁄° 
u_ch¨
 *, , u_ch¨ *, *, 
time_t
,

509 
u_ch¨
 **, u_ch¨ **Ë
__THROW
;

510 
	$ns_sign_t˝
 (
u_ch¨
 *, *, , ,

511 
ns_t˝_tsig_°©e
 *, Ë
__THROW
;

512 
	$ns_sign_t˝2
 (
u_ch¨
 *, *, , ,

513 
ns_t˝_tsig_°©e
 *, ,

514 
u_ch¨
 **, u_ch¨ **Ë
__THROW
;

515 
	$ns_sign_t˝_öô
 (*, c⁄° 
u_ch¨
 *, ,

516 
ns_t˝_tsig_°©e
 *Ë
__THROW
;

517 
u_ch¨
 *
	$ns_föd_tsig
 (
u_ch¨
 *, u_ch¨ *Ë
__THROW
;

518 
	$ns_vîify
 (
u_ch¨
 *, *, *, const u_char *, ,

519 
u_ch¨
 *, *, 
time_t
 *, Ë
__THROW
;

520 
	$ns_vîify_t˝
 (
u_ch¨
 *, *, 
ns_t˝_tsig_°©e
 *, )

521 
__THROW
;

522 
	$ns_vîify_t˝_öô
 (*, c⁄° 
u_ch¨
 *, ,

523 
ns_t˝_tsig_°©e
 *Ë
__THROW
;

524 
	$ns_ßmedomaö
 (c⁄° *, c⁄° *Ë
__THROW
;

525 
	$ns_subdomaö
 (c⁄° *, c⁄° *Ë
__THROW
;

526 
	$ns_makeˇn⁄
 (c⁄° *, *, 
size_t
Ë
__THROW
;

527 
	$ns_ßmíame
 (c⁄° *, c⁄° *Ë
__THROW
;

528 
__END_DECLS


530 #ifde‡
BIND_4_COMPAT


531 
	~<¨∑/«me£r_com∑t.h
>

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

90 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_BSD


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3));

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

195 
	#ªaddú_r
 
ªaddú64_r


	)

199 #ifde‡
__USE_LARGEFILE64


200 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

201 
dúít64
 *
__ª°ri˘
 
__íåy
,

202 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

203 
	`__n⁄nuŒ
 ((1, 2, 3));

208 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

210 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


211 
	~<bôs/ty≥s.h
>

214 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

220 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


223 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


226 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

229 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


230 #i‚de‡
MAXNAMLEN


232 
	~<bôs/posix1_lim.h
>

235 #ifde‡
NAME_MAX


236 
	#MAXNAMLEN
 
NAME_MAX


	)

238 
	#MAXNAMLEN
 255

	)

243 
	#__√ed_size_t


	)

244 
	~<°ddef.h
>

253 #i‚de‡
__USE_FILE_OFFSET64


254 
	`sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

255 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

256 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

257 (*
__cmp
Ë(c⁄° 
dúít
 **,

258 c⁄° 
dúít
 **))

259 
	`__n⁄nuŒ
 ((1, 2));

261 #ifde‡
__REDIRECT


262 
	`__REDIRECT
 (
sˇndú
,

263 (c⁄° *
__ª°ri˘
 
__dú
,

264 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

265 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

266 (*
__cmp
Ë(c⁄° 
dúít
 **,

267 c⁄° 
dúít
 **)),

268 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

270 
	#sˇndú
 
sˇndú64


	)

274 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


277 
	`sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

278 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

279 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

280 (*
__cmp
Ë(c⁄° 
dúít64
 **,

281 c⁄° 
dúít64
 **))

282 
	`__n⁄nuŒ
 ((1, 2));

285 #ifde‡
__USE_GNU


291 #i‚de‡
__USE_FILE_OFFSET64


292 
	`sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

293 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

294 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

295 (*
__cmp
Ë(c⁄° 
dúít
 **,

296 c⁄° 
dúít
 **))

297 
	`__n⁄nuŒ
 ((2, 3));

299 #ifde‡
__REDIRECT


300 
	`__REDIRECT
 (
sˇndú©
,

301 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

302 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

303 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

304 (*
__cmp
Ë(c⁄° 
dúít
 **,

305 c⁄° 
dúít
 **)),

306 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

308 
	#sˇndú©
 
sˇndú©64


	)

314 
	`sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

315 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

316 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

317 (*
__cmp
Ë(c⁄° 
dúít64
 **,

318 c⁄° 
dúít64
 **))

319 
	`__n⁄nuŒ
 ((2, 3));

323 #i‚de‡
__USE_FILE_OFFSET64


324 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

325 c⁄° 
dúít
 **
__e2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

328 #ifde‡
__REDIRECT


329 
	`__REDIRECT_NTH
 (
Æphas‹t
,

330 (c⁄° 
dúít
 **
__e1
,

331 c⁄° 
dúít
 **
__e2
),

332 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

334 
	#Æphas‹t
 
Æphas‹t64


	)

338 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


339 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

340 c⁄° 
dúít64
 **
__e2
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


351 #i‚de‡
__USE_FILE_OFFSET64


352 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

353 
size_t
 
__nbyãs
,

354 
__off_t
 *
__ª°ri˘
 
__ba£p
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

357 #ifde‡
__REDIRECT


358 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

359 (
__fd
, *
__ª°ri˘
 
__buf
,

360 
size_t
 
__nbyãs
,

361 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

362 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

364 
	#gëdúíåõs
 
gëdúíåõs64


	)

368 #ifde‡
__USE_LARGEFILE64


369 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

370 
size_t
 
__nbyãs
,

371 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

372 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

376 #ifde‡
__USE_GNU


378 #i‚de‡
__USE_FILE_OFFSET64


379 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

380 c⁄° 
dúít
 **
__e2
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

383 #ifde‡
__REDIRECT


384 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

385 (c⁄° 
dúít
 **
__e1
,

386 c⁄° 
dúít
 **
__e2
),

387 
vîsi⁄s‹t64
)

388 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

390 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

394 #ifde‡
__USE_LARGEFILE64


395 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

396 c⁄° 
dúít64
 **
__e2
)

397 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

401 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libintl.h

20 #i‚de‡
_LIBINTL_H


21 
	#_LIBINTL_H
 1

	)

23 
	~<„©uªs.h
>

27 
	#__USE_GNU_GETTEXT
 1

	)

31 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

32 ((
maj‹
Ë=0 ? 1 : -1)

	)

34 
__BEGIN_DECLS


39 *
	$gëãxt
 (c⁄° *
__msgid
)

40 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

44 *
	$dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

45 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

46 *
	$__dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

47 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

51 *
	$dcgëãxt
 (c⁄° *
__domaö«me
,

52 c⁄° *
__msgid
, 
__ˇãg‹y
)

53 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

54 *
	$__dcgëãxt
 (c⁄° *
__domaö«me
,

55 c⁄° *
__msgid
, 
__ˇãg‹y
)

56 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

61 *
	$ngëãxt
 (c⁄° *
__msgid1
, c⁄° *
__msgid2
,

62 
__n
)

63 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

67 *
	$dngëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

68 c⁄° *
__msgid2
, 
__n
)

69 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

73 *
	$d˙gëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

74 c⁄° *
__msgid2
, 
__n
,

75 
__ˇãg‹y
)

76 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

82 *
	$ãxtdomaö
 (c⁄° *
__domaö«me
Ë
__THROW
;

86 *
	$bödãxtdomaö
 (c⁄° *
__domaö«me
,

87 c⁄° *
__dú«me
Ë
__THROW
;

91 *
	$böd_ãxtdomaö_code£t
 (c⁄° *
__domaö«me
,

92 c⁄° *
__code£t
Ë
__THROW
;

96 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


99 
	#__√ed_NULL


	)

100 
	~<°ddef.h
>

103 
	~<loˇÀ.h
>

109 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

111 
	#dgëãxt
(
domaö«me
, 
msgid
) \

112 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

114 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

116 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

117 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

121 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/atalk.h

1 #i‚de‡
__LINUX_ATALK_H__


2 
	#__LINUX_ATALK_H__


	)

4 
	~<löux/ty≥s.h
>

5 
	~<asm/byã‹dî.h
>

6 
	~<löux/sockë.h
>

14 
	#ATPORT_FIRST
 1

	)

15 
	#ATPORT_RESERVED
 128

	)

16 
	#ATPORT_LAST
 254

	)

17 
	#ATADDR_ANYNET
 (
__u16
)0

	)

18 
	#ATADDR_ANYNODE
 (
__u8
)0

	)

19 
	#ATADDR_ANYPORT
 (
__u8
)0

	)

20 
	#ATADDR_BCAST
 (
__u8
)255

	)

21 
	#DDP_MAXSZ
 587

	)

22 
	#DDP_MAXHOPS
 15

	)

24 
	#SIOCATALKDIFADDR
 (
SIOCPROTOPRIVATE
 + 0)

	)

26 
	s©Æk_addr
 {

27 
__be16
 
	ms_√t
;

28 
__u8
 
	ms_node
;

31 
	ssockaddr_©
 {

32 
__kî√l_ß_Ámûy_t
 
	mßt_Ámûy
;

33 
__u8
 
	mßt_p‹t
;

34 
©Æk_addr
 
	mßt_addr
;

35 
	mßt_zîo
[8];

38 
	s©Æk_√å™ge
 {

39 
__u8
 
	mƒ_pha£
;

40 
__be16
 
	mƒ_fú°√t
;

41 
__be16
 
	mƒ_œ°√t
;

	@/usr/include/linux/ax25.h

6 #i‚def 
AX25_KERNEL_H


7 
	#AX25_KERNEL_H


	)

9 
	~<löux/sockë.h
>

11 
	#AX25_MTU
 256

	)

12 
	#AX25_MAX_DIGIS
 8

	)

14 
	#AX25_WINDOW
 1

	)

15 
	#AX25_T1
 2

	)

16 
	#AX25_N2
 3

	)

17 
	#AX25_T3
 4

	)

18 
	#AX25_T2
 5

	)

19 
	#AX25_BACKOFF
 6

	)

20 
	#AX25_EXTSEQ
 7

	)

21 
	#AX25_PIDINCL
 8

	)

22 
	#AX25_IDLE
 9

	)

23 
	#AX25_PACLEN
 10

	)

24 
	#AX25_IAMDIGI
 12

	)

26 
	#AX25_KILL
 99

	)

28 
	#SIOCAX25GETUID
 (
SIOCPROTOPRIVATE
+0)

	)

29 
	#SIOCAX25ADDUID
 (
SIOCPROTOPRIVATE
+1)

	)

30 
	#SIOCAX25DELUID
 (
SIOCPROTOPRIVATE
+2)

	)

31 
	#SIOCAX25NOUID
 (
SIOCPROTOPRIVATE
+3)

	)

32 
	#SIOCAX25OPTRT
 (
SIOCPROTOPRIVATE
+7)

	)

33 
	#SIOCAX25CTLCON
 (
SIOCPROTOPRIVATE
+8)

	)

34 
	#SIOCAX25GETINFOOLD
 (
SIOCPROTOPRIVATE
+9)

	)

35 
	#SIOCAX25ADDFWD
 (
SIOCPROTOPRIVATE
+10)

	)

36 
	#SIOCAX25DELFWD
 (
SIOCPROTOPRIVATE
+11)

	)

37 
	#SIOCAX25DEVCTL
 (
SIOCPROTOPRIVATE
+12)

	)

38 
	#SIOCAX25GETINFO
 (
SIOCPROTOPRIVATE
+13)

	)

40 
	#AX25_SET_RT_IPMODE
 2

	)

42 
	#AX25_NOUID_DEFAULT
 0

	)

43 
	#AX25_NOUID_BLOCK
 1

	)

46 
	max25_ˇŒ
[7];

47 } 
	tax25_addªss
;

49 
	ssockaddr_ax25
 {

50 
__kî√l_ß_Ámûy_t
 
	mßx25_Ámûy
;

51 
ax25_addªss
 
	mßx25_ˇŒ
;

52 
	mßx25_ndigis
;

56 
	#ßx25_uid
 
ßx25_ndigis


	)

58 
	sfuŒ_sockaddr_ax25
 {

59 
sockaddr_ax25
 
	mfß_ax25
;

60 
ax25_addªss
 
	mfß_digùóãr
[
AX25_MAX_DIGIS
];

63 
	sax25_rouãs_°ru˘
 {

64 
ax25_addªss
 
	mp‹t_addr
;

65 
ax25_addªss
 
	mde°_addr
;

66 
	mdigi_cou¡
;

67 
ax25_addªss
 
	mdigi_addr
[
AX25_MAX_DIGIS
];

70 
	sax25_rouã_›t_°ru˘
 {

71 
ax25_addªss
 
	mp‹t_addr
;

72 
ax25_addªss
 
	mde°_addr
;

73 
	mcmd
;

74 
	m¨g
;

77 
	sax25_˘l_°ru˘
 {

78 
ax25_addªss
 
	mp‹t_addr
;

79 
ax25_addªss
 
	msour˚_addr
;

80 
ax25_addªss
 
	mde°_addr
;

81 
	mcmd
;

82 
	m¨g
;

83 
	mdigi_cou¡
;

84 
ax25_addªss
 
	mdigi_addr
[
AX25_MAX_DIGIS
];

88 
	sax25_öfo_°ru˘_dïªˇãd
 {

89 
	mn2
, 
	mn2cou¡
;

90 
	mt1
, 
	mt1timî
;

91 
	mt2
, 
	mt2timî
;

92 
	mt3
, 
	mt3timî
;

93 
	midÀ
, 
	midÀtimî
;

94 
	m°©e
;

95 
	mrcv_q
, 
	m¢d_q
;

98 
	sax25_öfo_°ru˘
 {

99 
	mn2
, 
	mn2cou¡
;

100 
	mt1
, 
	mt1timî
;

101 
	mt2
, 
	mt2timî
;

102 
	mt3
, 
	mt3timî
;

103 
	midÀ
, 
	midÀtimî
;

104 
	m°©e
;

105 
	mrcv_q
, 
	m¢d_q
;

106 
	mvs
, 
	mvr
, 
	mva
, 
	mvs_max
;

107 
	m∑˛í
;

108 
	mwödow
;

111 
	sax25_fwd_°ru˘
 {

112 
ax25_addªss
 
	mp‹t_‰om
;

113 
ax25_addªss
 
	mp‹t_to
;

	@/usr/include/linux/if.h

19 #i‚de‡
_LINUX_IF_H


20 
	#_LINUX_IF_H


	)

22 
	~<löux/ty≥s.h
>

23 
	~<löux/sockë.h
>

26 
	#IFNAMSIZ
 16

	)

27 
	#IFALIASZ
 256

	)

28 
	~<löux/hdlc/io˘l.h
>

31 
	#IFF_UP
 0x1

	)

32 
	#IFF_BROADCAST
 0x2

	)

33 
	#IFF_DEBUG
 0x4

	)

34 
	#IFF_LOOPBACK
 0x8

	)

35 
	#IFF_POINTOPOINT
 0x10

	)

36 
	#IFF_NOTRAILERS
 0x20

	)

37 
	#IFF_RUNNING
 0x40

	)

38 
	#IFF_NOARP
 0x80

	)

39 
	#IFF_PROMISC
 0x100

	)

40 
	#IFF_ALLMULTI
 0x200

	)

42 
	#IFF_MASTER
 0x400

	)

43 
	#IFF_SLAVE
 0x800

	)

45 
	#IFF_MULTICAST
 0x1000

	)

47 
	#IFF_PORTSEL
 0x2000

	)

48 
	#IFF_AUTOMEDIA
 0x4000

	)

49 
	#IFF_DYNAMIC
 0x8000

	)

51 
	#IFF_LOWER_UP
 0x10000

	)

52 
	#IFF_DORMANT
 0x20000

	)

54 
	#IFF_ECHO
 0x40000

	)

56 
	#IFF_VOLATILE
 (
IFF_LOOPBACK
|
IFF_POINTOPOINT
|
IFF_BROADCAST
|
IFF_ECHO
|\

57 
IFF_MASTER
|
IFF_SLAVE
|
IFF_RUNNING
|
IFF_LOWER_UP
|
IFF_DORMANT
)

	)

60 
	#IFF_802_1Q_VLAN
 0x1

	)

61 
	#IFF_EBRIDGE
 0x2

	)

62 
	#IFF_SLAVE_INACTIVE
 0x4

	)

63 
	#IFF_MASTER_8023AD
 0x8

	)

64 
	#IFF_MASTER_ALB
 0x10

	)

65 
	#IFF_BONDING
 0x20

	)

66 
	#IFF_SLAVE_NEEDARP
 0x40

	)

67 
	#IFF_ISATAP
 0x80

	)

68 
	#IFF_MASTER_ARPMON
 0x100

	)

69 
	#IFF_WAN_HDLC
 0x200

	)

70 
	#IFF_XMIT_DST_RELEASE
 0x400

	)

73 
	#IFF_DONT_BRIDGE
 0x800

	)

74 
	#IFF_DISABLE_NETPOLL
 0x1000

	)

75 
	#IFF_MACVLAN_PORT
 0x2000

	)

76 
	#IFF_BRIDGE_PORT
 0x4000

	)

77 
	#IFF_OVS_DATAPATH
 0x8000

	)

79 
	#IFF_TX_SKB_SHARING
 0x10000

	)

81 
	#IFF_UNICAST_FLT
 0x20000

	)

82 
	#IFF_TEAM_PORT
 0x40000

	)

83 
	#IFF_SUPP_NOFCS
 0x80000

	)

84 
	#IFF_LIVE_ADDR_CHANGE
 0x100000

	)

86 
	#IFF_MACVLAN
 0x200000

	)

89 
	#IF_GET_IFACE
 0x0001

	)

90 
	#IF_GET_PROTO
 0x0002

	)

93 
	#IF_IFACE_V35
 0x1000

	)

94 
	#IF_IFACE_V24
 0x1001

	)

95 
	#IF_IFACE_X21
 0x1002

	)

96 
	#IF_IFACE_T1
 0x1003

	)

97 
	#IF_IFACE_E1
 0x1004

	)

98 
	#IF_IFACE_SYNC_SERIAL
 0x1005

	)

99 
	#IF_IFACE_X21D
 0x1006

	)

102 
	#IF_PROTO_HDLC
 0x2000

	)

103 
	#IF_PROTO_PPP
 0x2001

	)

104 
	#IF_PROTO_CISCO
 0x2002

	)

105 
	#IF_PROTO_FR
 0x2003

	)

106 
	#IF_PROTO_FR_ADD_PVC
 0x2004

	)

107 
	#IF_PROTO_FR_DEL_PVC
 0x2005

	)

108 
	#IF_PROTO_X25
 0x2006

	)

109 
	#IF_PROTO_HDLC_ETH
 0x2007

	)

110 
	#IF_PROTO_FR_ADD_ETH_PVC
 0x2008

	)

111 
	#IF_PROTO_FR_DEL_ETH_PVC
 0x2009

	)

112 
	#IF_PROTO_FR_PVC
 0x200A

	)

113 
	#IF_PROTO_FR_ETH_PVC
 0x200B

	)

114 
	#IF_PROTO_RAW
 0x200C

	)

118 
	mIF_OPER_UNKNOWN
,

119 
	mIF_OPER_NOTPRESENT
,

120 
	mIF_OPER_DOWN
,

121 
	mIF_OPER_LOWERLAYERDOWN
,

122 
	mIF_OPER_TESTING
,

123 
	mIF_OPER_DORMANT
,

124 
	mIF_OPER_UP
,

129 
	mIF_LINK_MODE_DEFAULT
,

130 
	mIF_LINK_MODE_DORMANT
,

143 
	sifm≠
 {

144 
	mmem_°¨t
;

145 
	mmem_íd
;

146 
	mba£_addr
;

147 
	múq
;

148 
	mdma
;

149 
	mp‹t
;

153 
	sif_£âögs
 {

154 
	mty≥
;

155 
	msize
;

158 
øw_hdlc_¥Ÿo
 *
	møw_hdlc
;

159 
cisco_¥Ÿo
 *
	mcisco
;

160 
‰_¥Ÿo
 *
	m‰
;

161 
‰_¥Ÿo_pvc
 *
	m‰_pvc
;

162 
‰_¥Ÿo_pvc_öfo
 *
	m‰_pvc_öfo
;

165 
sync_£rül_£âögs
 *
	msync
;

166 
ã1_£âögs
 *
	mã1
;

167 } 
	mifs_ifsu
;

177 
	si‰eq
 {

178 
	#IFHWADDRLEN
 6

	)

181 
	mi‰n_«me
[
IFNAMSIZ
];

182 } 
	mi‰_i‰n
;

185 
sockaddr
 
	mi‰u_addr
;

186 
sockaddr
 
	mi‰u_d°addr
;

187 
sockaddr
 
	mi‰u_brﬂdaddr
;

188 
sockaddr
 
	mi‰u_√tmask
;

189 
sockaddr
 
	mi‰u_hwaddr
;

190 
	mi‰u_Êags
;

191 
	mi‰u_ivÆue
;

192 
	mi‰u_mtu
;

193 
ifm≠
 
	mi‰u_m≠
;

194 
	mi‰u_¶ave
[
IFNAMSIZ
];

195 
	mi‰u_√w«me
[
IFNAMSIZ
];

196 * 
	mi‰u_d©a
;

197 
if_£âögs
 
	mi‰u_£âögs
;

198 } 
	mi‰_i‰u
;

201 
	#i‰_«me
 
i‰_i‰n
.
i‰n_«me


	)

202 
	#i‰_hwaddr
 
i‰_i‰u
.
i‰u_hwaddr


	)

203 
	#i‰_addr
 
i‰_i‰u
.
i‰u_addr


	)

204 
	#i‰_d°addr
 
i‰_i‰u
.
i‰u_d°addr


	)

205 
	#i‰_brﬂdaddr
 
i‰_i‰u
.
i‰u_brﬂdaddr


	)

206 
	#i‰_√tmask
 
i‰_i‰u
.
i‰u_√tmask


	)

207 
	#i‰_Êags
 
i‰_i‰u
.
i‰u_Êags


	)

208 
	#i‰_mëric
 
i‰_i‰u
.
i‰u_ivÆue


	)

209 
	#i‰_mtu
 
i‰_i‰u
.
i‰u_mtu


	)

210 
	#i‰_m≠
 
i‰_i‰u
.
i‰u_m≠


	)

211 
	#i‰_¶ave
 
i‰_i‰u
.
i‰u_¶ave


	)

212 
	#i‰_d©a
 
i‰_i‰u
.
i‰u_d©a


	)

213 
	#i‰_ifödex
 
i‰_i‰u
.
i‰u_ivÆue


	)

214 
	#i‰_b™dwidth
 
i‰_i‰u
.
i‰u_ivÆue


	)

215 
	#i‰_qÀn
 
i‰_i‰u
.
i‰u_ivÆue


	)

216 
	#i‰_√w«me
 
i‰_i‰u
.
i‰u_√w«me


	)

217 
	#i‰_£âögs
 
i‰_i‰u
.
i‰u_£âögs


	)

226 
	sifc⁄f
 {

227 
	mifc_Àn
;

229 *
	mifcu_buf
;

230 
i‰eq
 *
	mifcu_ªq
;

231 } 
	mifc_ifcu
;

233 
	#ifc_buf
 
ifc_ifcu
.
ifcu_buf


	)

234 
	#ifc_ªq
 
ifc_ifcu
.
ifcu_ªq


	)

	@/usr/include/linux/if_arp.h

23 #i‚de‡
_LINUX_IF_ARP_H


24 
	#_LINUX_IF_ARP_H


	)

26 
	~<löux/√tdevi˚.h
>

29 
	#ARPHRD_NETROM
 0

	)

30 
	#ARPHRD_ETHER
 1

	)

31 
	#ARPHRD_EETHER
 2

	)

32 
	#ARPHRD_AX25
 3

	)

33 
	#ARPHRD_PRONET
 4

	)

34 
	#ARPHRD_CHAOS
 5

	)

35 
	#ARPHRD_IEEE802
 6

	)

36 
	#ARPHRD_ARCNET
 7

	)

37 
	#ARPHRD_APPLETLK
 8

	)

38 
	#ARPHRD_DLCI
 15

	)

39 
	#ARPHRD_ATM
 19

	)

40 
	#ARPHRD_METRICOM
 23

	)

41 
	#ARPHRD_IEEE1394
 24

	)

42 
	#ARPHRD_EUI64
 27

	)

43 
	#ARPHRD_INFINIBAND
 32

	)

46 
	#ARPHRD_SLIP
 256

	)

47 
	#ARPHRD_CSLIP
 257

	)

48 
	#ARPHRD_SLIP6
 258

	)

49 
	#ARPHRD_CSLIP6
 259

	)

50 
	#ARPHRD_RSRVD
 260

	)

51 
	#ARPHRD_ADAPT
 264

	)

52 
	#ARPHRD_ROSE
 270

	)

53 
	#ARPHRD_X25
 271

	)

54 
	#ARPHRD_HWX25
 272

	)

55 
	#ARPHRD_CAN
 280

	)

56 
	#ARPHRD_PPP
 512

	)

57 
	#ARPHRD_CISCO
 513

	)

58 
	#ARPHRD_HDLC
 
ARPHRD_CISCO


	)

59 
	#ARPHRD_LAPB
 516

	)

60 
	#ARPHRD_DDCMP
 517

	)

61 
	#ARPHRD_RAWHDLC
 518

	)

63 
	#ARPHRD_TUNNEL
 768

	)

64 
	#ARPHRD_TUNNEL6
 769

	)

65 
	#ARPHRD_FRAD
 770

	)

66 
	#ARPHRD_SKIP
 771

	)

67 
	#ARPHRD_LOOPBACK
 772

	)

68 
	#ARPHRD_LOCALTLK
 773

	)

69 
	#ARPHRD_FDDI
 774

	)

70 
	#ARPHRD_BIF
 775

	)

71 
	#ARPHRD_SIT
 776

	)

72 
	#ARPHRD_IPDDP
 777

	)

73 
	#ARPHRD_IPGRE
 778

	)

74 
	#ARPHRD_PIMREG
 779

	)

75 
	#ARPHRD_HIPPI
 780

	)

76 
	#ARPHRD_ASH
 781

	)

77 
	#ARPHRD_ECONET
 782

	)

78 
	#ARPHRD_IRDA
 783

	)

80 
	#ARPHRD_FCPP
 784

	)

81 
	#ARPHRD_FCAL
 785

	)

82 
	#ARPHRD_FCPL
 786

	)

83 
	#ARPHRD_FCFABRIC
 787

	)

85 
	#ARPHRD_IEEE802_TR
 800

	)

86 
	#ARPHRD_IEEE80211
 801

	)

87 
	#ARPHRD_IEEE80211_PRISM
 802

	)

88 
	#ARPHRD_IEEE80211_RADIOTAP
 803

	)

89 
	#ARPHRD_IEEE802154
 804

	)

90 
	#ARPHRD_IEEE802154_MONITOR
 805

	)

92 
	#ARPHRD_PHONET
 820

	)

93 
	#ARPHRD_PHONET_PIPE
 821

	)

94 
	#ARPHRD_CAIF
 822

	)

95 
	#ARPHRD_IP6GRE
 823

	)

96 
	#ARPHRD_NETLINK
 824

	)

98 
	#ARPHRD_VOID
 0xFFFF

	)

99 
	#ARPHRD_NONE
 0xFFFE

	)

102 
	#ARPOP_REQUEST
 1

	)

103 
	#ARPOP_REPLY
 2

	)

104 
	#ARPOP_RREQUEST
 3

	)

105 
	#ARPOP_RREPLY
 4

	)

106 
	#ARPOP_InREQUEST
 8

	)

107 
	#ARPOP_InREPLY
 9

	)

108 
	#ARPOP_NAK
 10

	)

112 
	s¨¥eq
 {

113 
sockaddr
 
	m¨p_∑
;

114 
sockaddr
 
	m¨p_ha
;

115 
	m¨p_Êags
;

116 
sockaddr
 
	m¨p_√tmask
;

117 
	m¨p_dev
[16];

120 
	s¨¥eq_ﬁd
 {

121 
sockaddr
 
	m¨p_∑
;

122 
sockaddr
 
	m¨p_ha
;

123 
	m¨p_Êags
;

124 
sockaddr
 
	m¨p_√tmask
;

128 
	#ATF_COM
 0x02

	)

129 
	#ATF_PERM
 0x04

	)

130 
	#ATF_PUBL
 0x08

	)

131 
	#ATF_USETRAILERS
 0x10

	)

132 
	#ATF_NETMASK
 0x20

	)

134 
	#ATF_DONTPUB
 0x40

	)

140 
	s¨phdr
 {

141 
__be16
 
	m¨_hrd
;

142 
__be16
 
	m¨_¥o
;

143 
	m¨_h 
;

144 
	m¨_∂n
;

145 
__be16
 
	m¨_›
;

151 
	m¨_sha
[
ETH_ALEN
];

152 
	m¨_sù
[4];

153 
	m¨_tha
[
ETH_ALEN
];

154 
	m¨_tù
[4];

	@/usr/include/linux/if_ether.h

21 #i‚de‡
_LINUX_IF_ETHER_H


22 
	#_LINUX_IF_ETHER_H


	)

24 
	~<löux/ty≥s.h
>

31 
	#ETH_ALEN
 6

	)

32 
	#ETH_HLEN
 14

	)

33 
	#ETH_ZLEN
 60

	)

34 
	#ETH_DATA_LEN
 1500

	)

35 
	#ETH_FRAME_LEN
 1514

	)

36 
	#ETH_FCS_LEN
 4

	)

42 
	#ETH_P_LOOP
 0x0060

	)

43 
	#ETH_P_PUP
 0x0200

	)

44 
	#ETH_P_PUPAT
 0x0201

	)

45 
	#ETH_P_IP
 0x0800

	)

46 
	#ETH_P_X25
 0x0805

	)

47 
	#ETH_P_ARP
 0x0806

	)

48 
	#ETH_P_BPQ
 0x08FF

	)

49 
	#ETH_P_IEEEPUP
 0x0a00

	)

50 
	#ETH_P_IEEEPUPAT
 0x0a01

	)

51 
	#ETH_P_BATMAN
 0x4305

	)

52 
	#ETH_P_DEC
 0x6000

	)

53 
	#ETH_P_DNA_DL
 0x6001

	)

54 
	#ETH_P_DNA_RC
 0x6002

	)

55 
	#ETH_P_DNA_RT
 0x6003

	)

56 
	#ETH_P_LAT
 0x6004

	)

57 
	#ETH_P_DIAG
 0x6005

	)

58 
	#ETH_P_CUST
 0x6006

	)

59 
	#ETH_P_SCA
 0x6007

	)

60 
	#ETH_P_TEB
 0x6558

	)

61 
	#ETH_P_RARP
 0x8035

	)

62 
	#ETH_P_ATALK
 0x809B

	)

63 
	#ETH_P_AARP
 0x80F3

	)

64 
	#ETH_P_8021Q
 0x8100

	)

65 
	#ETH_P_IPX
 0x8137

	)

66 
	#ETH_P_IPV6
 0x86DD

	)

67 
	#ETH_P_PAUSE
 0x8808

	)

68 
	#ETH_P_SLOW
 0x8809

	)

69 
	#ETH_P_WCCP
 0x883E

	)

71 
	#ETH_P_PPP_DISC
 0x8863

	)

72 
	#ETH_P_PPP_SES
 0x8864

	)

73 
	#ETH_P_MPLS_UC
 0x8847

	)

74 
	#ETH_P_MPLS_MC
 0x8848

	)

75 
	#ETH_P_ATMMPOA
 0x884¯

	)

76 
	#ETH_P_LINK_CTL
 0x886¯

	)

77 
	#ETH_P_ATMFATE
 0x8884

	)

80 
	#ETH_P_PAE
 0x888E

	)

81 
	#ETH_P_AOE
 0x88A2

	)

82 
	#ETH_P_8021AD
 0x88A8

	)

83 
	#ETH_P_802_EX1
 0x88B5

	)

84 
	#ETH_P_TIPC
 0x88CA

	)

85 
	#ETH_P_8021AH
 0x88E7

	)

86 
	#ETH_P_MVRP
 0x88F5

	)

87 
	#ETH_P_1588
 0x88F7

	)

88 
	#ETH_P_PRP
 0x88FB

	)

89 
	#ETH_P_FCOE
 0x8906

	)

90 
	#ETH_P_TDLS
 0x890D

	)

91 
	#ETH_P_FIP
 0x8914

	)

92 
	#ETH_P_QINQ1
 0x9100

	)

93 
	#ETH_P_QINQ2
 0x9200

	)

94 
	#ETH_P_QINQ3
 0x9300

	)

95 
	#ETH_P_EDSA
 0xDADA

	)

96 
	#ETH_P_AF_IUCV
 0xFBFB

	)

98 
	#ETH_P_802_3_MIN
 0x0600

	)

105 
	#ETH_P_802_3
 0x0001

	)

106 
	#ETH_P_AX25
 0x0002

	)

107 
	#ETH_P_ALL
 0x0003

	)

108 
	#ETH_P_802_2
 0x0004

	)

109 
	#ETH_P_SNAP
 0x0005

	)

110 
	#ETH_P_DDCMP
 0x0006

	)

111 
	#ETH_P_WAN_PPP
 0x0007

	)

112 
	#ETH_P_PPP_MP
 0x0008

	)

113 
	#ETH_P_LOCALTALK
 0x0009

	)

114 
	#ETH_P_CAN
 0x000C

	)

115 
	#ETH_P_CANFD
 0x000D

	)

116 
	#ETH_P_PPPTALK
 0x0010

	)

117 
	#ETH_P_TR_802_2
 0x0011

	)

118 
	#ETH_P_MOBITEX
 0x0015

	)

119 
	#ETH_P_CONTROL
 0x0016

	)

120 
	#ETH_P_IRDA
 0x0017

	)

121 
	#ETH_P_ECONET
 0x0018

	)

122 
	#ETH_P_HDLC
 0x0019

	)

123 
	#ETH_P_ARCNET
 0x001A

	)

124 
	#ETH_P_DSA
 0x001B

	)

125 
	#ETH_P_TRAILER
 0x001C

	)

126 
	#ETH_P_PHONET
 0x00F5

	)

127 
	#ETH_P_IEEE802154
 0x00F6

	)

128 
	#ETH_P_CAIF
 0x00F7

	)

134 
	sëhhdr
 {

135 
	mh_de°
[
ETH_ALEN
];

136 
	mh_sour˚
[
ETH_ALEN
];

137 
__be16
 
	mh_¥Ÿo
;

138 } 
__©åibuã__
((
∑cked
));

	@/usr/include/linux/if_fddi.h

24 #i‚de‡
_LINUX_IF_FDDI_H


25 
	#_LINUX_IF_FDDI_H


	)

27 
	~<löux/ty≥s.h
>

33 
	#FDDI_K_ALEN
 6

	)

34 
	#FDDI_K_8022_HLEN
 16

	)

35 
	#FDDI_K_SNAP_HLEN
 21

	)

36 
	#FDDI_K_8022_ZLEN
 16

	)

37 
	#FDDI_K_SNAP_ZLEN
 21

	)

38 
	#FDDI_K_8022_DLEN
 4475

	)

39 
	#FDDI_K_SNAP_DLEN
 4470

	)

40 
	#FDDI_K_LLC_ZLEN
 13

	)

41 
	#FDDI_K_LLC_LEN
 4491

	)

44 
	#FDDI_FC_K_VOID
 0x00

	)

45 
	#FDDI_FC_K_NON_RESTRICTED_TOKEN
 0x80

	)

46 
	#FDDI_FC_K_RESTRICTED_TOKEN
 0xC0

	)

47 
	#FDDI_FC_K_SMT_MIN
 0x41

	)

48 
	#FDDI_FC_K_SMT_MAX
 0x4F

	)

49 
	#FDDI_FC_K_MAC_MIN
 0xC1

	)

50 
	#FDDI_FC_K_MAC_MAX
 0xCF

	)

51 
	#FDDI_FC_K_ASYNC_LLC_MIN
 0x50

	)

52 
	#FDDI_FC_K_ASYNC_LLC_DEF
 0x54

	)

53 
	#FDDI_FC_K_ASYNC_LLC_MAX
 0x5F

	)

54 
	#FDDI_FC_K_SYNC_LLC_MIN
 0xD0

	)

55 
	#FDDI_FC_K_SYNC_LLC_MAX
 0xD7

	)

56 
	#FDDI_FC_K_IMPLEMENTOR_MIN
 0x60

	)

57 
	#FDDI_FC_K_IMPLEMENTOR_MAX
 0x6F

	)

58 
	#FDDI_FC_K_RESERVED_MIN
 0x70

	)

59 
	#FDDI_FC_K_RESERVED_MAX
 0x7F

	)

62 
	#FDDI_EXTENDED_SAP
 0xAA

	)

63 
	#FDDI_UI_CMD
 0x03

	)

66 
	sfddi_8022_1_hdr
 {

67 
__u8
 
	mdßp
;

68 
__u8
 
	msßp
;

69 
__u8
 
	m˘æ
;

70 } 
__©åibuã__
((
∑cked
));

73 
	sfddi_8022_2_hdr
 {

74 
__u8
 
	mdßp
;

75 
__u8
 
	msßp
;

76 
__u8
 
	m˘æ_1
;

77 
__u8
 
	m˘æ_2
;

78 } 
__©åibuã__
((
∑cked
));

81 
	#FDDI_K_OUI_LEN
 3

	)

82 
	sfddi_¢≠_hdr
 {

83 
__u8
 
	mdßp
;

84 
__u8
 
	msßp
;

85 
__u8
 
	m˘æ
;

86 
__u8
 
	moui
[
FDDI_K_OUI_LEN
];

87 
__be16
 
	mëhîty≥
;

88 } 
__©åibuã__
((
∑cked
));

91 
	sfddihdr
 {

92 
__u8
 
	mfc
;

93 
__u8
 
	mdaddr
[
FDDI_K_ALEN
];

94 
__u8
 
	mßddr
[
FDDI_K_ALEN
];

97 
fddi_8022_1_hdr
 
	mŒc_8022_1
;

98 
fddi_8022_2_hdr
 
	mŒc_8022_2
;

99 
fddi_¢≠_hdr
 
	mŒc_¢≠
;

100 } 
	mhdr
;

101 } 
__©åibuã__
((
∑cked
));

	@/usr/include/linux/if_plip.h

11 #i‚de‡
_LINUX_IF_PLIP_H


12 
	#_LINUX_IF_PLIP_H


	)

14 
	~<löux/sockios.h
>

16 
	#SIOCDEVPLIP
 
SIOCDEVPRIVATE


	)

18 
	s∂ùc⁄f
 {

19 
	mpcmd
;

20 
	mnibbÀ
;

21 
	måiggî
;

24 
	#PLIP_GET_TIMEOUT
 0x1

	)

25 
	#PLIP_SET_TIMEOUT
 0x2

	)

	@/usr/include/linux/if_slip.h

8 #i‚de‡
__LINUX_SLIP_H


9 
	#__LINUX_SLIP_H


	)

11 
	#SL_MODE_SLIP
 0

	)

12 
	#SL_MODE_CSLIP
 1

	)

13 
	#SL_MODE_KISS
 4

	)

15 
	#SL_OPT_SIXBIT
 2

	)

16 
	#SL_OPT_ADAPTIVE
 8

	)

22 
	#SIOCSKEEPALIVE
 (
SIOCDEVPRIVATE
Ë

	)

23 
	#SIOCGKEEPALIVE
 (
SIOCDEVPRIVATE
+1Ë

	)

24 
	#SIOCSOUTFILL
 (
SIOCDEVPRIVATE
+2Ë

	)

25 
	#SIOCGOUTFILL
 (
SIOCDEVPRIVATE
+3Ë

	)

26 
	#SIOCSLEASE
 (
SIOCDEVPRIVATE
+4Ë

	)

27 
	#SIOCGLEASE
 (
SIOCDEVPRIVATE
+5Ë

	)

	@/usr/include/linux/if_tunnel.h

1 #i‚de‡
_IF_TUNNEL_H_


2 
	#_IF_TUNNEL_H_


	)

4 
	~<löux/ty≥s.h
>

5 
	~<asm/byã‹dî.h
>

8 
	#SIOCGETTUNNEL
 (
SIOCDEVPRIVATE
 + 0)

	)

9 
	#SIOCADDTUNNEL
 (
SIOCDEVPRIVATE
 + 1)

	)

10 
	#SIOCDELTUNNEL
 (
SIOCDEVPRIVATE
 + 2)

	)

11 
	#SIOCCHGTUNNEL
 (
SIOCDEVPRIVATE
 + 3)

	)

12 
	#SIOCGETPRL
 (
SIOCDEVPRIVATE
 + 4)

	)

13 
	#SIOCADDPRL
 (
SIOCDEVPRIVATE
 + 5)

	)

14 
	#SIOCDELPRL
 (
SIOCDEVPRIVATE
 + 6)

	)

15 
	#SIOCCHGPRL
 (
SIOCDEVPRIVATE
 + 7)

	)

16 
	#SIOCGET6RD
 (
SIOCDEVPRIVATE
 + 8)

	)

17 
	#SIOCADD6RD
 (
SIOCDEVPRIVATE
 + 9)

	)

18 
	#SIOCDEL6RD
 (
SIOCDEVPRIVATE
 + 10)

	)

19 
	#SIOCCHG6RD
 (
SIOCDEVPRIVATE
 + 11)

	)

21 
	#GRE_CSUM
 
	`__˝u_to_be16
(0x8000)

	)

22 
	#GRE_ROUTING
 
	`__˝u_to_be16
(0x4000)

	)

23 
	#GRE_KEY
 
	`__˝u_to_be16
(0x2000)

	)

24 
	#GRE_SEQ
 
	`__˝u_to_be16
(0x1000)

	)

25 
	#GRE_STRICT
 
	`__˝u_to_be16
(0x0800)

	)

26 
	#GRE_REC
 
	`__˝u_to_be16
(0x0700)

	)

27 
	#GRE_FLAGS
 
	`__˝u_to_be16
(0x00F8)

	)

28 
	#GRE_VERSION
 
	`__˝u_to_be16
(0x0007)

	)

30 
	sù_tu¬ñ_∑rm
 {

31 
	m«me
[
IFNAMSIZ
];

32 
	mlök
;

33 
__be16
 
	mi_Êags
;

34 
__be16
 
	mo_Êags
;

35 
__be32
 
	mi_key
;

36 
__be32
 
	mo_key
;

37 
ùhdr
 
	mùh
;

41 
	mIFLA_IPTUN_UNSPEC
,

42 
	mIFLA_IPTUN_LINK
,

43 
	mIFLA_IPTUN_LOCAL
,

44 
	mIFLA_IPTUN_REMOTE
,

45 
	mIFLA_IPTUN_TTL
,

46 
	mIFLA_IPTUN_TOS
,

47 
	mIFLA_IPTUN_ENCAP_LIMIT
,

48 
	mIFLA_IPTUN_FLOWINFO
,

49 
	mIFLA_IPTUN_FLAGS
,

50 
	mIFLA_IPTUN_PROTO
,

51 
	mIFLA_IPTUN_PMTUDISC
,

52 
	mIFLA_IPTUN_6RD_PREFIX
,

53 
	mIFLA_IPTUN_6RD_RELAY_PREFIX
,

54 
	mIFLA_IPTUN_6RD_PREFIXLEN
,

55 
	mIFLA_IPTUN_6RD_RELAY_PREFIXLEN
,

56 
	m__IFLA_IPTUN_MAX
,

58 
	#IFLA_IPTUN_MAX
 (
__IFLA_IPTUN_MAX
 - 1)

	)

61 
	#SIT_ISATAP
 0x0001

	)

63 
	sù_tu¬ñ_¥l
 {

64 
__be32
 
	maddr
;

65 
__u16
 
	mÊags
;

66 
__u16
 
	m__ª£rved
;

67 
__u32
 
	md©Æí
;

68 
__u32
 
	m__ª£rved2
;

73 
	#PRL_DEFAULT
 0x0001

	)

75 
	sù_tu¬ñ_6rd
 {

76 
ö6_addr
 
	m¥efix
;

77 
__be32
 
	mªœy_¥efix
;

78 
__u16
 
	m¥efixÀn
;

79 
__u16
 
	mªœy_¥efixÀn
;

83 
	mIFLA_GRE_UNSPEC
,

84 
	mIFLA_GRE_LINK
,

85 
	mIFLA_GRE_IFLAGS
,

86 
	mIFLA_GRE_OFLAGS
,

87 
	mIFLA_GRE_IKEY
,

88 
	mIFLA_GRE_OKEY
,

89 
	mIFLA_GRE_LOCAL
,

90 
	mIFLA_GRE_REMOTE
,

91 
	mIFLA_GRE_TTL
,

92 
	mIFLA_GRE_TOS
,

93 
	mIFLA_GRE_PMTUDISC
,

94 
	mIFLA_GRE_ENCAP_LIMIT
,

95 
	mIFLA_GRE_FLOWINFO
,

96 
	mIFLA_GRE_FLAGS
,

97 
	m__IFLA_GRE_MAX
,

100 
	#IFLA_GRE_MAX
 (
__IFLA_GRE_MAX
 - 1)

	)

103 
	#VTI_ISVTI
 0x0001

	)

106 
	mIFLA_VTI_UNSPEC
,

107 
	mIFLA_VTI_LINK
,

108 
	mIFLA_VTI_IKEY
,

109 
	mIFLA_VTI_OKEY
,

110 
	mIFLA_VTI_LOCAL
,

111 
	mIFLA_VTI_REMOTE
,

112 
	m__IFLA_VTI_MAX
,

115 
	#IFLA_VTI_MAX
 (
__IFLA_VTI_MAX
 - 1)

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/linux/rose.h

7 #i‚def 
ROSE_KERNEL_H


8 
	#ROSE_KERNEL_H


	)

10 
	~<löux/sockë.h
>

11 
	~<löux/ax25.h
>

13 
	#ROSE_MTU
 251

	)

15 
	#ROSE_MAX_DIGIS
 6

	)

17 
	#ROSE_DEFER
 1

	)

18 
	#ROSE_T1
 2

	)

19 
	#ROSE_T2
 3

	)

20 
	#ROSE_T3
 4

	)

21 
	#ROSE_IDLE
 5

	)

22 
	#ROSE_QBITINCL
 6

	)

23 
	#ROSE_HOLDBACK
 7

	)

25 
	#SIOCRSGCAUSE
 (
SIOCPROTOPRIVATE
+0)

	)

26 
	#SIOCRSSCAUSE
 (
SIOCPROTOPRIVATE
+1)

	)

27 
	#SIOCRSL2CALL
 (
SIOCPROTOPRIVATE
+2)

	)

28 
	#SIOCRSSL2CALL
 (
SIOCPROTOPRIVATE
+2)

	)

29 
	#SIOCRSACCEPT
 (
SIOCPROTOPRIVATE
+3)

	)

30 
	#SIOCRSCLRRT
 (
SIOCPROTOPRIVATE
+4)

	)

31 
	#SIOCRSGL2CALL
 (
SIOCPROTOPRIVATE
+5)

	)

32 
	#SIOCRSGFACILITIES
 (
SIOCPROTOPRIVATE
+6)

	)

34 
	#ROSE_DTE_ORIGINATED
 0x00

	)

35 
	#ROSE_NUMBER_BUSY
 0x01

	)

36 
	#ROSE_INVALID_FACILITY
 0x03

	)

37 
	#ROSE_NETWORK_CONGESTION
 0x05

	)

38 
	#ROSE_OUT_OF_ORDER
 0x09

	)

39 
	#ROSE_ACCESS_BARRED
 0x0B

	)

40 
	#ROSE_NOT_OBTAINABLE
 0x0D

	)

41 
	#ROSE_REMOTE_PROCEDURE
 0x11

	)

42 
	#ROSE_LOCAL_PROCEDURE
 0x13

	)

43 
	#ROSE_SHIP_ABSENT
 0x39

	)

46 
	mro£_addr
[5];

47 } 
	tro£_addªss
;

49 
	ssockaddr_ro£
 {

50 
__kî√l_ß_Ámûy_t
 
	m§o£_Ámûy
;

51 
ro£_addªss
 
	m§o£_addr
;

52 
ax25_addªss
 
	m§o£_ˇŒ
;

53 
	m§o£_ndigis
;

54 
ax25_addªss
 
	m§o£_digi
;

57 
	sfuŒ_sockaddr_ro£
 {

58 
__kî√l_ß_Ámûy_t
 
	m§o£_Ámûy
;

59 
ro£_addªss
 
	m§o£_addr
;

60 
ax25_addªss
 
	m§o£_ˇŒ
;

61 
	m§o£_ndigis
;

62 
ax25_addªss
 
	m§o£_digis
[
ROSE_MAX_DIGIS
];

65 
	sro£_rouã_°ru˘
 {

66 
ro£_addªss
 
	maddªss
;

67 
	mmask
;

68 
ax25_addªss
 
	m√ighbour
;

69 
	mdevi˚
[16];

70 
	mndigis
;

71 
ax25_addªss
 
	mdigùóãrs
[
AX25_MAX_DIGIS
];

74 
	sro£_ˇu£_°ru˘
 {

75 
	mˇu£
;

76 
	mdügno°ic
;

79 
	sro£_Ácûôõs_°ru˘
 {

80 
ro£_addªss
 
	msour˚_addr
, 
	mde°_addr
;

81 
ax25_addªss
 
	msour˚_ˇŒ
, 
	mde°_ˇŒ
;

82 
	msour˚_ndigis
, 
	mde°_ndigis
;

83 
ax25_addªss
 
	msour˚_digis
[
ROSE_MAX_DIGIS
];

84 
ax25_addªss
 
	mde°_digis
[
ROSE_MAX_DIGIS
];

85 
	mønd
;

86 
ro£_addªss
 
	mÁû_addr
;

87 
ax25_addªss
 
	mÁû_ˇŒ
;

	@/usr/include/linux/sockios.h

18 #i‚de‡
_LINUX_SOCKIOS_H


19 
	#_LINUX_SOCKIOS_H


	)

21 
	~<asm/sockios.h
>

24 
	#SIOCINQ
 
FIONREAD


	)

25 
	#SIOCOUTQ
 
TIOCOUTQ


	)

28 
	#SIOCADDRT
 0x890B

	)

29 
	#SIOCDELRT
 0x890C

	)

30 
	#SIOCRTMSG
 0x890D

	)

33 
	#SIOCGIFNAME
 0x8910

	)

34 
	#SIOCSIFLINK
 0x8911

	)

35 
	#SIOCGIFCONF
 0x8912

	)

36 
	#SIOCGIFFLAGS
 0x8913

	)

37 
	#SIOCSIFFLAGS
 0x8914

	)

38 
	#SIOCGIFADDR
 0x8915

	)

39 
	#SIOCSIFADDR
 0x8916

	)

40 
	#SIOCGIFDSTADDR
 0x8917

	)

41 
	#SIOCSIFDSTADDR
 0x8918

	)

42 
	#SIOCGIFBRDADDR
 0x8919

	)

43 
	#SIOCSIFBRDADDR
 0x891®

	)

44 
	#SIOCGIFNETMASK
 0x891b

	)

45 
	#SIOCSIFNETMASK
 0x891¯

	)

46 
	#SIOCGIFMETRIC
 0x891d

	)

47 
	#SIOCSIFMETRIC
 0x891ê

	)

48 
	#SIOCGIFMEM
 0x891‡

	)

49 
	#SIOCSIFMEM
 0x8920

	)

50 
	#SIOCGIFMTU
 0x8921

	)

51 
	#SIOCSIFMTU
 0x8922

	)

52 
	#SIOCSIFNAME
 0x8923

	)

53 
	#SIOCSIFHWADDR
 0x8924

	)

54 
	#SIOCGIFENCAP
 0x8925

	)

55 
	#SIOCSIFENCAP
 0x8926

	)

56 
	#SIOCGIFHWADDR
 0x8927

	)

57 
	#SIOCGIFSLAVE
 0x8929

	)

58 
	#SIOCSIFSLAVE
 0x8930

	)

59 
	#SIOCADDMULTI
 0x8931

	)

60 
	#SIOCDELMULTI
 0x8932

	)

61 
	#SIOCGIFINDEX
 0x8933

	)

62 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

63 
	#SIOCSIFPFLAGS
 0x8934

	)

64 
	#SIOCGIFPFLAGS
 0x8935

	)

65 
	#SIOCDIFADDR
 0x8936

	)

66 
	#SIOCSIFHWBROADCAST
 0x8937

	)

67 
	#SIOCGIFCOUNT
 0x8938

	)

69 
	#SIOCGIFBR
 0x8940

	)

70 
	#SIOCSIFBR
 0x8941

	)

72 
	#SIOCGIFTXQLEN
 0x8942

	)

73 
	#SIOCSIFTXQLEN
 0x8943

	)

78 
	#SIOCETHTOOL
 0x8946

	)

80 
	#SIOCGMIIPHY
 0x8947

	)

81 
	#SIOCGMIIREG
 0x8948

	)

82 
	#SIOCSMIIREG
 0x8949

	)

84 
	#SIOCWANDEV
 0x894A

	)

86 
	#SIOCOUTQNSD
 0x894B

	)

90 
	#SIOCDARP
 0x8953

	)

91 
	#SIOCGARP
 0x8954

	)

92 
	#SIOCSARP
 0x8955

	)

95 
	#SIOCDRARP
 0x8960

	)

96 
	#SIOCGRARP
 0x8961

	)

97 
	#SIOCSRARP
 0x8962

	)

101 
	#SIOCGIFMAP
 0x8970

	)

102 
	#SIOCSIFMAP
 0x8971

	)

106 
	#SIOCADDDLCI
 0x8980

	)

107 
	#SIOCDELDLCI
 0x8981

	)

109 
	#SIOCGIFVLAN
 0x8982

	)

110 
	#SIOCSIFVLAN
 0x8983

	)

114 
	#SIOCBONDENSLAVE
 0x8990

	)

115 
	#SIOCBONDRELEASE
 0x8991

	)

116 
	#SIOCBONDSETHWADDR
 0x8992

	)

117 
	#SIOCBONDSLAVEINFOQUERY
 0x8993

	)

118 
	#SIOCBONDINFOQUERY
 0x8994

	)

119 
	#SIOCBONDCHANGEACTIVE
 0x8995

	)

122 
	#SIOCBRADDBR
 0x89a0

	)

123 
	#SIOCBRDELBR
 0x89a1

	)

124 
	#SIOCBRADDIF
 0x89a2

	)

125 
	#SIOCBRDELIF
 0x89a3

	)

128 
	#SIOCSHWTSTAMP
 0x89b0

	)

129 
	#SIOCGHWTSTAMP
 0x89b1

	)

142 
	#SIOCDEVPRIVATE
 0x89F0

	)

148 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/linux/x25.h

11 #i‚def 
X25_KERNEL_H


12 
	#X25_KERNEL_H


	)

14 
	~<löux/ty≥s.h
>

15 
	~<löux/sockë.h
>

17 
	#SIOCX25GSUBSCRIP
 (
SIOCPROTOPRIVATE
 + 0)

	)

18 
	#SIOCX25SSUBSCRIP
 (
SIOCPROTOPRIVATE
 + 1)

	)

19 
	#SIOCX25GFACILITIES
 (
SIOCPROTOPRIVATE
 + 2)

	)

20 
	#SIOCX25SFACILITIES
 (
SIOCPROTOPRIVATE
 + 3)

	)

21 
	#SIOCX25GCALLUSERDATA
 (
SIOCPROTOPRIVATE
 + 4)

	)

22 
	#SIOCX25SCALLUSERDATA
 (
SIOCPROTOPRIVATE
 + 5)

	)

23 
	#SIOCX25GCAUSEDIAG
 (
SIOCPROTOPRIVATE
 + 6)

	)

24 
	#SIOCX25SCUDMATCHLEN
 (
SIOCPROTOPRIVATE
 + 7)

	)

25 
	#SIOCX25CALLACCPTAPPRV
 (
SIOCPROTOPRIVATE
 + 8)

	)

26 
	#SIOCX25SENDCALLACCPT
 (
SIOCPROTOPRIVATE
 + 9)

	)

27 
	#SIOCX25GDTEFACILITIES
 (
SIOCPROTOPRIVATE
 + 10)

	)

28 
	#SIOCX25SDTEFACILITIES
 (
SIOCPROTOPRIVATE
 + 11)

	)

29 
	#SIOCX25SCAUSEDIAG
 (
SIOCPROTOPRIVATE
 + 12)

	)

34 
	#X25_QBITINCL
 1

	)

39 
	#X25_PS16
 4

	)

40 
	#X25_PS32
 5

	)

41 
	#X25_PS64
 6

	)

42 
	#X25_PS128
 7

	)

43 
	#X25_PS256
 8

	)

44 
	#X25_PS512
 9

	)

45 
	#X25_PS1024
 10

	)

46 
	#X25_PS2048
 11

	)

47 
	#X25_PS4096
 12

	)

53 
	sx25_addªss
 {

54 
	mx25_addr
[16];

60 
	ssockaddr_x25
 {

61 
__kî√l_ß_Ámûy_t
 
	msx25_Ámûy
;

62 
x25_addªss
 
	msx25_addr
;

73 
	sx25_subs¸ù_°ru˘
 {

74 
	mdevi˚
[200-()];

75 
	mglobÆ_Ácû_mask
;

76 
	mexãnded
;

81 
	#X25_MASK_REVERSE
 0x01

	)

82 
	#X25_MASK_THROUGHPUT
 0x02

	)

83 
	#X25_MASK_PACKET_SIZE
 0x04

	)

84 
	#X25_MASK_WINDOW_SIZE
 0x08

	)

86 
	#X25_MASK_CALLING_AE
 0x10

	)

87 
	#X25_MASK_CALLED_AE
 0x20

	)

93 
	sx25_rouã_°ru˘
 {

94 
x25_addªss
 
	maddªss
;

95 
	msigdigôs
;

96 
	mdevi˚
[200];

102 
	sx25_Ácûôõs
 {

103 
	mwösize_ö
, 
	mwösize_out
;

104 
	m∑csize_ö
, 
	m∑csize_out
;

105 
	mthroughput
;

106 
	mªvî£
;

117 
	sx25_dã_Ácûôõs
 {

118 
__u16
 
	mdñay_cumul
;

119 
__u16
 
	mdñay_èrgë
;

120 
__u16
 
	mdñay_max
;

121 
__u8
 
	mmö_throughput
;

122 
__u8
 
	mex≥dôed
;

123 
__u8
 
	mˇŒög_Àn
;

124 
__u8
 
	mˇŒed_Àn
;

125 
__u8
 
	mˇŒög_´
[20];

126 
__u8
 
	mˇŒed_´
[20];

132 
	sx25_ˇŒu£rd©a
 {

133 
	mcudÀngth
;

134 
	mcudd©a
[128];

140 
	sx25_ˇu£düg
 {

141 
	mˇu£
;

142 
	mdügno°ic
;

148 
	sx25_subaddr
 {

149 
	mcudm©chÀngth
;

	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

50 
__BEGIN_NAMESPACE_STD


53 
	slc⁄v


57 *
	mdecimÆ_poöt
;

58 *
	mthoußnds_£p
;

64 *
	mgroupög
;

70 *
	möt_cuº_symbﬁ
;

71 *
	mcuºícy_symbﬁ
;

72 *
	mm⁄_decimÆ_poöt
;

73 *
	mm⁄_thoußnds_£p
;

74 *
	mm⁄_groupög
;

75 *
	mposôive_sign
;

76 *
	m√g©ive_sign
;

77 
	möt_‰ac_digôs
;

78 
	m‰ac_digôs
;

80 
	mp_cs_¥e˚des
;

82 
	mp_£p_by_•a˚
;

84 
	mn_cs_¥e˚des
;

86 
	mn_£p_by_•a˚
;

93 
	mp_sign_po¢
;

94 
	mn_sign_po¢
;

95 #ifde‡
__USE_ISOC99


97 
	möt_p_cs_¥e˚des
;

99 
	möt_p_£p_by_•a˚
;

101 
	möt_n_cs_¥e˚des
;

103 
	möt_n_£p_by_•a˚
;

110 
	möt_p_sign_po¢
;

111 
	möt_n_sign_po¢
;

113 
	m__öt_p_cs_¥e˚des
;

114 
	m__öt_p_£p_by_•a˚
;

115 
	m__öt_n_cs_¥e˚des
;

116 
	m__öt_n_£p_by_•a˚
;

117 
	m__öt_p_sign_po¢
;

118 
	m__öt_n_sign_po¢
;

124 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

127 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

129 
__END_NAMESPACE_STD


132 #ifdef 
__USE_XOPEN2K8


145 
	~<xloˇÀ.h
>

151 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

152 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

158 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

159 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

160 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

161 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

162 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

163 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

164 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

165 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

166 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

167 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

168 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

169 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

170 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

171 | 
LC_NUMERIC_MASK
 \

172 | 
LC_TIME_MASK
 \

173 | 
LC_COLLATE_MASK
 \

174 | 
LC_MONETARY_MASK
 \

175 | 
LC_MESSAGES_MASK
 \

176 | 
LC_PAPER_MASK
 \

177 | 
LC_NAME_MASK
 \

178 | 
LC_ADDRESS_MASK
 \

179 | 
LC_TELEPHONE_MASK
 \

180 | 
LC_MEASUREMENT_MASK
 \

181 | 
LC_IDENTIFICATION_MASK
 \

182 )

	)

186 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

190 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

197 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

201 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

205 
__END_DECLS


	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/net/if.h

19 #i‚de‡
_NET_IF_H


20 
	#_NET_IF_H
 1

	)

22 
	~<„©uªs.h
>

24 #ifde‡
__USE_MISC


25 
	~<sys/ty≥s.h
>

26 
	~<sys/sockë.h
>

31 
	#IF_NAMESIZE
 16

	)

33 
	sif_«meödex


35 
	mif_ödex
;

36 *
	mif_«me
;

40 #ifde‡
__USE_MISC


44 
	mIFF_UP
 = 0x1,

45 
	#IFF_UP
 
IFF_UP


	)

46 
	mIFF_BROADCAST
 = 0x2,

47 
	#IFF_BROADCAST
 
IFF_BROADCAST


	)

48 
	mIFF_DEBUG
 = 0x4,

49 
	#IFF_DEBUG
 
IFF_DEBUG


	)

50 
	mIFF_LOOPBACK
 = 0x8,

51 
	#IFF_LOOPBACK
 
IFF_LOOPBACK


	)

52 
	mIFF_POINTOPOINT
 = 0x10,

53 
	#IFF_POINTOPOINT
 
IFF_POINTOPOINT


	)

54 
	mIFF_NOTRAILERS
 = 0x20,

55 
	#IFF_NOTRAILERS
 
IFF_NOTRAILERS


	)

56 
	mIFF_RUNNING
 = 0x40,

57 
	#IFF_RUNNING
 
IFF_RUNNING


	)

58 
	mIFF_NOARP
 = 0x80,

59 
	#IFF_NOARP
 
IFF_NOARP


	)

60 
	mIFF_PROMISC
 = 0x100,

61 
	#IFF_PROMISC
 
IFF_PROMISC


	)

64 
	mIFF_ALLMULTI
 = 0x200,

65 
	#IFF_ALLMULTI
 
IFF_ALLMULTI


	)

67 
	mIFF_MASTER
 = 0x400,

68 
	#IFF_MASTER
 
IFF_MASTER


	)

69 
	mIFF_SLAVE
 = 0x800,

70 
	#IFF_SLAVE
 
IFF_SLAVE


	)

72 
	mIFF_MULTICAST
 = 0x1000,

73 
	#IFF_MULTICAST
 
IFF_MULTICAST


	)

75 
	mIFF_PORTSEL
 = 0x2000,

76 
	#IFF_PORTSEL
 
IFF_PORTSEL


	)

77 
	mIFF_AUTOMEDIA
 = 0x4000,

78 
	#IFF_AUTOMEDIA
 
IFF_AUTOMEDIA


	)

79 
	mIFF_DYNAMIC
 = 0x8000

80 
	#IFF_DYNAMIC
 
IFF_DYNAMIC


	)

88 
	siÁddr


90 
sockaddr
 
	miÁ_addr
;

93 
sockaddr
 
	mifu_brﬂdaddr
;

94 
sockaddr
 
	mifu_d°addr
;

95 } 
	miÁ_ifu
;

96 
iÁ˚
 *
	miÁ_iÂ
;

97 
iÁddr
 *
	miÁ_√xt
;

100 
	#iÁ_brﬂdaddr
 
iÁ_ifu
.
ifu_brﬂdaddr


	)

101 
	#iÁ_d°addr
 
iÁ_ifu
.
ifu_d°addr


	)

111 
	sifm≠


113 
	mmem_°¨t
;

114 
	mmem_íd
;

115 
	mba£_addr
;

116 
	múq
;

117 
	mdma
;

118 
	mp‹t
;

126 
	si‰eq


128 
	#IFHWADDRLEN
 6

	)

129 
	#IFNAMSIZ
 
IF_NAMESIZE


	)

132 
	mi‰n_«me
[
IFNAMSIZ
];

133 } 
	mi‰_i‰n
;

137 
sockaddr
 
	mi‰u_addr
;

138 
sockaddr
 
	mi‰u_d°addr
;

139 
sockaddr
 
	mi‰u_brﬂdaddr
;

140 
sockaddr
 
	mi‰u_√tmask
;

141 
sockaddr
 
	mi‰u_hwaddr
;

142 
	mi‰u_Êags
;

143 
	mi‰u_ivÆue
;

144 
	mi‰u_mtu
;

145 
ifm≠
 
	mi‰u_m≠
;

146 
	mi‰u_¶ave
[
IFNAMSIZ
];

147 
	mi‰u_√w«me
[
IFNAMSIZ
];

148 
__ˇddr_t
 
	mi‰u_d©a
;

149 } 
	mi‰_i‰u
;

151 
	#i‰_«me
 
i‰_i‰n
.
i‰n_«me


	)

152 
	#i‰_hwaddr
 
i‰_i‰u
.
i‰u_hwaddr


	)

153 
	#i‰_addr
 
i‰_i‰u
.
i‰u_addr


	)

154 
	#i‰_d°addr
 
i‰_i‰u
.
i‰u_d°addr


	)

155 
	#i‰_brﬂdaddr
 
i‰_i‰u
.
i‰u_brﬂdaddr


	)

156 
	#i‰_√tmask
 
i‰_i‰u
.
i‰u_√tmask


	)

157 
	#i‰_Êags
 
i‰_i‰u
.
i‰u_Êags


	)

158 
	#i‰_mëric
 
i‰_i‰u
.
i‰u_ivÆue


	)

159 
	#i‰_mtu
 
i‰_i‰u
.
i‰u_mtu


	)

160 
	#i‰_m≠
 
i‰_i‰u
.
i‰u_m≠


	)

161 
	#i‰_¶ave
 
i‰_i‰u
.
i‰u_¶ave


	)

162 
	#i‰_d©a
 
i‰_i‰u
.
i‰u_d©a


	)

163 
	#i‰_ifödex
 
i‰_i‰u
.
i‰u_ivÆue


	)

164 
	#i‰_b™dwidth
 
i‰_i‰u
.
i‰u_ivÆue


	)

165 
	#i‰_qÀn
 
i‰_i‰u
.
i‰u_ivÆue


	)

166 
	#i‰_√w«me
 
i‰_i‰u
.
i‰u_√w«me


	)

167 
	#_IOT_i‰eq
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),16,0,0)

	)

168 
	#_IOT_i‰eq_sh‹t
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),1,0,0)

	)

169 
	#_IOT_i‰eq_öt
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),1,0,0)

	)

176 
	sifc⁄f


178 
	mifc_Àn
;

181 
__ˇddr_t
 
	mifcu_buf
;

182 
i‰eq
 *
	mifcu_ªq
;

183 } 
	mifc_ifcu
;

185 
	#ifc_buf
 
ifc_ifcu
.
ifcu_buf


	)

186 
	#ifc_ªq
 
ifc_ifcu
.
ifcu_ªq


	)

187 
	#_IOT_ifc⁄f
 
	`_IOT
(
	`_IOTS
(
ifc⁄f
),1,0,0,0,0Ë

	)

190 
__BEGIN_DECLS


193 
	$if_«mëoödex
 (c⁄° *
__i‚ame
Ë
__THROW
;

194 *
	$if_ödext⁄ame
 (
__ifödex
, *
__i‚ame
Ë
__THROW
;

197 
if_«meödex
 *
	$if_«meödex
 (Ë
__THROW
;

200 
	$if_‰ì«meödex
 (
if_«meödex
 *
__±r
Ë
__THROW
;

202 
__END_DECLS


	@/usr/include/net/if_arp.h

22 #i‚de‡
_NET_IF_ARP_H


24 
	#_NET_IF_ARP_H
 1

	)

25 
	~<sys/cdefs.h
>

27 
	~<sys/ty≥s.h
>

28 
	~<sys/sockë.h
>

30 
	g__BEGIN_DECLS


33 
	#MAX_ADDR_LEN
 7

	)

39 
	#ARPOP_REQUEST
 1

	)

40 
	#ARPOP_REPLY
 2

	)

41 
	#ARPOP_RREQUEST
 3

	)

42 
	#ARPOP_RREPLY
 4

	)

43 
	#ARPOP_InREQUEST
 8

	)

44 
	#ARPOP_InREPLY
 9

	)

45 
	#ARPOP_NAK
 10

	)

54 
	s¨phdr


56 
	m¨_hrd
;

57 
	m¨_¥o
;

58 
	m¨_h 
;

59 
	m¨_∂n
;

60 
	m¨_›
;

64 
	m__¨_sha
[
ETH_ALEN
];

65 
	m__¨_sù
[4];

66 
	m__¨_tha
[
ETH_ALEN
];

67 
	m__¨_tù
[4];

73 
	#ARPHRD_NETROM
 0

	)

74 
	#ARPHRD_ETHER
 1

	)

75 
	#ARPHRD_EETHER
 2

	)

76 
	#ARPHRD_AX25
 3

	)

77 
	#ARPHRD_PRONET
 4

	)

78 
	#ARPHRD_CHAOS
 5

	)

79 
	#ARPHRD_IEEE802
 6

	)

80 
	#ARPHRD_ARCNET
 7

	)

81 
	#ARPHRD_APPLETLK
 8

	)

82 
	#ARPHRD_DLCI
 15

	)

83 
	#ARPHRD_ATM
 19

	)

84 
	#ARPHRD_METRICOM
 23

	)

85 
	#ARPHRD_IEEE1394
 24

	)

86 
	#ARPHRD_EUI64
 27

	)

87 
	#ARPHRD_INFINIBAND
 32

	)

90 
	#ARPHRD_SLIP
 256

	)

91 
	#ARPHRD_CSLIP
 257

	)

92 
	#ARPHRD_SLIP6
 258

	)

93 
	#ARPHRD_CSLIP6
 259

	)

94 
	#ARPHRD_RSRVD
 260

	)

95 
	#ARPHRD_ADAPT
 264

	)

96 
	#ARPHRD_ROSE
 270

	)

97 
	#ARPHRD_X25
 271

	)

98 
	#ARPHRD_HWX25
 272

	)

99 
	#ARPHRD_PPP
 512

	)

100 
	#ARPHRD_CISCO
 513

	)

101 
	#ARPHRD_HDLC
 
ARPHRD_CISCO


	)

102 
	#ARPHRD_LAPB
 516

	)

103 
	#ARPHRD_DDCMP
 517

	)

104 
	#ARPHRD_RAWHDLC
 518

	)

106 
	#ARPHRD_TUNNEL
 768

	)

107 
	#ARPHRD_TUNNEL6
 769

	)

108 
	#ARPHRD_FRAD
 770

	)

109 
	#ARPHRD_SKIP
 771

	)

110 
	#ARPHRD_LOOPBACK
 772

	)

111 
	#ARPHRD_LOCALTLK
 773

	)

112 
	#ARPHRD_FDDI
 774

	)

113 
	#ARPHRD_BIF
 775

	)

114 
	#ARPHRD_SIT
 776

	)

115 
	#ARPHRD_IPDDP
 777

	)

116 
	#ARPHRD_IPGRE
 778

	)

117 
	#ARPHRD_PIMREG
 779

	)

118 
	#ARPHRD_HIPPI
 780

	)

119 
	#ARPHRD_ASH
 781

	)

120 
	#ARPHRD_ECONET
 782

	)

121 
	#ARPHRD_IRDA
 783

	)

122 
	#ARPHRD_FCPP
 784

	)

123 
	#ARPHRD_FCAL
 785

	)

124 
	#ARPHRD_FCPL
 786

	)

125 
	#ARPHRD_FCFABRIC
 787

	)

126 
	#ARPHRD_IEEE802_TR
 800

	)

127 
	#ARPHRD_IEEE80211
 801

	)

128 
	#ARPHRD_IEEE80211_PRISM
 802

	)

129 
	#ARPHRD_IEEE80211_RADIOTAP
 803

	)

130 
	#ARPHRD_IEEE802154
 804

	)

131 
	#ARPHRD_IEEE802154_PHY
 805

	)

133 
	#ARPHRD_VOID
 0xFFFF

	)

134 
	#ARPHRD_NONE
 0xFFFE

	)

138 
	s¨¥eq


140 
sockaddr
 
	m¨p_∑
;

141 
sockaddr
 
	m¨p_ha
;

142 
	m¨p_Êags
;

143 
sockaddr
 
	m¨p_√tmask
;

144 
	m¨p_dev
[16];

147 
	s¨¥eq_ﬁd


149 
sockaddr
 
	m¨p_∑
;

150 
sockaddr
 
	m¨p_ha
;

151 
	m¨p_Êags
;

152 
sockaddr
 
	m¨p_√tmask
;

156 
	#ATF_COM
 0x02

	)

157 
	#ATF_PERM
 0x04

	)

158 
	#ATF_PUBL
 0x08

	)

159 
	#ATF_USETRAILERS
 0x10

	)

160 
	#ATF_NETMASK
 0x20

	)

162 
	#ATF_DONTPUB
 0x40

	)

163 
	#ATF_MAGIC
 0x80

	)

167 
	#ARPD_UPDATE
 0x01

	)

168 
	#ARPD_LOOKUP
 0x02

	)

169 
	#ARPD_FLUSH
 0x03

	)

171 
	s¨pd_ªque°


173 
	mªq
;

174 
u_öt32_t
 
	mù
;

175 
	mdev
;

176 
	m°amp
;

177 
	mupd©ed
;

178 
	mha
[
MAX_ADDR_LEN
];

181 
	g__END_DECLS


	@/usr/include/net/route.h

20 #i‚de‡
_NET_ROUTE_H


21 
	#_NET_ROUTE_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<sys/sockë.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<√töë/ö.h
>

27 
	~<bôs/w‹dsize.h
>

31 
	sπíåy


33 
	mπ_∑d1
;

34 
sockaddr
 
	mπ_d°
;

35 
sockaddr
 
	mπ_g©eway
;

36 
sockaddr
 
	mπ_gímask
;

37 
	mπ_Êags
;

38 
	mπ_∑d2
;

39 
	mπ_∑d3
;

40 
	mπ_tos
;

41 
	mπ_˛ass
;

42 #i‡
__WORDSIZE
 == 64

43 
	mπ_∑d4
[3];

45 
	mπ_∑d4
;

47 
	mπ_mëric
;

48 *
	mπ_dev
;

49 
	mπ_mtu
;

50 
	mπ_wödow
;

51 
	mπ_úâ
;

54 
	#π_mss
 
π_mtu


	)

57 
	sö6_πmsg


59 
ö6_addr
 
	mπmsg_d°
;

60 
ö6_addr
 
	mπmsg_§c
;

61 
ö6_addr
 
	mπmsg_g©eway
;

62 
u_öt32_t
 
	mπmsg_ty≥
;

63 
u_öt16_t
 
	mπmsg_d°_Àn
;

64 
u_öt16_t
 
	mπmsg_§c_Àn
;

65 
u_öt32_t
 
	mπmsg_mëric
;

66 
	mπmsg_öfo
;

67 
u_öt32_t
 
	mπmsg_Êags
;

68 
	mπmsg_ifödex
;

72 
	#RTF_UP
 0x0001

	)

73 
	#RTF_GATEWAY
 0x0002

	)

75 
	#RTF_HOST
 0x0004

	)

76 
	#RTF_REINSTATE
 0x0008

	)

77 
	#RTF_DYNAMIC
 0x0010

	)

78 
	#RTF_MODIFIED
 0x0020

	)

79 
	#RTF_MTU
 0x0040

	)

80 
	#RTF_MSS
 
RTF_MTU


	)

81 
	#RTF_WINDOW
 0x0080

	)

82 
	#RTF_IRTT
 0x0100

	)

83 
	#RTF_REJECT
 0x0200

	)

84 
	#RTF_STATIC
 0x0400

	)

85 
	#RTF_XRESOLVE
 0x0800

	)

86 
	#RTF_NOFORWARD
 0x1000

	)

87 
	#RTF_THROW
 0x2000

	)

88 
	#RTF_NOPMTUDISC
 0x4000

	)

91 
	#RTF_DEFAULT
 0x00010000

	)

92 
	#RTF_ALLONLINK
 0x00020000

	)

93 
	#RTF_ADDRCONF
 0x00040000

	)

95 
	#RTF_LINKRT
 0x00100000

	)

96 
	#RTF_NONEXTHOP
 0x00200000

	)

98 
	#RTF_CACHE
 0x01000000

	)

99 
	#RTF_FLOW
 0x02000000

	)

100 
	#RTF_POLICY
 0x04000000

	)

102 
	#RTCF_VALVE
 0x00200000

	)

103 
	#RTCF_MASQ
 0x00400000

	)

104 
	#RTCF_NAT
 0x00800000

	)

105 
	#RTCF_DOREDIRECT
 0x01000000

	)

106 
	#RTCF_LOG
 0x02000000

	)

107 
	#RTCF_DIRECTSRC
 0x04000000

	)

109 
	#RTF_LOCAL
 0x80000000

	)

110 
	#RTF_INTERFACE
 0x40000000

	)

111 
	#RTF_MULTICAST
 0x20000000

	)

112 
	#RTF_BROADCAST
 0x10000000

	)

113 
	#RTF_NAT
 0x08000000

	)

115 
	#RTF_ADDRCLASSMASK
 0xF8000000

	)

116 
	#RT_ADDRCLASS
(
Êags
Ë((
__u_öt32_t
ËÊag†>> 23)

	)

118 
	#RT_TOS
(
tos
Ë(—osË& 
IPTOS_TOS_MASK
)

	)

120 
	#RT_LOCALADDR
(
Êags
Ë((Êag†& 
RTF_ADDRCLASSMASK
) \

121 =(
RTF_LOCAL
|
RTF_INTERFACE
))

	)

123 
	#RT_CLASS_UNSPEC
 0

	)

124 
	#RT_CLASS_DEFAULT
 253

	)

126 
	#RT_CLASS_MAIN
 254

	)

127 
	#RT_CLASS_LOCAL
 255

	)

128 
	#RT_CLASS_MAX
 255

	)

131 
	#RTMSG_ACK
 
NLMSG_ACK


	)

132 
	#RTMSG_OVERRUN
 
NLMSG_OVERRUN


	)

134 
	#RTMSG_NEWDEVICE
 0x11

	)

135 
	#RTMSG_DELDEVICE
 0x12

	)

136 
	#RTMSG_NEWROUTE
 0x21

	)

137 
	#RTMSG_DELROUTE
 0x22

	)

138 
	#RTMSG_NEWRULE
 0x31

	)

139 
	#RTMSG_DELRULE
 0x32

	)

140 
	#RTMSG_CONTROL
 0x40

	)

142 
	#RTMSG_AR_FAILED
 0x51

	)

	@/usr/include/netax25/ax25.h

18 #i‚de‡
_NETAX25_AX25_H


19 
	#_NETAX25_AX25_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<bôs/sockaddr.h
>

25 
	#SOL_AX25
 257

	)

28 
	#AX25_WINDOW
 1

	)

29 
	#AX25_T1
 2

	)

30 
	#AX25_T2
 5

	)

31 
	#AX25_T3
 4

	)

32 
	#AX25_N2
 3

	)

33 
	#AX25_BACKOFF
 6

	)

34 
	#AX25_EXTSEQ
 7

	)

35 
	#AX25_PIDINCL
 8

	)

36 
	#AX25_IDLE
 9

	)

37 
	#AX25_PACLEN
 10

	)

38 
	#AX25_IPMAXQUEUE
 11

	)

39 
	#AX25_IAMDIGI
 12

	)

40 
	#AX25_KILL
 99

	)

43 
	#SIOCAX25GETUID
 (
SIOCPROTOPRIVATE
)

	)

44 
	#SIOCAX25ADDUID
 (
SIOCPROTOPRIVATE
+1)

	)

45 
	#SIOCAX25DELUID
 (
SIOCPROTOPRIVATE
+2)

	)

46 
	#SIOCAX25NOUID
 (
SIOCPROTOPRIVATE
+3)

	)

47 
	#SIOCAX25BPQADDR
 (
SIOCPROTOPRIVATE
+4)

	)

48 
	#SIOCAX25GETPARMS
 (
SIOCPROTOPRIVATE
+5)

	)

49 
	#SIOCAX25SETPARMS
 (
SIOCPROTOPRIVATE
+6)

	)

50 
	#SIOCAX25OPTRT
 (
SIOCPROTOPRIVATE
+7)

	)

51 
	#SIOCAX25CTLCON
 (
SIOCPROTOPRIVATE
+8)

	)

52 
	#SIOCAX25GETINFO
 (
SIOCPROTOPRIVATE
+9)

	)

53 
	#SIOCAX25ADDFWD
 (
SIOCPROTOPRIVATE
+10)

	)

54 
	#SIOCAX25DELFWD
 (
SIOCPROTOPRIVATE
+11)

	)

57 
	#AX25_NOUID_DEFAULT
 0

	)

58 
	#AX25_NOUID_BLOCK
 1

	)

59 
	#AX25_SET_RT_IPMODE
 2

	)

62 
	#AX25_DIGI_INBAND
 0x01

	)

63 
	#AX25_DIGI_XBAND
 0x02

	)

66 
	#AX25_MAX_DIGIS
 8

	)

71 
	max25_ˇŒ
[7];

73 
	tax25_addªss
;

75 
	ssockaddr_ax25


77 
ß_Ámûy_t
 
	mßx25_Ámûy
;

78 
ax25_addªss
 
	mßx25_ˇŒ
;

79 
	mßx25_ndigis
;

85 
	sfuŒ_sockaddr_ax25


87 
sockaddr_ax25
 
	mfß_ax25
;

88 
ax25_addªss
 
	mfß_digùóãr
[
AX25_MAX_DIGIS
];

90 
	#ßx25_uid
 
ßx25_ndigis


	)

92 
	sax25_rouãs_°ru˘


94 
ax25_addªss
 
	mp‹t_addr
;

95 
ax25_addªss
 
	mde°_addr
;

96 
	mdigi_cou¡
;

97 
ax25_addªss
 
	mdigi_addr
[
AX25_MAX_DIGIS
];

101 
	sax25_˘l_°ru˘


103 
ax25_addªss
 
	mp‹t_addr
;

104 
ax25_addªss
 
	msour˚_addr
;

105 
ax25_addªss
 
	mde°_addr
;

106 
	mcmd
;

107 
	m¨g
;

108 
	mdigi_cou¡
;

109 
ax25_addªss
 
	mdigi_addr
[
AX25_MAX_DIGIS
];

112 
	sax25_öfo_°ru˘


114 
	mn2
, 
	mn2cou¡
;

115 
	mt1
, 
	mt1timî
;

116 
	mt2
, 
	mt2timî
;

117 
	mt3
, 
	mt3timî
;

118 
	midÀ
, 
	midÀtimî
;

119 
	m°©e
;

120 
	mrcv_q
, 
	m¢d_q
;

123 
	sax25_fwd_°ru˘


125 
ax25_addªss
 
	mp‹t_‰om
;

126 
ax25_addªss
 
	mp‹t_to
;

130 
	sax25_rouã_›t_°ru˘


132 
ax25_addªss
 
	mp‹t_addr
;

133 
ax25_addªss
 
	mde°_addr
;

134 
	mcmd
;

135 
	m¨g
;

139 
	sax25_bpqaddr_°ru˘


141 
	mdev
[16];

142 
ax25_addªss
 
	maddr
;

146 
	#AX25_VALUES_IPDEFMODE
 0

	)

147 
	#AX25_VALUES_AXDEFMODE
 1

	)

148 
	#AX25_VALUES_NETROM
 2

	)

149 
	#AX25_VALUES_TEXT
 3

	)

150 
	#AX25_VALUES_BACKOFF
 4

	)

151 
	#AX25_VALUES_CONMODE
 5

	)

152 
	#AX25_VALUES_WINDOW
 6

	)

153 
	#AX25_VALUES_EWINDOW
 7

	)

154 
	#AX25_VALUES_T1
 8

	)

155 
	#AX25_VALUES_T2
 9

	)

156 
	#AX25_VALUES_T3
 10

	)

157 
	#AX25_VALUES_N2
 11

	)

158 
	#AX25_VALUES_DIGI
 12

	)

159 
	#AX25_VALUES_IDLE
 13

	)

160 
	#AX25_VALUES_PACLEN
 14

	)

161 
	#AX25_VALUES_IPMAXQUEUE
 15

	)

162 
	#AX25_MAX_VALUES
 20

	)

164 
	sax25_∑rms_°ru˘


166 
ax25_addªss
 
	mp‹t_addr
;

167 
	mvÆues
[
AX25_MAX_VALUES
];

	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_BSD


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifdef 
__USE_POSIX


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__glibc_ª£rved
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/neteconet/ec.h

19 #i‚de‡
_NETECONET_EC_H


20 
	#_NETECONET_EC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/sockaddr.h
>

25 
	sec_addr


27 
	m°©i⁄
;

28 
	m√t
;

31 
	ssockaddr_ec


33 
__SOCKADDR_COMMON
 (
£c_
);

34 
	mp‹t
;

35 
	mcb
;

36 
	mty≥
;

37 
ec_addr
 
	maddr
;

38 
	mcookõ
;

41 
	#ECTYPE_PACKET_RECEIVED
 0

	)

42 
	#ECTYPE_TRANSMIT_STATUS
 0x10

	)

44 
	#ECTYPE_TRANSMIT_OK
 1

	)

45 
	#ECTYPE_TRANSMIT_NOT_LISTENING
 2

	)

46 
	#ECTYPE_TRANSMIT_NET_ERROR
 3

	)

47 
	#ECTYPE_TRANSMIT_NO_CLOCK
 4

	)

48 
	#ECTYPE_TRANSMIT_LINE_JAMMED
 5

	)

49 
	#ECTYPE_TRANSMIT_NOT_PRESENT
 6

	)

	@/usr/include/netinet/if_fddi.h

18 #i‚de‡
_NETINET_IF_FDDI_H


19 
	#_NETINET_IF_FDDI_H
 1

	)

21 
	~<sys/cdefs.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<asm/ty≥s.h
>

25 
	~<löux/if_fddi.h
>

27 #ifde‡
__USE_BSD


29 
	sfddi_hódî
 {

30 
u_öt8_t
 
	mfddi_fc
;

31 
u_öt8_t
 
	mfddi_dho°
[
FDDI_K_ALEN
];

32 
u_öt8_t
 
	mfddi_sho°
[
FDDI_K_ALEN
];

	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_RAW
 = 255,

89 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

90 
	mIPPROTO_MAX


96 #i‚de‡
__USE_KERNEL_IPV6_DEFS


99 
	mIPPROTO_HOPOPTS
 = 0,

100 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

101 
	mIPPROTO_ROUTING
 = 43,

102 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

103 
	mIPPROTO_FRAGMENT
 = 44,

104 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

105 
	mIPPROTO_ICMPV6
 = 58,

106 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

107 
	mIPPROTO_NONE
 = 59,

108 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

109 
	mIPPROTO_DSTOPTS
 = 60,

110 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

111 
	mIPPROTO_MH
 = 135

112 
	#IPPROTO_MH
 
IPPROTO_MH


	)

117 
uöt16_t
 
	tö_p‹t_t
;

122 
	mIPPORT_ECHO
 = 7,

123 
	mIPPORT_DISCARD
 = 9,

124 
	mIPPORT_SYSTAT
 = 11,

125 
	mIPPORT_DAYTIME
 = 13,

126 
	mIPPORT_NETSTAT
 = 15,

127 
	mIPPORT_FTP
 = 21,

128 
	mIPPORT_TELNET
 = 23,

129 
	mIPPORT_SMTP
 = 25,

130 
	mIPPORT_TIMESERVER
 = 37,

131 
	mIPPORT_NAMESERVER
 = 42,

132 
	mIPPORT_WHOIS
 = 43,

133 
	mIPPORT_MTP
 = 57,

135 
	mIPPORT_TFTP
 = 69,

136 
	mIPPORT_RJE
 = 77,

137 
	mIPPORT_FINGER
 = 79,

138 
	mIPPORT_TTYLINK
 = 87,

139 
	mIPPORT_SUPDUP
 = 95,

142 
	mIPPORT_EXECSERVER
 = 512,

143 
	mIPPORT_LOGINSERVER
 = 513,

144 
	mIPPORT_CMDSERVER
 = 514,

145 
	mIPPORT_EFSSERVER
 = 520,

148 
	mIPPORT_BIFFUDP
 = 512,

149 
	mIPPORT_WHOSERVER
 = 513,

150 
	mIPPORT_ROUTESERVER
 = 520,

153 
	mIPPORT_RESERVED
 = 1024,

156 
	mIPPORT_USERRESERVED
 = 5000

164 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

165 
	#IN_CLASSA_NET
 0xff000000

	)

166 
	#IN_CLASSA_NSHIFT
 24

	)

167 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

168 
	#IN_CLASSA_MAX
 128

	)

170 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

171 
	#IN_CLASSB_NET
 0xffff0000

	)

172 
	#IN_CLASSB_NSHIFT
 16

	)

173 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

174 
	#IN_CLASSB_MAX
 65536

	)

176 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

177 
	#IN_CLASSC_NET
 0xffffff00

	)

178 
	#IN_CLASSC_NSHIFT
 8

	)

179 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

181 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

182 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

184 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

185 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

188 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

190 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

192 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

195 
	#IN_LOOPBACKNET
 127

	)

197 #i‚de‡
INADDR_LOOPBACK


198 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

202 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

203 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

204 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

205 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

207 #i‚de‡
__USE_KERNEL_IPV6_DEFS


209 
	sö6_addr


213 
uöt8_t
 
	m__u6_addr8
[16];

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


215 
uöt16_t
 
	m__u6_addr16
[8];

216 
uöt32_t
 
	m__u6_addr32
[4];

218 } 
	m__ö6_u
;

219 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

220 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


221 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

222 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

227 c⁄° 
ö6_addr
 
ö6addr_™y
;

228 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

229 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

230 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

232 
	#INET_ADDRSTRLEN
 16

	)

233 
	#INET6_ADDRSTRLEN
 46

	)

237 
	ssockaddr_ö


239 
__SOCKADDR_COMMON
 (
sö_
);

240 
ö_p‹t_t
 
	msö_p‹t
;

241 
ö_addr
 
	msö_addr
;

244 
	msö_zîo
[ (
sockaddr
) -

245 
__SOCKADDR_COMMON_SIZE
 -

246  (
ö_p‹t_t
) -

247  (
ö_addr
)];

250 #i‚de‡
__USE_KERNEL_IPV6_DEFS


252 
	ssockaddr_ö6


254 
__SOCKADDR_COMMON
 (
sö6_
);

255 
ö_p‹t_t
 
	msö6_p‹t
;

256 
uöt32_t
 
	msö6_Êowöfo
;

257 
ö6_addr
 
	msö6_addr
;

258 
uöt32_t
 
	msö6_sc›e_id
;

262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


264 
	sù_mªq


267 
ö_addr
 
	mimr_mu…üddr
;

270 
ö_addr
 
	mimr_öãrÁ˚
;

273 
	sù_mªq_sour˚


276 
ö_addr
 
	mimr_mu…üddr
;

279 
ö_addr
 
	mimr_öãrÁ˚
;

282 
ö_addr
 
	mimr_sour˚addr
;

286 #i‚de‡
__USE_KERNEL_IPV6_DEFS


288 
	sùv6_mªq


291 
ö6_addr
 
	mùv6mr_mu…üddr
;

294 
	mùv6mr_öãrÁ˚
;

298 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


300 
	sgroup_ªq


303 
uöt32_t
 
	mgr_öãrÁ˚
;

306 
sockaddr_°‹age
 
	mgr_group
;

309 
	sgroup_sour˚_ªq


312 
uöt32_t
 
	mg§_öãrÁ˚
;

315 
sockaddr_°‹age
 
	mg§_group
;

318 
sockaddr_°‹age
 
	mg§_sour˚
;

323 
	sù_msfûãr


326 
ö_addr
 
	mimsf_mu…üddr
;

329 
ö_addr
 
	mimsf_öãrÁ˚
;

332 
uöt32_t
 
	mimsf_fmode
;

335 
uöt32_t
 
	mimsf_num§c
;

337 
ö_addr
 
	mimsf_¶i°
[1];

340 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

341 -  (
ö_addr
) \

342 + (
num§c
Ë*  (
ö_addr
))

	)

344 
	sgroup_fûãr


347 
uöt32_t
 
	mgf_öãrÁ˚
;

350 
sockaddr_°‹age
 
	mgf_group
;

353 
uöt32_t
 
	mgf_fmode
;

356 
uöt32_t
 
	mgf_num§c
;

358 
sockaddr_°‹age
 
	mgf_¶i°
[1];

361 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

362 -  (
sockaddr_°‹age
) \

363 + ((
num§c
) \

364 *  (
sockaddr_°‹age
)))

	)

374 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

375 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

376 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

382 
	~<ídün.h
>

385 
	~<bôs/byãsw≠.h
>

387 #ifde‡
__OPTIMIZE__


391 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


394 
	#¡ohl
(
x
Ë(x)

	)

395 
	#¡ohs
(
x
Ë(x)

	)

396 
	#ht⁄l
(
x
Ë(x)

	)

397 
	#ht⁄s
(
x
Ë(x)

	)

399 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


400 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

401 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

402 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

408 #ifde‡
__GNUC__


409 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

410 (
__exãnsi⁄__
 \

411 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

412 
__a
->
s6_addr32
[0] == 0 \

413 && 
__a
->
s6_addr32
[1] == 0 \

414 && 
__a
->
s6_addr32
[2] == 0 \

415 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

417 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

418 (
__exãnsi⁄__
 \

419 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

420 
__a
->
s6_addr32
[0] == 0 \

421 && 
__a
->
s6_addr32
[1] == 0 \

422 && 
__a
->
s6_addr32
[2] == 0 \

423 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

425 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

426 (
__exãnsi⁄__
 \

427 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

428 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

430 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

431 (
__exãnsi⁄__
 \

432 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

433 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

435 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

436 (
__exãnsi⁄__
 \

437 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

438 
__a
->
s6_addr32
[0] == 0 \

439 && 
__a
->
s6_addr32
[1] == 0 \

440 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

442 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

443 (
__exãnsi⁄__
 \

444 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

445 
__a
->
s6_addr32
[0] == 0 \

446 && 
__a
->
s6_addr32
[1] == 0 \

447 && 
__a
->
s6_addr32
[2] == 0 \

448 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

450 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

451 (
__exãnsi⁄__
 \

452 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

453 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

454 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

455 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

456 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

457 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

459 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

460 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

461 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

462 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

465 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

466 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

467 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

468 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

471 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

472 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

473 =
	`ht⁄l
 (0x„800000))

	)

475 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

476 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

477 =
	`ht⁄l
 (0x„c00000))

	)

479 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

480 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

481 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

484 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

485 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

486 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

487 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

488 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

490 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

491 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

492 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

493 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

497 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

499 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


501 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

504 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

505 
__THROW
;

509 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

510 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

511 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

513 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

514 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

515 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

517 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

518 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

519 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

521 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

522 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

523 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

525 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

526 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

527 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

530 #ifde‡
__USE_GNU


531 
cmsghdr
;

534 
	sö6_pktöfo


536 
ö6_addr
 
ùi6_addr
;

537 
ùi6_ifödex
;

541 
	sù6_mtuöfo


543 
sockaddr_ö6
 
ù6m_addr
;

544 
uöt32_t
 
ù6m_mtu
;

549 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

552 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

553 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

554 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

555 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

557 
__mu…x
, 
__∂usy
)

558 
__THROW
 
__©åibuã_dïªˇãd__
;

559 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

560 
uöt8_t
 **
__çåp
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
, 
__ty≥
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

568 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

569 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

570 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

571 **
__d©abuÂ
Ë
__THROW
;

572 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

573 
__THROW
;

574 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

575 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

577 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

578 **
__d©abuÂ
Ë
__THROW
;

579 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

583 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

587 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

588 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

589 
__£gmíts
Ë
__THROW
;

590 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

591 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

592 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

593 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

594 
__THROW
;

600 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

601 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

602 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

603 
__THROW
;

606 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

607 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

608 
uöt32_t
 
__num§c
,

609 c⁄° 
ö_addr
 *
__¶i°
)

610 
__THROW
;

614 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

615 c⁄° 
sockaddr
 *
__group
,

616 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

617 
uöt32_t
 *
__num§c
,

618 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

621 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

622 c⁄° 
sockaddr
 *
__group
,

623 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

624 
uöt32_t
 
__num§c
,

625 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

628 
__END_DECLS


	@/usr/include/netinet/ip.h

18 #i‚de‡
__NETINET_IP_H


19 
	#__NETINET_IP_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

24 
	~<√töë/ö.h
>

26 
__BEGIN_DECLS


28 
	stime°amp


30 
u_öt8_t
 
	mÀn
;

31 
u_öt8_t
 
	m±r
;

32 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


33 
	mÊags
:4;

34 
	movîÊow
:4;

35 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


36 
	movîÊow
:4;

37 
	mÊags
:4;

41 
u_öt32_t
 
	md©a
[9];

44 
	sùhdr


46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	mihl
:4;

48 
	mvîsi⁄
:4;

49 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


50 
	mvîsi⁄
:4;

51 
	mihl
:4;

55 
u_öt8_t
 
	mtos
;

56 
u_öt16_t
 
	mtŸ_Àn
;

57 
u_öt16_t
 
	mid
;

58 
u_öt16_t
 
	m‰ag_off
;

59 
u_öt8_t
 
	mâl
;

60 
u_öt8_t
 
	m¥Ÿocﬁ
;

61 
u_öt16_t
 
	mcheck
;

62 
u_öt32_t
 
	mßddr
;

63 
u_öt32_t
 
	mdaddr
;

67 #ifde‡
__USE_BSD


107 
	sù


109 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


110 
	mù_hl
:4;

111 
	mù_v
:4;

113 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


114 
	mù_v
:4;

115 
	mù_hl
:4;

117 
u_öt8_t
 
	mù_tos
;

118 
u_sh‹t
 
	mù_Àn
;

119 
u_sh‹t
 
	mù_id
;

120 
u_sh‹t
 
	mù_off
;

121 
	#IP_RF
 0x8000

	)

122 
	#IP_DF
 0x4000

	)

123 
	#IP_MF
 0x2000

	)

124 
	#IP_OFFMASK
 0x1ff‡

	)

125 
u_öt8_t
 
	mù_âl
;

126 
u_öt8_t
 
	mù_p
;

127 
u_sh‹t
 
	mù_sum
;

128 
ö_addr
 
	mù_§c
, 
	mù_d°
;

134 
	sù_time°amp


136 
u_öt8_t
 
	mùt_code
;

137 
u_öt8_t
 
	mùt_Àn
;

138 
u_öt8_t
 
	mùt_±r
;

139 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


140 
	mùt_Êg
:4;

141 
	mùt_oÊw
:4;

143 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


144 
	mùt_oÊw
:4;

145 
	mùt_Êg
:4;

147 
u_öt32_t
 
	md©a
[9];

151 
	#IPVERSION
 4

	)

152 
	#IP_MAXPACKET
 65535

	)

160 
	#IPTOS_ECN_MASK
 0x03

	)

161 
	#IPTOS_ECN
(
x
Ë((xË& 
IPTOS_ECN_MASK
)

	)

162 
	#IPTOS_ECN_NOT_ECT
 0x00

	)

163 
	#IPTOS_ECN_ECT1
 0x01

	)

164 
	#IPTOS_ECN_ECT0
 0x02

	)

165 
	#IPTOS_ECN_CE
 0x03

	)

173 
	#IPTOS_DSCP_MASK
 0xfc

	)

174 
	#IPTOS_DSCP
(
x
Ë((xË& 
IPTOS_DSCP_MASK
)

	)

175 
	#IPTOS_DSCP_AF11
 0x28

	)

176 
	#IPTOS_DSCP_AF12
 0x30

	)

177 
	#IPTOS_DSCP_AF13
 0x38

	)

178 
	#IPTOS_DSCP_AF21
 0x48

	)

179 
	#IPTOS_DSCP_AF22
 0x50

	)

180 
	#IPTOS_DSCP_AF23
 0x58

	)

181 
	#IPTOS_DSCP_AF31
 0x68

	)

182 
	#IPTOS_DSCP_AF32
 0x70

	)

183 
	#IPTOS_DSCP_AF33
 0x78

	)

184 
	#IPTOS_DSCP_AF41
 0x88

	)

185 
	#IPTOS_DSCP_AF42
 0x90

	)

186 
	#IPTOS_DSCP_AF43
 0x98

	)

187 
	#IPTOS_DSCP_EF
 0xb8

	)

194 
	#IPTOS_CLASS_MASK
 0xe0

	)

195 
	#IPTOS_CLASS
(
˛ass
Ë((˛assË& 
IPTOS_CLASS_MASK
)

	)

196 
	#IPTOS_CLASS_CS0
 0x00

	)

197 
	#IPTOS_CLASS_CS1
 0x20

	)

198 
	#IPTOS_CLASS_CS2
 0x40

	)

199 
	#IPTOS_CLASS_CS3
 0x60

	)

200 
	#IPTOS_CLASS_CS4
 0x80

	)

201 
	#IPTOS_CLASS_CS5
 0xa0

	)

202 
	#IPTOS_CLASS_CS6
 0xc0

	)

203 
	#IPTOS_CLASS_CS7
 0xe0

	)

205 
	#IPTOS_CLASS_DEFAULT
 
IPTOS_CLASS_CS0


	)

211 
	#IPTOS_TOS_MASK
 0x1E

	)

212 
	#IPTOS_TOS
(
tos
Ë(—osË& 
IPTOS_TOS_MASK
)

	)

213 
	#IPTOS_LOWDELAY
 0x10

	)

214 
	#IPTOS_THROUGHPUT
 0x08

	)

215 
	#IPTOS_RELIABILITY
 0x04

	)

216 
	#IPTOS_LOWCOST
 0x02

	)

217 
	#IPTOS_MINCOST
 
IPTOS_LOWCOST


	)

222 
	#IPTOS_PREC_MASK
 
IPTOS_CLASS_MASK


	)

223 
	#IPTOS_PREC
(
tos
Ë
	`IPTOS_CLASS
—os)

	)

224 
	#IPTOS_PREC_NETCONTROL
 
IPTOS_CLASS_CS7


	)

225 
	#IPTOS_PREC_INTERNETCONTROL
 
IPTOS_CLASS_CS6


	)

226 
	#IPTOS_PREC_CRITIC_ECP
 
IPTOS_CLASS_CS5


	)

227 
	#IPTOS_PREC_FLASHOVERRIDE
 
IPTOS_CLASS_CS4


	)

228 
	#IPTOS_PREC_FLASH
 
IPTOS_CLASS_CS3


	)

229 
	#IPTOS_PREC_IMMEDIATE
 
IPTOS_CLASS_CS2


	)

230 
	#IPTOS_PREC_PRIORITY
 
IPTOS_CLASS_CS1


	)

231 
	#IPTOS_PREC_ROUTINE
 
IPTOS_CLASS_CS0


	)

236 
	#IPOPT_COPY
 0x80

	)

237 
	#IPOPT_CLASS_MASK
 0x60

	)

238 
	#IPOPT_NUMBER_MASK
 0x1f

	)

240 
	#IPOPT_COPIED
(
o
Ë((oË& 
IPOPT_COPY
)

	)

241 
	#IPOPT_CLASS
(
o
Ë((oË& 
IPOPT_CLASS_MASK
)

	)

242 
	#IPOPT_NUMBER
(
o
Ë((oË& 
IPOPT_NUMBER_MASK
)

	)

244 
	#IPOPT_CONTROL
 0x00

	)

245 
	#IPOPT_RESERVED1
 0x20

	)

246 
	#IPOPT_DEBMEAS
 0x40

	)

247 
	#IPOPT_MEASUREMENT
 
IPOPT_DEBMEAS


	)

248 
	#IPOPT_RESERVED2
 0x60

	)

250 
	#IPOPT_EOL
 0

	)

251 
	#IPOPT_END
 
IPOPT_EOL


	)

252 
	#IPOPT_NOP
 1

	)

253 
	#IPOPT_NOOP
 
IPOPT_NOP


	)

255 
	#IPOPT_RR
 7

	)

256 
	#IPOPT_TS
 68

	)

257 
	#IPOPT_TIMESTAMP
 
IPOPT_TS


	)

258 
	#IPOPT_SECURITY
 130

	)

259 
	#IPOPT_SEC
 
IPOPT_SECURITY


	)

260 
	#IPOPT_LSRR
 131

	)

261 
	#IPOPT_SATID
 136

	)

262 
	#IPOPT_SID
 
IPOPT_SATID


	)

263 
	#IPOPT_SSRR
 137

	)

264 
	#IPOPT_RA
 148

	)

269 
	#IPOPT_OPTVAL
 0

	)

270 
	#IPOPT_OLEN
 1

	)

271 
	#IPOPT_OFFSET
 2

	)

272 
	#IPOPT_MINOFF
 4

	)

274 
	#MAX_IPOPTLEN
 40

	)

277 
	#IPOPT_TS_TSONLY
 0

	)

278 
	#IPOPT_TS_TSANDADDR
 1

	)

279 
	#IPOPT_TS_PRESPEC
 3

	)

282 
	#IPOPT_SECUR_UNCLASS
 0x0000

	)

283 
	#IPOPT_SECUR_CONFID
 0xf135

	)

284 
	#IPOPT_SECUR_EFTO
 0x789a

	)

285 
	#IPOPT_SECUR_MMMM
 0xbc4d

	)

286 
	#IPOPT_SECUR_RESTR
 0xaf13

	)

287 
	#IPOPT_SECUR_SECRET
 0xd788

	)

288 
	#IPOPT_SECUR_TOPSECRET
 0x6bc5

	)

293 
	#MAXTTL
 255

	)

294 
	#IPDEFTTL
 64

	)

295 
	#IPFRAGTTL
 60

	)

296 
	#IPTTLDEC
 1

	)

298 
	#IP_MSS
 576

	)

300 
	g__END_DECLS


	@/usr/include/netipx/ipx.h

18 #i‚de‡
__NETIPX_IPX_H


19 
	#__NETIPX_IPX_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

24 
	~<bôs/sockaddr.h
>

26 
	g__BEGIN_DECLS


28 
	#SOL_IPX
 256

	)

30 
	#IPX_TYPE
 1

	)

31 
	#IPX_NODE_LEN
 6

	)

32 
	#IPX_MTU
 576

	)

34 
	ssockaddr_ùx


36 
ß_Ámûy_t
 
	msùx_Ámûy
;

37 
u_öt16_t
 
	msùx_p‹t
;

38 
u_öt32_t
 
	msùx_√tw‹k
;

39 
	msùx_node
[
IPX_NODE_LEN
];

40 
u_öt8_t
 
	msùx_ty≥
;

41 
	msùx_zîo
;

48 
	#sùx_•ecül
 
sùx_p‹t


	)

49 
	#sùx_a˘i⁄
 
sùx_zîo


	)

50 
	#IPX_DLTITF
 0

	)

51 
	#IPX_CRTITF
 1

	)

53 
	sùx_rouã_deföôi⁄


55 
	mùx_√tw‹k
;

56 
	mùx_rouãr_√tw‹k
;

57 
	mùx_rouãr_node
[
IPX_NODE_LEN
];

59 
	tùx_rouã_deföôi⁄
;

61 
	sùx_öãrÁ˚_deföôi⁄


63 
	mùx_√tw‹k
;

64 
	mùx_devi˚
[16];

65 
	mùx_dlök_ty≥
;

66 
	#IPX_FRAME_NONE
 0

	)

67 
	#IPX_FRAME_SNAP
 1

	)

68 
	#IPX_FRAME_8022
 2

	)

69 
	#IPX_FRAME_ETHERII
 3

	)

70 
	#IPX_FRAME_8023
 4

	)

71 
	#IPX_FRAME_TR_8022
 5

	)

72 
	mùx_•ecül
;

73 
	#IPX_SPECIAL_NONE
 0

	)

74 
	#IPX_PRIMARY
 1

	)

75 
	#IPX_INTERNAL
 2

	)

76 
	mùx_node
[
IPX_NODE_LEN
];

78 
	tùx_öãrÁ˚_deföôi⁄
;

80 
	sùx_c⁄fig_d©a


82 
	mùxcfg_auto_£À˘_¥im¨y
;

83 
	mùxcfg_auto_¸óã_öãrÁ˚s
;

85 
	tùx_c⁄fig_d©a
;

91 
	sùx_rouã_def


93 
	mùx_√tw‹k
;

94 
	mùx_rouãr_√tw‹k
;

95 
	#IPX_ROUTE_NO_ROUTER
 0

	)

96 
	mùx_rouãr_node
[
IPX_NODE_LEN
];

97 
	mùx_devi˚
[16];

98 
	mùx_Êags
;

99 
	#IPX_RT_SNAP
 8

	)

100 
	#IPX_RT_8022
 4

	)

101 
	#IPX_RT_BLUEBOOK
 2

	)

102 
	#IPX_RT_ROUTED
 1

	)

105 
	#SIOCAIPXITFCRT
 (
SIOCPROTOPRIVATE
)

	)

106 
	#SIOCAIPXPRISLT
 (
SIOCPROTOPRIVATE
 + 1)

	)

107 
	#SIOCIPXCFGDATA
 (
SIOCPROTOPRIVATE
 + 2)

	)

108 
	#SIOCIPXNCPCONN
 (
SIOCPROTOPRIVATE
 + 3)

	)

110 
	g__END_DECLS


	@/usr/include/paths.h

32 #i‚de‡
_PATHS_H_


33 
	#_PATHS_H_


	)

36 
	#_PATH_DEFPATH
 "/u§/bö:/bö"

	)

38 
	#_PATH_STDPATH
 \

39 "/u§/bö:/bö:/u§/sbö:/sbö"

	)

41 
	#_PATH_BSHELL
 "/bö/sh"

	)

42 
	#_PATH_CONSOLE
 "/dev/c⁄sﬁe"

	)

43 
	#_PATH_CSHELL
 "/bö/csh"

	)

44 
	#_PATH_DEVDB
 "/v¨/run/dev.db"

	)

45 
	#_PATH_DEVNULL
 "/dev/nuŒ"

	)

46 
	#_PATH_DRUM
 "/dev/drum"

	)

47 
	#_PATH_GSHADOW
 "/ëc/gshadow"

	)

48 
	#_PATH_KLOG
 "/¥oc/kmsg"

	)

49 
	#_PATH_KMEM
 "/dev/kmem"

	)

50 
	#_PATH_LASTLOG
 "/v¨/log/œ°log"

	)

51 
	#_PATH_MAILDIR
 "/v¨/maû"

	)

52 
	#_PATH_MAN
 "/u§/sh¨e/m™"

	)

53 
	#_PATH_MEM
 "/dev/mem"

	)

54 
	#_PATH_MNTTAB
 "/ëc/f°ab"

	)

55 
	#_PATH_MOUNTED
 "/ëc/mèb"

	)

56 
	#_PATH_NOLOGIN
 "/ëc/nﬁogö"

	)

57 
	#_PATH_PRESERVE
 "/v¨/lib"

	)

58 
	#_PATH_RWHODIR
 "/v¨/•oﬁ/rwho"

	)

59 
	#_PATH_SENDMAIL
 "/u§/sbö/£ndmaû"

	)

60 
	#_PATH_SHADOW
 "/ëc/shadow"

	)

61 
	#_PATH_SHELLS
 "/ëc/shñls"

	)

62 
	#_PATH_TTY
 "/dev/ây"

	)

63 
	#_PATH_UNIX
 "/boŸ/vmlöux"

	)

64 
	#_PATH_UTMP
 "/v¨/run/utmp"

	)

65 
	#_PATH_VI
 "/u§/bö/vi"

	)

66 
	#_PATH_WTMP
 "/v¨/log/wtmp"

	)

69 
	#_PATH_DEV
 "/dev/"

	)

70 
	#_PATH_TMP
 "/tmp/"

	)

71 
	#_PATH_VARDB
 "/v¨/lib/misc/"

	)

72 
	#_PATH_VARRUN
 "/v¨/run/"

	)

73 
	#_PATH_VARTMP
 "/v¨/tmp/"

	)

	@/usr/include/pwd.h

22 #i‚def 
_PWD_H


23 
	#_PWD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 
	#__√ed_size_t


	)

32 
	~<°ddef.h
>

34 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 #i‚de‡
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

42 #i‚de‡
__uid_t_deföed


43 
__uid_t
 
	tuid_t
;

44 
	#__uid_t_deföed


	)

49 
	s∑sswd


51 *
	mpw_«me
;

52 *
	mpw_∑sswd
;

53 
__uid_t
 
	mpw_uid
;

54 
__gid_t
 
	mpw_gid
;

55 *
	mpw_gecos
;

56 *
	mpw_dú
;

57 *
	mpw_shñl
;

61 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


62 
	#__√ed_FILE


	)

63 
	~<°dio.h
>

67 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


72 
£çwít
 ();

78 
ídpwít
 ();

84 
∑sswd
 *
gëpwít
 ();

87 #ifdef 
__USE_SVID


94 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

102 
puçwít
 (c⁄° 
∑sswd
 *
__ª°ri˘
 
__p
,

103 
FILE
 *
__ª°ri˘
 
__f
);

110 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

116 
∑sswd
 *
gëpw«m
 (c⁄° *
__«me
);

118 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


120 #ifde‡
__USE_MISC


123 
	#NSS_BUFLEN_PASSWD
 1024

	)

134 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


139 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

140 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

141 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

144 
gëpwuid_r
 (
__uid_t
 
__uid
,

145 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

146 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

147 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

149 
gëpw«m_r
 (c⁄° *
__ª°ri˘
 
__«me
,

150 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

151 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

152 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

155 #ifdef 
__USE_SVID


163 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

164 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

165 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

166 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

171 #ifde‡
__USE_GNU


180 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

183 
	g__END_DECLS


	@/usr/include/resolv.h

52 #i‚de‡
_RESOLV_H_


56 
	~<sys/ty≥s.h
>

57 
	~<√töë/ö.h
>

59 #i‚de‡
__√ed_ªs_°©e


60 
	#_RESOLV_H_


	)

62 
	~<sys/∑øm.h
>

63 
	~<sys/cdefs.h
>

64 
	~<°dio.h
>

65 
	~<¨∑/«me£r.h
>

68 #i‚de‡
__ªs_°©e_deföed


69 
	#__ªs_°©e_deföed


	)

71 íum { 
	mªs_gﬂhód
, 
	mªs_√xäs
, 
	mªs_modifõd
, 
	mªs_d⁄e
, 
	mªs_îr‹
 }

72 
	tªs_£ndhooka˘
;

74 
	$ªs_£ndhooka˘
 (*
	tªs_£nd_qhook
Ë(
	tsockaddr_ö
 * c⁄° *
	t__ns
,

75 c⁄° 
	tu_ch¨
 **
	t__quîy
,

76 *
	t__quîyÀn
,

77 
	tu_ch¨
 *
	t__™s
,

78 
	t__™ssiz
,

79 *
	t__ª•Àn
);

81 
	$ªs_£ndhooka˘
 (*
	tªs_£nd_rhook
Ë(c⁄° 
	tsockaddr_ö
 *
	t__ns
,

82 c⁄° 
	tu_ch¨
 *
	t__quîy
,

83 
	t__quîyÀn
,

84 
	tu_ch¨
 *
	t__™s
,

85 
	t__™ssiz
,

86 *
	t__ª•Àn
);

91 
	#MAXNS
 3

	)

92 
	#MAXDFLSRCH
 3

	)

93 
	#MAXDNSRCH
 6

	)

94 
	#LOCALDOMAINPARTS
 2

	)

96 
	#RES_TIMEOUT
 5

	)

97 
	#MAXRESOLVSORT
 10

	)

98 
	#RES_MAXNDOTS
 15

	)

99 
	#RES_MAXRETRANS
 30

	)

100 
	#RES_MAXRETRY
 5

	)

101 
	#RES_DFLRETRY
 2

	)

102 
	#RES_MAXTIME
 65535

	)

104 
	s__ªs_°©e
 {

105 
ªå™s
;

106 
ªåy
;

107 
u_l⁄g
 
›ti⁄s
;

108 
nscou¡
;

109 
sockaddr_ö


110 
nßddr_li°
[
MAXNS
];

111 
	#nßddr
 
nßddr_li°
[0]

	)

112 
u_sh‹t
 
id
;

114 *
dn§ch
[
MAXDNSRCH
+1];

115 
defd«me
[256];

116 
u_l⁄g
 
pfcode
;

117 
ndŸs
:4;

118 
ns‹t
:4;

119 
ùv6_u«vaû
:1;

120 
unu£d
:23;

122 
ö_addr
 
addr
;

123 
u_öt32_t
 
mask
;

124 } 
s‹t_li°
[
MAXRESOLVSORT
];

126 
ªs_£nd_qhook
 
qhook
;

127 
ªs_£nd_rhook
 
rhook
;

128 
ªs_h_î∫o
;

129 
_vcsock
;

130 
u_öt
 
_Êags
;

133 
∑d
[52];

135 
u_öt16_t
 
nscou¡
;

136 
u_öt16_t
 
nsm≠
[
MAXNS
];

137 
nssocks
[
MAXNS
];

138 
u_öt16_t
 
nscou¡6
;

139 
u_öt16_t
 
nsöô
;

140 
sockaddr_ö6
 *
nßddrs
[
MAXNS
];

141 #ifde‡
_LIBC


142 
öô°amp


143 
	`__©åibuã__
((
∑cked
));

145 
_öô°amp
[2];

147 } 
_ext
;

148 } 
_u
;

151 
__ªs_°©e
 *
	tªs_°©e
;

152 #unde‡
__√ed_ªs_°©e


155 #ifde‡
_RESOLV_H_


164 
	#__RES
 19991006

	)

172 #i‚de‡
_PATH_RESCONF


173 
	#_PATH_RESCONF
 "/ëc/ªsﬁv.c⁄f"

	)

176 
	sªs_sym
 {

177 
numbî
;

178 * 
«me
;

179 * 
hum™«me
;

185 
	#RES_F_VC
 0x00000001

	)

186 
	#RES_F_CONN
 0x00000002

	)

187 
	#RES_F_EDNS0ERR
 0x00000004

	)

190 
	#RES_EXHAUSTIVE
 0x00000001

	)

195 
	#RES_INIT
 0x00000001

	)

196 
	#RES_DEBUG
 0x00000002

	)

197 
	#RES_AAONLY
 0x00000004

	)

198 
	#RES_USEVC
 0x00000008

	)

199 
	#RES_PRIMARY
 0x00000010

	)

200 
	#RES_IGNTC
 0x00000020

	)

201 
	#RES_RECURSE
 0x00000040

	)

202 
	#RES_DEFNAMES
 0x00000080

	)

203 
	#RES_STAYOPEN
 0x00000100

	)

204 
	#RES_DNSRCH
 0x00000200

	)

205 
	#RES_INSECURE1
 0x00000400

	)

206 
	#RES_INSECURE2
 0x00000800

	)

207 
	#RES_NOALIASES
 0x00001000

	)

208 
	#RES_USE_INET6
 0x00002000

	)

209 
	#RES_ROTATE
 0x00004000

	)

210 
	#RES_NOCHECKNAME
 0x00008000

	)

211 
	#RES_KEEPTSIG
 0x00010000

	)

212 
	#RES_BLAST
 0x00020000

	)

213 
	#RES_USEBSTRING
 0x00040000

	)

215 
	#RES_NOIP6DOTINT
 0x00080000

	)

217 
	#RES_USE_EDNS0
 0x00100000

	)

218 
	#RES_SNGLKUP
 0x00200000

	)

219 
	#RES_SNGLKUPREOP
 0x00400000

	)

221 
	#RES_USE_DNSSEC
 0x00800000

	)

222 
	#RES_NOTLDQUERY
 0x01000000

	)

225 
	#RES_DEFAULT
 (
RES_RECURSE
|
RES_DEFNAMES
|
RES_DNSRCH
|
RES_NOIP6DOTINT
)

	)

230 
	#RES_PRF_STATS
 0x00000001

	)

231 
	#RES_PRF_UPDATE
 0x00000002

	)

232 
	#RES_PRF_CLASS
 0x00000004

	)

233 
	#RES_PRF_CMD
 0x00000008

	)

234 
	#RES_PRF_QUES
 0x00000010

	)

235 
	#RES_PRF_ANS
 0x00000020

	)

236 
	#RES_PRF_AUTH
 0x00000040

	)

237 
	#RES_PRF_ADD
 0x00000080

	)

238 
	#RES_PRF_HEAD1
 0x00000100

	)

239 
	#RES_PRF_HEAD2
 0x00000200

	)

240 
	#RES_PRF_TTLID
 0x00000400

	)

241 
	#RES_PRF_HEADX
 0x00000800

	)

242 
	#RES_PRF_QUERY
 0x00001000

	)

243 
	#RES_PRF_REPLY
 0x00002000

	)

244 
	#RES_PRF_INIT
 0x00004000

	)

248 
__BEGIN_DECLS


249 
__ªs_°©e
 *
	$__ªs_°©e
(Ë
	`__©åibuã__
 ((
__c⁄°__
));

250 
__END_DECLS


251 
	#_ªs
 (*
	`__ªs_°©e
())

	)

253 #i‚de‡
__BIND_NOSTATIC


254 
	#Â_nquîy
 
__Â_nquîy


	)

255 
	#Â_quîy
 
__Â_quîy


	)

256 
	#ho°Æüs
 
__ho°Æüs


	)

257 
	#p_quîy
 
__p_quîy


	)

258 
	#ªs_˛o£
 
__ªs_˛o£


	)

259 
	#ªs_öô
 
__ªs_öô


	)

260 
	#ªs_isour£rvî
 
__ªs_isour£rvî


	)

261 
	#ªs_mkquîy
 
__ªs_mkquîy


	)

262 
	#ªs_quîy
 
__ªs_quîy


	)

263 
	#ªs_quîydomaö
 
__ªs_quîydomaö


	)

264 
	#ªs_£¨ch
 
__ªs_£¨ch


	)

265 
	#ªs_£nd
 
__ªs_£nd


	)

267 
__BEGIN_DECLS


268 
	$Â_nquîy
 (c⁄° 
u_ch¨
 *, , 
FILE
 *Ë
__THROW
;

269 
	$Â_quîy
 (c⁄° 
u_ch¨
 *, 
FILE
 *Ë
__THROW
;

270 c⁄° * 
	$ho°Æüs
 (c⁄° *Ë
__THROW
;

271 
	$p_quîy
 (c⁄° 
u_ch¨
 *Ë
__THROW
;

272 
	$ªs_˛o£
 (Ë
__THROW
;

273 
	$ªs_öô
 (Ë
__THROW
;

274 
	$ªs_isour£rvî
 (c⁄° 
sockaddr_ö
 *Ë
__THROW
;

275 
	$ªs_mkquîy
 (, c⁄° *, , , c⁄° 
u_ch¨
 *,

276 , c⁄° 
u_ch¨
 *, u_ch¨ *, Ë
__THROW
;

277 
	$ªs_quîy
 (c⁄° *, , , 
u_ch¨
 *, Ë
__THROW
;

278 
	$ªs_quîydomaö
 (const *, const *, , ,

279 
u_ch¨
 *, Ë
__THROW
;

280 
	$ªs_£¨ch
 (c⁄° *, , , 
u_ch¨
 *, Ë
__THROW
;

281 
	$ªs_£nd
 (c⁄° 
u_ch¨
 *, , u_ch¨ *, Ë
__THROW
;

282 
__END_DECLS


285 
	#b64_¡›
 
__b64_¡›


	)

286 
	#b64_±⁄
 
__b64_±⁄


	)

287 
	#dn_comp
 
__dn_comp


	)

288 
	#dn_cou¡_œbñs
 
__dn_cou¡_œbñs


	)

289 
	#dn_ex∑nd
 
__dn_ex∑nd


	)

290 
	#dn_skù«me
 
__dn_skù«me


	)

291 
	#Â_ªs°©
 
__Â_ªs°©


	)

292 
	#loc_©⁄
 
__loc_©⁄


	)

293 
	#loc_¡ﬂ
 
__loc_¡ﬂ


	)

294 
	#p_cd«me
 
__p_cd«me


	)

295 
	#p_cd¬ame
 
__p_cd¬ame


	)

296 
	#p_˛ass
 
__p_˛ass


	)

297 
	#p_fq«me
 
__p_fq«me


	)

298 
	#p_fq¬ame
 
__p_fq¬ame


	)

299 
	#p_›ti⁄
 
__p_›ti⁄


	)

300 
	#p_£c°od©e
 
__p_£c°od©e


	)

301 
	#p_£˘i⁄
 
__p_£˘i⁄


	)

302 
	#p_time
 
__p_time


	)

303 
	#p_ty≥
 
__p_ty≥


	)

304 
	#p_rcode
 
__p_rcode


	)

305 
	#pué⁄g
 
__pué⁄g


	)

306 
	#putsh‹t
 
__putsh‹t


	)

307 
	#ªs_dnok
 
__ªs_dnok


	)

308 
	#ªs_hnok
 
__ªs_hnok


	)

309 
	#ªs_ho°Æüs
 
__ªs_ho°Æüs


	)

310 
	#ªs_maûok
 
__ªs_maûok


	)

311 
	#ªs_«meöquîy
 
__ªs_«meöquîy


	)

312 
	#ªs_n˛o£
 
__ªs_n˛o£


	)

313 
	#ªs_nöô
 
__ªs_nöô


	)

314 
	#ªs_nmkquîy
 
__ªs_nmkquîy


	)

315 
	#ªs_≈quîy
 
__ªs_≈quîy


	)

316 
	#ªs_nquîy
 
__ªs_nquîy


	)

317 
	#ªs_nquîydomaö
 
__ªs_nquîydomaö


	)

318 
	#ªs_n£¨ch
 
__ªs_n£¨ch


	)

319 
	#ªs_n£nd
 
__ªs_n£nd


	)

320 
	#ªs_nisour£rvî
 
__ªs_nisour£rvî


	)

321 
	#ªs_ownok
 
__ªs_ownok


	)

322 
	#ªs_quîõsm©ch
 
__ªs_quîõsm©ch


	)

323 
	#ªs_øndomid
 
__ªs_øndomid


	)

324 
	#sym_¡›
 
__sym_¡›


	)

325 
	#sym_¡os
 
__sym_¡os


	)

326 
	#sym_°⁄
 
__sym_°⁄


	)

327 
__BEGIN_DECLS


328 
	$ªs_hnok
 (c⁄° *Ë
__THROW
;

329 
	$ªs_ownok
 (c⁄° *Ë
__THROW
;

330 
	$ªs_maûok
 (c⁄° *Ë
__THROW
;

331 
	$ªs_dnok
 (c⁄° *Ë
__THROW
;

332 
	$sym_°⁄
 (c⁄° 
ªs_sym
 *, c⁄° *, *Ë
__THROW
;

333 c⁄° * 
	$sym_¡os
 (c⁄° 
ªs_sym
 *, , *Ë
__THROW
;

334 c⁄° * 
	$sym_¡›
 (c⁄° 
ªs_sym
 *, , *Ë
__THROW
;

335 
	$b64_¡›
 (
u_ch¨
 c⁄° *, 
size_t
, *, size_tË
__THROW
;

336 
	$b64_±⁄
 (c⁄° *, 
u_ch¨
 *, 
size_t
Ë
__THROW
;

337 
	$loc_©⁄
 (c⁄° *
__ascii
, 
u_ch¨
 *
__bö¨y
Ë
__THROW
;

338 c⁄° * 
	$loc_¡ﬂ
 (c⁄° 
u_ch¨
 *
__bö¨y
, *
__ascii
Ë
__THROW
;

339 
	$dn_skù«me
 (c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *Ë
__THROW
;

340 
	$pué⁄g
 (
u_öt32_t
, 
u_ch¨
 *Ë
__THROW
;

341 
	$putsh‹t
 (
u_öt16_t
, 
u_ch¨
 *Ë
__THROW
;

342 c⁄° * 
	$p_˛ass
 (Ë
__THROW
;

343 c⁄° * 
	$p_time
 (
u_öt32_t
Ë
__THROW
;

344 c⁄° * 
	$p_ty≥
 (Ë
__THROW
;

345 c⁄° * 
	$p_rcode
 (Ë
__THROW
;

346 c⁄° 
u_ch¨
 * 
	$p_cd¬ame
 (c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *, , 
FILE
 *)

347 
__THROW
;

348 c⁄° 
u_ch¨
 * 
	$p_cd«me
 (c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *, 
FILE
 *Ë
__THROW
;

349 c⁄° 
u_ch¨
 * 
	$p_fq¬ame
 (c⁄° 
u_ch¨
 *
__˝
, c⁄° u_ch¨ *
__msg
,

350 , *, Ë
__THROW
;

351 c⁄° 
u_ch¨
 * 
	$p_fq«me
 (c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *, 
FILE
 *Ë
__THROW
;

352 c⁄° * 
	$p_›ti⁄
 (
u_l⁄g
 
__›ti⁄
Ë
__THROW
;

353 * 
	$p_£c°od©e
 (
u_l⁄g
Ë
__THROW
;

354 
	$dn_cou¡_œbñs
 (c⁄° *Ë
__THROW
;

355 
	$dn_comp
 (c⁄° *, 
u_ch¨
 *, , u_char **, u_char **)

356 
__THROW
;

357 
	$dn_ex∑nd
 (c⁄° 
u_ch¨
 *, const u_char *, const u_char *,

358 *, Ë
__THROW
;

359 
u_öt
 
	$ªs_øndomid
 (Ë
__THROW
;

360 
	$ªs_«meöquîy
 (const *, , ,

361 c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *Ë
__THROW
;

362 
	$ªs_quîõsm©ch
 (c⁄° 
u_ch¨
 *, const u_char *,

363 c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *Ë
__THROW
;

364 c⁄° * 
	$p_£˘i⁄
 (
__£˘i⁄
, 
__›code
Ë
__THROW
;

366 
	$ªs_nöô
 (
ªs_°©e
Ë
__THROW
;

367 
	$ªs_nisour£rvî
 (c⁄° 
ªs_°©e
,

368 c⁄° 
sockaddr_ö
 *Ë
__THROW
;

369 
	$Â_ªs°©
 (c⁄° 
ªs_°©e
, 
FILE
 *Ë
__THROW
;

370 
	$ªs_≈quîy
 (c⁄° 
ªs_°©e
, c⁄° 
u_ch¨
 *, , 
FILE
 *)

371 
__THROW
;

372 c⁄° * 
	$ªs_ho°Æüs
 (c⁄° 
ªs_°©e
, c⁄° *, *, 
size_t
)

373 
__THROW
;

374 
	$ªs_nquîy
 (
ªs_°©e
, c⁄° *, , , 
u_ch¨
 *, )

375 
__THROW
;

376 
	$ªs_n£¨ch
 (
ªs_°©e
, c⁄° *, , , 
u_ch¨
 *, )

377 
__THROW
;

378 
	$ªs_nquîydomaö
 (
ªs_°©e
, const *, const *, ,

379 , 
u_ch¨
 *, Ë
__THROW
;

380 
	$ªs_nmkquîy
 (
ªs_°©e
, , const *, , ,

381 c⁄° 
u_ch¨
 *, , const u_char *, u_char *,

382 Ë
__THROW
;

383 
	$ªs_n£nd
 (
ªs_°©e
, c⁄° 
u_ch¨
 *, , u_char *, )

384 
__THROW
;

385 
	$ªs_n˛o£
 (
ªs_°©e
Ë
__THROW
;

386 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

167 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

169 #ifde‡
__USE_XOPEN


170 #ifde‡
__GNUC__


171 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

174 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

179 #ifde‡
__USE_BSD


186 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

189 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

192 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

195 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 #ifde‡
__USE_MISC


200 
	#NSIG
 
_NSIG


	)

203 #ifde‡
__USE_GNU


204 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

208 #ifde‡
__USE_BSD


209 
__sigh™dÀr_t
 
	tsig_t
;

212 #ifde‡
__USE_POSIX


215 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

224 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

228 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__USE_GNU


232 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

236 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

239 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

240 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

245 
	~<bôs/siga˘i⁄.h
>

248 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

249 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

256 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

259 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

260 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

263 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 #ifde‡
__USE_POSIX199309


278 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

279 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

286 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

288 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

289 
	`__n⁄nuŒ
 ((1));

293 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

294 
__THROW
;

299 #ifde‡
__USE_BSD


303 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

304 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

307 
	ssigvec


309 
__sigh™dÀr_t
 
sv_h™dÀr
;

310 
sv_mask
;

312 
sv_Êags
;

313 
	#sv_⁄°ack
 
sv_Êags


	)

317 
	#SV_ONSTACK
 (1 << 0)

	)

318 
	#SV_INTERRUPT
 (1 << 1)

	)

319 
	#SV_RESETHAND
 (1 << 2)

	)

327 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

328 
sigvec
 *
__ovec
Ë
__THROW
;

332 
	~<bôs/sigc⁄ãxt.h
>

335 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

340 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


341 
	#__√ed_size_t


	)

342 
	~<°ddef.h
>

347 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

349 
	~<bôs/sig°ack.h
>

350 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


352 
	~<sys/uc⁄ãxt.h
>

358 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

359 
__THROW
 
__©åibuã_dïªˇãd__
;

363 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

364 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

368 #ifde‡
__USE_XOPEN_EXTENDED


372 
	$sighﬁd
 (
__sig
Ë
__THROW
;

375 
	$sigªl£
 (
__sig
Ë
__THROW
;

378 
	$sigign‹e
 (
__sig
Ë
__THROW
;

381 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

384 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


387 
	~<bôs/±hªadty≥s.h
>

388 
	~<bôs/sigthªad.h
>

395 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

397 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

401 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

24 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


26 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

36 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

39 
	g__BEGIN_DECLS


41 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


43 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

44 
__THROW
 
__©åibuã_puª__
;

47 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

50 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

53 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


56 *
	`ödex
 (*
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

59 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

61 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


62 
__exã∫_Æways_ölöe
 *

63 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


65  
	`__buûtö_ödex
 (
__s
, 
__c
);

68 
__exã∫_Æways_ölöe
 const *

69 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


71  
	`__buûtö_ödex
 (
__s
, 
__c
);

74 
	}
}

76 *
	$ödex
 (c⁄° *
__s
, 
__c
)

77 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


84 *
	`rödex
 (*
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

87 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


90 
__exã∫_Æways_ölöe
 *

91 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


93  
	`__buûtö_rödex
 (
__s
, 
__c
);

96 
__exã∫_Æways_ölöe
 const *

97 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


99  
	`__buûtö_rödex
 (
__s
, 
__c
);

102 
	}
}

104 *
	$rödex
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


112 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
;

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
;

123 #ifdef 
__USE_XOPEN2K8


127 
	~<xloˇÀ.h
>

131 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

132 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

134 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

135 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

136 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

139 
__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/termios.h

22 #i‚def 
_TERMIOS_H


23 
	#_TERMIOS_H
 1

	)

25 
	~<„©uªs.h
>

26 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


28 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__pid_t_deföed


30 
__pid_t
 
	tpid_t
;

31 
	#__pid_t_deföed


	)

35 
	g__BEGIN_DECLS


39 
	~<bôs/ãrmios.h
>

41 #ifde‡
__USE_BSD


44 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

48 
•ìd_t
 
	$cfgëo•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

51 
•ìd_t
 
	$cfgëi•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

54 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

57 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

59 #ifdef 
__USE_BSD


61 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

66 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

70 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

71 c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

74 #ifdef 
__USE_BSD


76 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

80 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

86 
	`tcdøö
 (
__fd
);

90 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

94 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

97 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


99 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

103 #ifde‡
__USE_BSD


104 
	~<sys/âydeÁu…s.h
>

107 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/arpa/nameser_compat.h

34 #i‚de‡
_ARPA_NAMESER_COMPAT_


35 
	#_ARPA_NAMESER_COMPAT_


	)

37 
	#__BIND
 19950621

	)

39 
	~<ídün.h
>

49 
	mid
 :16;

50 #i‡
BYTE_ORDER
 =
BIG_ENDIAN


52 
	mqr
: 1;

53 
	m›code
: 4;

54 
	mØ
: 1;

55 
	mtc
: 1;

56 
	mrd
: 1;

58 
	mø
: 1;

59 
	munu£d
 :1;

60 
	mad
: 1;

61 
	mcd
: 1;

62 
	mrcode
 :4;

64 #i‡
BYTE_ORDER
 =
LITTLE_ENDIAN
 || BYTE_ORDER =
PDP_ENDIAN


66 
	mrd
 :1;

67 
	mtc
 :1;

68 
	mØ
 :1;

69 
	m›code
 :4;

70 
	mqr
 :1;

72 
	mrcode
 :4;

73 
	mcd
: 1;

74 
	mad
: 1;

75 
	munu£d
 :1;

76 
	mø
 :1;

79 
	mqdcou¡
 :16;

80 
	m™cou¡
 :16;

81 
	mnscou¡
 :16;

82 
	m¨cou¡
 :16;

83 } 
	tHEADER
;

85 
	#PACKETSZ
 
NS_PACKETSZ


	)

86 
	#MAXDNAME
 
NS_MAXDNAME


	)

87 
	#MAXCDNAME
 
NS_MAXCDNAME


	)

88 
	#MAXLABEL
 
NS_MAXLABEL


	)

89 
	#HFIXEDSZ
 
NS_HFIXEDSZ


	)

90 
	#QFIXEDSZ
 
NS_QFIXEDSZ


	)

91 
	#RRFIXEDSZ
 
NS_RRFIXEDSZ


	)

92 
	#INT32SZ
 
NS_INT32SZ


	)

93 
	#INT16SZ
 
NS_INT16SZ


	)

94 
	#INT8SZ
 
NS_INT8SZ


	)

95 
	#INADDRSZ
 
NS_INADDRSZ


	)

96 
	#IN6ADDRSZ
 
NS_IN6ADDRSZ


	)

97 
	#INDIR_MASK
 
NS_CMPRSFLGS


	)

98 
	#NAMESERVER_PORT
 
NS_DEFAULTPORT


	)

100 
	#S_ZONE
 
ns_s_zn


	)

101 
	#S_PREREQ
 
ns_s_¥


	)

102 
	#S_UPDATE
 
ns_s_ud


	)

103 
	#S_ADDT
 
ns_s_¨


	)

105 
	#QUERY
 
ns_o_quîy


	)

106 
	#IQUERY
 
ns_o_iquîy


	)

107 
	#STATUS
 
ns_o_°©us


	)

108 
	#NS_NOTIFY_OP
 
ns_o_nŸify


	)

109 
	#NS_UPDATE_OP
 
ns_o_upd©e


	)

111 
	#NOERROR
 
ns_r_n€º‹


	)

112 
	#FORMERR
 
ns_r_f‹mîr


	)

113 
	#SERVFAIL
 
ns_r_£rvÁû


	)

114 
	#NXDOMAIN
 
ns_r_nxdomaö


	)

115 
	#NOTIMP
 
ns_r_nŸim∂


	)

116 
	#REFUSED
 
ns_r_ªfu£d


	)

117 
	#YXDOMAIN
 
ns_r_yxdomaö


	)

118 
	#YXRRSET
 
ns_r_yxº£t


	)

119 
	#NXRRSET
 
ns_r_nxº£t


	)

120 
	#NOTAUTH
 
ns_r_nŸauth


	)

121 
	#NOTZONE
 
ns_r_nŸz⁄e


	)

127 
	#DELETE
 
ns_u›_dñëe


	)

128 
	#ADD
 
ns_u›_add


	)

130 
	#T_A
 
ns_t_a


	)

131 
	#T_NS
 
ns_t_ns


	)

132 
	#T_MD
 
ns_t_md


	)

133 
	#T_MF
 
ns_t_mf


	)

134 
	#T_CNAME
 
ns_t_˙ame


	)

135 
	#T_SOA
 
ns_t_sﬂ


	)

136 
	#T_MB
 
ns_t_mb


	)

137 
	#T_MG
 
ns_t_mg


	)

138 
	#T_MR
 
ns_t_mr


	)

139 
	#T_NULL
 
ns_t_nuŒ


	)

140 
	#T_WKS
 
ns_t_wks


	)

141 
	#T_PTR
 
ns_t_±r


	)

142 
	#T_HINFO
 
ns_t_höfo


	)

143 
	#T_MINFO
 
ns_t_möfo


	)

144 
	#T_MX
 
ns_t_mx


	)

145 
	#T_TXT
 
ns_t_txt


	)

146 
	#T_RP
 
ns_t_Ω


	)

147 
	#T_AFSDB
 
ns_t_afsdb


	)

148 
	#T_X25
 
ns_t_x25


	)

149 
	#T_ISDN
 
ns_t_isdn


	)

150 
	#T_RT
 
ns_t_π


	)

151 
	#T_NSAP
 
ns_t_nßp


	)

152 
	#T_NSAP_PTR
 
ns_t_nßp_±r


	)

153 
	#T_SIG
 
ns_t_sig


	)

154 
	#T_KEY
 
ns_t_key


	)

155 
	#T_PX
 
ns_t_px


	)

156 
	#T_GPOS
 
ns_t_gpos


	)

157 
	#T_AAAA
 
ns_t_ØØ


	)

158 
	#T_LOC
 
ns_t_loc


	)

159 
	#T_NXT
 
ns_t_nxt


	)

160 
	#T_EID
 
ns_t_eid


	)

161 
	#T_NIMLOC
 
ns_t_nimloc


	)

162 
	#T_SRV
 
ns_t_§v


	)

163 
	#T_ATMA
 
ns_t_©ma


	)

164 
	#T_NAPTR
 
ns_t_«±r


	)

165 
	#T_A6
 
ns_t_a6


	)

166 
	#T_DNAME
 
ns_t_d«me


	)

167 
	#T_TSIG
 
ns_t_tsig


	)

168 
	#T_IXFR
 
ns_t_ix‰


	)

169 
	#T_AXFR
 
ns_t_ax‰


	)

170 
	#T_MAILB
 
ns_t_maûb


	)

171 
	#T_MAILA
 
ns_t_maûa


	)

172 
	#T_ANY
 
ns_t_™y


	)

174 
	#C_IN
 
ns_c_ö


	)

175 
	#C_CHAOS
 
ns_c_chaos


	)

176 
	#C_HS
 
ns_c_hs


	)

178 
	#C_NONE
 
ns_c_n⁄e


	)

179 
	#C_ANY
 
ns_c_™y


	)

181 
	#GETSHORT
 
NS_GET16


	)

182 
	#GETLONG
 
NS_GET32


	)

183 
	#PUTSHORT
 
NS_PUT16


	)

184 
	#PUTLONG
 
NS_PUT32


	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/linux/hdlc/ioctl.h

1 #i‚de‡
__HDLC_IOCTL_H__


2 
	#__HDLC_IOCTL_H__


	)

5 
	#GENERIC_HDLC_VERSION
 4

	)

7 
	#CLOCK_DEFAULT
 0

	)

8 
	#CLOCK_EXT
 1

	)

9 
	#CLOCK_INT
 2

	)

10 
	#CLOCK_TXINT
 3

	)

11 
	#CLOCK_TXFROMRX
 4

	)

14 
	#ENCODING_DEFAULT
 0

	)

15 
	#ENCODING_NRZ
 1

	)

16 
	#ENCODING_NRZI
 2

	)

17 
	#ENCODING_FM_MARK
 3

	)

18 
	#ENCODING_FM_SPACE
 4

	)

19 
	#ENCODING_MANCHESTER
 5

	)

22 
	#PARITY_DEFAULT
 0

	)

23 
	#PARITY_NONE
 1

	)

24 
	#PARITY_CRC16_PR0
 2

	)

25 
	#PARITY_CRC16_PR1
 3

	)

26 
	#PARITY_CRC16_PR0_CCITT
 4

	)

27 
	#PARITY_CRC16_PR1_CCITT
 5

	)

28 
	#PARITY_CRC32_PR0_CCITT
 6

	)

29 
	#PARITY_CRC32_PR1_CCITT
 7

	)

31 
	#LMI_DEFAULT
 0

	)

32 
	#LMI_NONE
 1

	)

33 
	#LMI_ANSI
 2

	)

34 
	#LMI_CCITT
 3

	)

35 
	#LMI_CISCO
 4

	)

37 #i‚de‡
__ASSEMBLY__


40 
	m˛ock_øã
;

41 
	m˛ock_ty≥
;

42 
	mlo›back
;

43 } 
	tsync_£rül_£âögs
;

46 
	m˛ock_øã
;

47 
	m˛ock_ty≥
;

48 
	mlo›back
;

49 
	m¶Ÿ_m≠
;

50 } 
	tã1_£âögs
;

53 
	mícodög
;

54 
	m∑rôy
;

55 } 
	tøw_hdlc_¥Ÿo
;

58 
	mt391
;

59 
	mt392
;

60 
	mn391
;

61 
	mn392
;

62 
	mn393
;

63 
	mlmi
;

64 
	md˚
;

65 } 
	t‰_¥Ÿo
;

68 
	mdlci
;

69 } 
	t‰_¥Ÿo_pvc
;

72 
	mdlci
;

73 
	mma°î
[
IFNAMSIZ
];

74 }
	t‰_¥Ÿo_pvc_öfo
;

77 
	möãrvÆ
;

78 
	mtimeout
;

79 } 
	tcisco_¥Ÿo
;

	@/usr/include/linux/netdevice.h

25 #i‚de‡
_LINUX_NETDEVICE_H


26 
	#_LINUX_NETDEVICE_H


	)

28 
	~<löux/if.h
>

29 
	~<löux/if_ëhî.h
>

30 
	~<löux/if_∑ckë.h
>

31 
	~<löux/if_lök.h
>

34 
	#MAX_ADDR_LEN
 32

	)

37 
	#INIT_NETDEV_GROUP
 0

	)

43 
	mIF_PORT_UNKNOWN
 = 0,

44 
	mIF_PORT_10BASE2
,

45 
	mIF_PORT_10BASET
,

46 
	mIF_PORT_AUI
,

47 
	mIF_PORT_100BASET
,

48 
	mIF_PORT_100BASETX
,

49 
	mIF_PORT_100BASEFX


	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__FD_SETSIZE


22 
	#__FD_SETSIZE
 1024

	)

25 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

26 } 
	t__kî√l_fd_£t
;

29 (*
	t__kî√l_sigh™dÀr_t
)();

32 
	t__kî√l_key_t
;

33 
	t__kî√l_mqd_t
;

35 
	~<asm/posix_ty≥s.h
>

	@/usr/include/linux/socket.h

1 #i‚de‡
_LINUX_SOCKET_H


2 
	#_LINUX_SOCKET_H


	)

7 
	#_K_SS_MAXSIZE
 128

	)

8 
	#_K_SS_ALIGNSIZE
 (
	`__Æignof__
 (
sockaddr
 *))

	)

11 
	t__kî√l_ß_Ámûy_t
;

13 
	s__kî√l_sockaddr_°‹age
 {

14 
__kî√l_ß_Ámûy_t
 
	mss_Ámûy
;

16 
	m__d©a
[
_K_SS_MAXSIZE
 - ()];

19 } 
__©åibuã__
 ((
Æig√d
(
_K_SS_ALIGNSIZE
)));

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/linux/if_link.h

1 #i‚de‡
_LINUX_IF_LINK_H


2 
	#_LINUX_IF_LINK_H


	)

4 
	~<löux/ty≥s.h
>

5 
	~<löux/√éök.h
>

8 
	sπ∆_lök_°©s
 {

9 
__u32
 
	mrx_∑ckës
;

10 
__u32
 
	mtx_∑ckës
;

11 
__u32
 
	mrx_byãs
;

12 
__u32
 
	mtx_byãs
;

13 
__u32
 
	mrx_îr‹s
;

14 
__u32
 
	mtx_îr‹s
;

15 
__u32
 
	mrx_dr›≥d
;

16 
__u32
 
	mtx_dr›≥d
;

17 
__u32
 
	mmu…iˇ°
;

18 
__u32
 
	mcﬁlisi⁄s
;

21 
__u32
 
	mrx_Àngth_îr‹s
;

22 
__u32
 
	mrx_ovî_îr‹s
;

23 
__u32
 
	mrx_¸c_îr‹s
;

24 
__u32
 
	mrx_‰ame_îr‹s
;

25 
__u32
 
	mrx_fifo_îr‹s
;

26 
__u32
 
	mrx_mis£d_îr‹s
;

29 
__u32
 
	mtx_ab‹ãd_îr‹s
;

30 
__u32
 
	mtx_ˇºõr_îr‹s
;

31 
__u32
 
	mtx_fifo_îr‹s
;

32 
__u32
 
	mtx_hóπbót_îr‹s
;

33 
__u32
 
	mtx_wödow_îr‹s
;

36 
__u32
 
	mrx_com¥es£d
;

37 
__u32
 
	mtx_com¥es£d
;

41 
	sπ∆_lök_°©s64
 {

42 
__u64
 
	mrx_∑ckës
;

43 
__u64
 
	mtx_∑ckës
;

44 
__u64
 
	mrx_byãs
;

45 
__u64
 
	mtx_byãs
;

46 
__u64
 
	mrx_îr‹s
;

47 
__u64
 
	mtx_îr‹s
;

48 
__u64
 
	mrx_dr›≥d
;

49 
__u64
 
	mtx_dr›≥d
;

50 
__u64
 
	mmu…iˇ°
;

51 
__u64
 
	mcﬁlisi⁄s
;

54 
__u64
 
	mrx_Àngth_îr‹s
;

55 
__u64
 
	mrx_ovî_îr‹s
;

56 
__u64
 
	mrx_¸c_îr‹s
;

57 
__u64
 
	mrx_‰ame_îr‹s
;

58 
__u64
 
	mrx_fifo_îr‹s
;

59 
__u64
 
	mrx_mis£d_îr‹s
;

62 
__u64
 
	mtx_ab‹ãd_îr‹s
;

63 
__u64
 
	mtx_ˇºõr_îr‹s
;

64 
__u64
 
	mtx_fifo_îr‹s
;

65 
__u64
 
	mtx_hóπbót_îr‹s
;

66 
__u64
 
	mtx_wödow_îr‹s
;

69 
__u64
 
	mrx_com¥es£d
;

70 
__u64
 
	mtx_com¥es£d
;

74 
	sπ∆_lök_ifm≠
 {

75 
__u64
 
	mmem_°¨t
;

76 
__u64
 
	mmem_íd
;

77 
__u64
 
	mba£_addr
;

78 
__u16
 
	múq
;

79 
__u8
 
	mdma
;

80 
__u8
 
	mp‹t
;

102 
	mIFLA_UNSPEC
,

103 
	mIFLA_ADDRESS
,

104 
	mIFLA_BROADCAST
,

105 
	mIFLA_IFNAME
,

106 
	mIFLA_MTU
,

107 
	mIFLA_LINK
,

108 
	mIFLA_QDISC
,

109 
	mIFLA_STATS
,

110 
	mIFLA_COST
,

111 
	#IFLA_COST
 
IFLA_COST


	)

112 
	mIFLA_PRIORITY
,

113 
	#IFLA_PRIORITY
 
IFLA_PRIORITY


	)

114 
	mIFLA_MASTER
,

115 
	#IFLA_MASTER
 
IFLA_MASTER


	)

116 
	mIFLA_WIRELESS
,

117 
	#IFLA_WIRELESS
 
IFLA_WIRELESS


	)

118 
	mIFLA_PROTINFO
,

119 
	#IFLA_PROTINFO
 
IFLA_PROTINFO


	)

120 
	mIFLA_TXQLEN
,

121 
	#IFLA_TXQLEN
 
IFLA_TXQLEN


	)

122 
	mIFLA_MAP
,

123 
	#IFLA_MAP
 
IFLA_MAP


	)

124 
	mIFLA_WEIGHT
,

125 
	#IFLA_WEIGHT
 
IFLA_WEIGHT


	)

126 
	mIFLA_OPERSTATE
,

127 
	mIFLA_LINKMODE
,

128 
	mIFLA_LINKINFO
,

129 
	#IFLA_LINKINFO
 
IFLA_LINKINFO


	)

130 
	mIFLA_NET_NS_PID
,

131 
	mIFLA_IFALIAS
,

132 
	mIFLA_NUM_VF
,

133 
	mIFLA_VFINFO_LIST
,

134 
	mIFLA_STATS64
,

135 
	mIFLA_VF_PORTS
,

136 
	mIFLA_PORT_SELF
,

137 
	mIFLA_AF_SPEC
,

138 
	mIFLA_GROUP
,

139 
	mIFLA_NET_NS_FD
,

140 
	mIFLA_EXT_MASK
,

141 
	mIFLA_PROMISCUITY
,

142 
	#IFLA_PROMISCUITY
 
IFLA_PROMISCUITY


	)

143 
	mIFLA_NUM_TX_QUEUES
,

144 
	mIFLA_NUM_RX_QUEUES
,

145 
	mIFLA_CARRIER
,

146 
	mIFLA_PHYS_PORT_ID
,

147 
	m__IFLA_MAX


151 
	#IFLA_MAX
 (
__IFLA_MAX
 - 1)

	)

154 
	#IFLA_RTA
(
r
Ë((
π©å
*)(((*)‘)Ë+ 
	`NLMSG_ALIGN
((
iföfomsg
))))

	)

155 
	#IFLA_PAYLOAD
(
n
Ë
	`NLMSG_PAYLOAD
“,(
iföfomsg
))

	)

158 
	mIFLA_INET_UNSPEC
,

159 
	mIFLA_INET_CONF
,

160 
	m__IFLA_INET_MAX
,

163 
	#IFLA_INET_MAX
 (
__IFLA_INET_MAX
 - 1)

	)

196 
	mIFLA_INET6_UNSPEC
,

197 
	mIFLA_INET6_FLAGS
,

198 
	mIFLA_INET6_CONF
,

199 
	mIFLA_INET6_STATS
,

200 
	mIFLA_INET6_MCAST
,

201 
	mIFLA_INET6_CACHEINFO
,

202 
	mIFLA_INET6_ICMP6STATS
,

203 
	mIFLA_INET6_TOKEN
,

204 
	m__IFLA_INET6_MAX


207 
	#IFLA_INET6_MAX
 (
__IFLA_INET6_MAX
 - 1)

	)

210 
	mBRIDGE_MODE_UNSPEC
,

211 
	mBRIDGE_MODE_HAIRPIN
,

215 
	mIFLA_BRPORT_UNSPEC
,

216 
	mIFLA_BRPORT_STATE
,

217 
	mIFLA_BRPORT_PRIORITY
,

218 
	mIFLA_BRPORT_COST
,

219 
	mIFLA_BRPORT_MODE
,

220 
	mIFLA_BRPORT_GUARD
,

221 
	mIFLA_BRPORT_PROTECT
,

222 
	mIFLA_BRPORT_FAST_LEAVE
,

223 
	mIFLA_BRPORT_LEARNING
,

224 
	mIFLA_BRPORT_UNICAST_FLOOD
,

225 
	m__IFLA_BRPORT_MAX


227 
	#IFLA_BRPORT_MAX
 (
__IFLA_BRPORT_MAX
 - 1)

	)

229 
	siÊa_ˇcheöfo
 {

230 
__u32
 
	mmax_ªasm_Àn
;

231 
__u32
 
	mt°amp
;

232 
__u32
 
	mªachabÀ_time
;

233 
__u32
 
	mªå™s_time
;

237 
	mIFLA_INFO_UNSPEC
,

238 
	mIFLA_INFO_KIND
,

239 
	mIFLA_INFO_DATA
,

240 
	mIFLA_INFO_XSTATS
,

241 
	m__IFLA_INFO_MAX
,

244 
	#IFLA_INFO_MAX
 (
__IFLA_INFO_MAX
 - 1)

	)

249 
	mIFLA_VLAN_UNSPEC
,

250 
	mIFLA_VLAN_ID
,

251 
	mIFLA_VLAN_FLAGS
,

252 
	mIFLA_VLAN_EGRESS_QOS
,

253 
	mIFLA_VLAN_INGRESS_QOS
,

254 
	mIFLA_VLAN_PROTOCOL
,

255 
	m__IFLA_VLAN_MAX
,

258 
	#IFLA_VLAN_MAX
 (
__IFLA_VLAN_MAX
 - 1)

	)

260 
	siÊa_vœn_Êags
 {

261 
__u32
 
	mÊags
;

262 
__u32
 
	mmask
;

266 
	mIFLA_VLAN_QOS_UNSPEC
,

267 
	mIFLA_VLAN_QOS_MAPPING
,

268 
	m__IFLA_VLAN_QOS_MAX


271 
	#IFLA_VLAN_QOS_MAX
 (
__IFLA_VLAN_QOS_MAX
 - 1)

	)

273 
	siÊa_vœn_qos_m≠pög
 {

274 
__u32
 
	m‰om
;

275 
__u32
 
	mto
;

280 
	mIFLA_MACVLAN_UNSPEC
,

281 
	mIFLA_MACVLAN_MODE
,

282 
	mIFLA_MACVLAN_FLAGS
,

283 
	m__IFLA_MACVLAN_MAX
,

286 
	#IFLA_MACVLAN_MAX
 (
__IFLA_MACVLAN_MAX
 - 1)

	)

288 
	emacvœn_mode
 {

289 
	mMACVLAN_MODE_PRIVATE
 = 1,

290 
	mMACVLAN_MODE_VEPA
 = 2,

291 
	mMACVLAN_MODE_BRIDGE
 = 4,

292 
	mMACVLAN_MODE_PASSTHRU
 = 8,

295 
	#MACVLAN_FLAG_NOPROMISC
 1

	)

299 
	mIFLA_VXLAN_UNSPEC
,

300 
	mIFLA_VXLAN_ID
,

301 
	mIFLA_VXLAN_GROUP
,

302 
	mIFLA_VXLAN_LINK
,

303 
	mIFLA_VXLAN_LOCAL
,

304 
	mIFLA_VXLAN_TTL
,

305 
	mIFLA_VXLAN_TOS
,

306 
	mIFLA_VXLAN_LEARNING
,

307 
	mIFLA_VXLAN_AGEING
,

308 
	mIFLA_VXLAN_LIMIT
,

309 
	mIFLA_VXLAN_PORT_RANGE
,

310 
	mIFLA_VXLAN_PROXY
,

311 
	mIFLA_VXLAN_RSC
,

312 
	mIFLA_VXLAN_L2MISS
,

313 
	mIFLA_VXLAN_L3MISS
,

314 
	mIFLA_VXLAN_PORT
,

315 
	mIFLA_VXLAN_GROUP6
,

316 
	mIFLA_VXLAN_LOCAL6
,

317 
	m__IFLA_VXLAN_MAX


319 
	#IFLA_VXLAN_MAX
 (
__IFLA_VXLAN_MAX
 - 1)

	)

321 
	siÊa_vxœn_p‹t_ønge
 {

322 
__be16
 
	mlow
;

323 
__be16
 
	mhigh
;

329 
	mIFLA_BOND_UNSPEC
,

330 
	mIFLA_BOND_MODE
,

331 
	mIFLA_BOND_ACTIVE_SLAVE
,

332 
	m__IFLA_BOND_MAX
,

335 
	#IFLA_BOND_MAX
 (
__IFLA_BOND_MAX
 - 1)

	)

340 
	mIFLA_VF_INFO_UNSPEC
,

341 
	mIFLA_VF_INFO
,

342 
	m__IFLA_VF_INFO_MAX
,

345 
	#IFLA_VF_INFO_MAX
 (
__IFLA_VF_INFO_MAX
 - 1)

	)

348 
	mIFLA_VF_UNSPEC
,

349 
	mIFLA_VF_MAC
,

350 
	mIFLA_VF_VLAN
,

351 
	mIFLA_VF_TX_RATE
,

352 
	mIFLA_VF_SPOOFCHK
,

353 
	mIFLA_VF_LINK_STATE
,

354 
	m__IFLA_VF_MAX
,

357 
	#IFLA_VF_MAX
 (
__IFLA_VF_MAX
 - 1)

	)

359 
	siÊa_vf_mac
 {

360 
__u32
 
	mvf
;

361 
__u8
 
	mmac
[32];

364 
	siÊa_vf_vœn
 {

365 
__u32
 
	mvf
;

366 
__u32
 
	mvœn
;

367 
__u32
 
	mqos
;

370 
	siÊa_vf_tx_øã
 {

371 
__u32
 
	mvf
;

372 
__u32
 
	møã
;

375 
	siÊa_vf_•oofchk
 {

376 
__u32
 
	mvf
;

377 
__u32
 
	m£âög
;

381 
	mIFLA_VF_LINK_STATE_AUTO
,

382 
	mIFLA_VF_LINK_STATE_ENABLE
,

383 
	mIFLA_VF_LINK_STATE_DISABLE
,

384 
	m__IFLA_VF_LINK_STATE_MAX
,

387 
	siÊa_vf_lök_°©e
 {

388 
__u32
 
	mvf
;

389 
__u32
 
	mlök_°©e
;

408 
	mIFLA_VF_PORT_UNSPEC
,

409 
	mIFLA_VF_PORT
,

410 
	m__IFLA_VF_PORT_MAX
,

413 
	#IFLA_VF_PORT_MAX
 (
__IFLA_VF_PORT_MAX
 - 1)

	)

416 
	mIFLA_PORT_UNSPEC
,

417 
	mIFLA_PORT_VF
,

418 
	mIFLA_PORT_PROFILE
,

419 
	mIFLA_PORT_VSI_TYPE
,

420 
	mIFLA_PORT_INSTANCE_UUID
,

421 
	mIFLA_PORT_HOST_UUID
,

422 
	mIFLA_PORT_REQUEST
,

423 
	mIFLA_PORT_RESPONSE
,

424 
	m__IFLA_PORT_MAX
,

427 
	#IFLA_PORT_MAX
 (
__IFLA_PORT_MAX
 - 1)

	)

429 
	#PORT_PROFILE_MAX
 40

	)

430 
	#PORT_UUID_MAX
 16

	)

431 
	#PORT_SELF_VF
 -1

	)

434 
	mPORT_REQUEST_PREASSOCIATE
 = 0,

435 
	mPORT_REQUEST_PREASSOCIATE_RR
,

436 
	mPORT_REQUEST_ASSOCIATE
,

437 
	mPORT_REQUEST_DISASSOCIATE
,

441 
	mPORT_VDP_RESPONSE_SUCCESS
 = 0,

442 
	mPORT_VDP_RESPONSE_INVALID_FORMAT
,

443 
	mPORT_VDP_RESPONSE_INSUFFICIENT_RESOURCES
,

444 
	mPORT_VDP_RESPONSE_UNUSED_VTID
,

445 
	mPORT_VDP_RESPONSE_VTID_VIOLATION
,

446 
	mPORT_VDP_RESPONSE_VTID_VERSION_VIOALTION
,

447 
	mPORT_VDP_RESPONSE_OUT_OF_SYNC
,

449 
	mPORT_PROFILE_RESPONSE_SUCCESS
 = 0x100,

450 
	mPORT_PROFILE_RESPONSE_INPROGRESS
,

451 
	mPORT_PROFILE_RESPONSE_INVALID
,

452 
	mPORT_PROFILE_RESPONSE_BADSTATE
,

453 
	mPORT_PROFILE_RESPONSE_INSUFFICIENT_RESOURCES
,

454 
	mPORT_PROFILE_RESPONSE_ERROR
,

457 
	siÊa_p‹t_vsi
 {

458 
__u8
 
	mvsi_mgr_id
;

459 
__u8
 
	mvsi_ty≥_id
[3];

460 
__u8
 
	mvsi_ty≥_vîsi⁄
;

461 
__u8
 
	m∑d
[3];

468 
	mIFLA_IPOIB_UNSPEC
,

469 
	mIFLA_IPOIB_PKEY
,

470 
	mIFLA_IPOIB_MODE
,

471 
	mIFLA_IPOIB_UMCAST
,

472 
	m__IFLA_IPOIB_MAX


476 
	mIPOIB_MODE_DATAGRAM
 = 0,

477 
	mIPOIB_MODE_CONNECTED
 = 1,

480 
	#IFLA_IPOIB_MAX
 (
__IFLA_IPOIB_MAX
 - 1)

	)

486 
	mIFLA_HSR_UNSPEC
,

487 
	mIFLA_HSR_SLAVE1
,

488 
	mIFLA_HSR_SLAVE2
,

489 
	mIFLA_HSR_MULTICAST_SPEC
,

490 
	mIFLA_HSR_SUPERVISION_ADDR
,

491 
	mIFLA_HSR_SEQ_NR
,

492 
	m__IFLA_HSR_MAX
,

495 
	#IFLA_HSR_MAX
 (
__IFLA_HSR_MAX
 - 1)

	)

	@/usr/include/linux/if_packet.h

1 #i‚de‡
__LINUX_IF_PACKET_H


2 
	#__LINUX_IF_PACKET_H


	)

4 
	~<löux/ty≥s.h
>

6 
	ssockaddr_pkt
 {

7 
	m•kt_Ámûy
;

8 
	m•kt_devi˚
[14];

9 
__be16
 
	m•kt_¥Ÿocﬁ
;

12 
	ssockaddr_Œ
 {

13 
	m¶l_Ámûy
;

14 
__be16
 
	m¶l_¥Ÿocﬁ
;

15 
	m¶l_ifödex
;

16 
	m¶l_h©y≥
;

17 
	m¶l_pkây≥
;

18 
	m¶l_hÆí
;

19 
	m¶l_addr
[8];

24 
	#PACKET_HOST
 0

	)

25 
	#PACKET_BROADCAST
 1

	)

26 
	#PACKET_MULTICAST
 2

	)

27 
	#PACKET_OTHERHOST
 3

	)

28 
	#PACKET_OUTGOING
 4

	)

30 
	#PACKET_LOOPBACK
 5

	)

31 
	#PACKET_FASTROUTE
 6

	)

35 
	#PACKET_ADD_MEMBERSHIP
 1

	)

36 
	#PACKET_DROP_MEMBERSHIP
 2

	)

37 
	#PACKET_RECV_OUTPUT
 3

	)

39 
	#PACKET_RX_RING
 5

	)

40 
	#PACKET_STATISTICS
 6

	)

41 
	#PACKET_COPY_THRESH
 7

	)

42 
	#PACKET_AUXDATA
 8

	)

43 
	#PACKET_ORIGDEV
 9

	)

44 
	#PACKET_VERSION
 10

	)

45 
	#PACKET_HDRLEN
 11

	)

46 
	#PACKET_RESERVE
 12

	)

47 
	#PACKET_TX_RING
 13

	)

48 
	#PACKET_LOSS
 14

	)

49 
	#PACKET_VNET_HDR
 15

	)

50 
	#PACKET_TX_TIMESTAMP
 16

	)

51 
	#PACKET_TIMESTAMP
 17

	)

52 
	#PACKET_FANOUT
 18

	)

53 
	#PACKET_TX_HAS_OFF
 19

	)

55 
	#PACKET_FANOUT_HASH
 0

	)

56 
	#PACKET_FANOUT_LB
 1

	)

57 
	#PACKET_FANOUT_CPU
 2

	)

58 
	#PACKET_FANOUT_ROLLOVER
 3

	)

59 
	#PACKET_FANOUT_RND
 4

	)

60 
	#PACKET_FANOUT_FLAG_ROLLOVER
 0x1000

	)

61 
	#PACKET_FANOUT_FLAG_DEFRAG
 0x8000

	)

63 
	sçackë_°©s
 {

64 
	mç_∑ckës
;

65 
	mç_dr›s
;

68 
	sçackë_°©s_v3
 {

69 
	mç_∑ckës
;

70 
	mç_dr›s
;

71 
	mç_‰ìze_q_˙t
;

74 
	uçackë_°©s_u
 {

75 
çackë_°©s
 
	m°©s1
;

76 
çackë_°©s_v3
 
	m°©s3
;

79 
	sçackë_auxd©a
 {

80 
__u32
 
	mç_°©us
;

81 
__u32
 
	mç_Àn
;

82 
__u32
 
	mç_¢≠Àn
;

83 
__u16
 
	mç_mac
;

84 
__u16
 
	mç_√t
;

85 
__u16
 
	mç_vœn_tci
;

86 
__u16
 
	mç_∑ddög
;

90 
	#TP_STATUS_KERNEL
 0

	)

91 
	#TP_STATUS_USER
 (1 << 0)

	)

92 
	#TP_STATUS_COPY
 (1 << 1)

	)

93 
	#TP_STATUS_LOSING
 (1 << 2)

	)

94 
	#TP_STATUS_CSUMNOTREADY
 (1 << 3)

	)

95 
	#TP_STATUS_VLAN_VALID
 (1 << 4Ë

	)

96 
	#TP_STATUS_BLK_TMO
 (1 << 5)

	)

99 
	#TP_STATUS_AVAILABLE
 0

	)

100 
	#TP_STATUS_SEND_REQUEST
 (1 << 0)

	)

101 
	#TP_STATUS_SENDING
 (1 << 1)

	)

102 
	#TP_STATUS_WRONG_FORMAT
 (1 << 2)

	)

105 
	#TP_STATUS_TS_SOFTWARE
 (1 << 29)

	)

106 
	#TP_STATUS_TS_SYS_HARDWARE
 (1 << 30)

	)

107 
	#TP_STATUS_TS_RAW_HARDWARE
 (1 << 31)

	)

110 
	#TP_FT_REQ_FILL_RXHASH
 0x1

	)

112 
	sçackë_hdr
 {

113 
	mç_°©us
;

114 
	mç_Àn
;

115 
	mç_¢≠Àn
;

116 
	mç_mac
;

117 
	mç_√t
;

118 
	mç_£c
;

119 
	mç_u£c
;

122 
	#TPACKET_ALIGNMENT
 16

	)

123 
	#TPACKET_ALIGN
(
x
Ë(((x)+
TPACKET_ALIGNMENT
-1)&~(TPACKET_ALIGNMENT-1))

	)

124 
	#TPACKET_HDRLEN
 (
	`TPACKET_ALIGN
((
çackë_hdr
)Ë+ (
sockaddr_Œ
))

	)

126 
	sçackë2_hdr
 {

127 
__u32
 
	mç_°©us
;

128 
__u32
 
	mç_Àn
;

129 
__u32
 
	mç_¢≠Àn
;

130 
__u16
 
	mç_mac
;

131 
__u16
 
	mç_√t
;

132 
__u32
 
	mç_£c
;

133 
__u32
 
	mç_n£c
;

134 
__u16
 
	mç_vœn_tci
;

135 
__u16
 
	mç_∑ddög
;

138 
	sçackë_hdr_v¨ü¡1
 {

139 
__u32
 
	mç_rxhash
;

140 
__u32
 
	mç_vœn_tci
;

143 
	sçackë3_hdr
 {

144 
__u32
 
	mç_√xt_off£t
;

145 
__u32
 
	mç_£c
;

146 
__u32
 
	mç_n£c
;

147 
__u32
 
	mç_¢≠Àn
;

148 
__u32
 
	mç_Àn
;

149 
__u32
 
	mç_°©us
;

150 
__u16
 
	mç_mac
;

151 
__u16
 
	mç_√t
;

154 
çackë_hdr_v¨ü¡1
 
	mhv1
;

158 
	sçackë_bd_ts
 {

159 
	mts_£c
;

161 
	mts_u£c
;

162 
	mts_n£c
;

166 
	sçackë_hdr_v1
 {

167 
__u32
 
	mblock_°©us
;

168 
__u32
 
	mnum_pkts
;

169 
__u32
 
	moff£t_to_fú°_pkt
;

174 
__u32
 
	mblk_Àn
;

185 
__Æig√d_u64
 
	m£q_num
;

212 
çackë_bd_ts
 
	mts_fú°_pkt
, 
	mts_œ°_pkt
;

215 
	uçackë_bd_hódî_u
 {

216 
çackë_hdr_v1
 
	mbh1
;

219 
	sçackë_block_desc
 {

220 
__u32
 
	mvîsi⁄
;

221 
__u32
 
	moff£t_to_¥iv
;

222 
çackë_bd_hódî_u
 
	mhdr
;

225 
	#TPACKET2_HDRLEN
 (
	`TPACKET_ALIGN
((
çackë2_hdr
)Ë+ (
sockaddr_Œ
))

	)

226 
	#TPACKET3_HDRLEN
 (
	`TPACKET_ALIGN
((
çackë3_hdr
)Ë+ (
sockaddr_Œ
))

	)

228 
	eçackë_vîsi⁄s
 {

229 
	mTPACKET_V1
,

230 
	mTPACKET_V2
,

231 
	mTPACKET_V3


247 
	sçackë_ªq
 {

248 
	mç_block_size
;

249 
	mç_block_ƒ
;

250 
	mç_‰ame_size
;

251 
	mç_‰ame_ƒ
;

254 
	sçackë_ªq3
 {

255 
	mç_block_size
;

256 
	mç_block_ƒ
;

257 
	mç_‰ame_size
;

258 
	mç_‰ame_ƒ
;

259 
	mç_ªtúe_blk_tov
;

260 
	mç_sizeof_¥iv
;

261 
	mç_„©uª_ªq_w‹d
;

264 
	uçackë_ªq_u
 {

265 
çackë_ªq
 
	mªq
;

266 
çackë_ªq3
 
	mªq3
;

269 
	s∑ckë_mªq
 {

270 
	mmr_ifödex
;

271 
	mmr_ty≥
;

272 
	mmr_Æí
;

273 
	mmr_addªss
[8];

276 
	#PACKET_MR_MULTICAST
 0

	)

277 
	#PACKET_MR_PROMISC
 1

	)

278 
	#PACKET_MR_ALLMULTI
 2

	)

279 
	#PACKET_MR_UNICAST
 3

	)

	@/usr/include/linux/stddef.h

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/linux/netlink.h

1 #i‚de‡
__LINUX_NETLINK_H


2 
	#__LINUX_NETLINK_H


	)

4 
	~<löux/kî√l.h
>

5 
	~<löux/sockë.h
>

6 
	~<löux/ty≥s.h
>

8 
	#NETLINK_ROUTE
 0

	)

9 
	#NETLINK_UNUSED
 1

	)

10 
	#NETLINK_USERSOCK
 2

	)

11 
	#NETLINK_FIREWALL
 3

	)

12 
	#NETLINK_SOCK_DIAG
 4

	)

13 
	#NETLINK_NFLOG
 5

	)

14 
	#NETLINK_XFRM
 6

	)

15 
	#NETLINK_SELINUX
 7

	)

16 
	#NETLINK_ISCSI
 8

	)

17 
	#NETLINK_AUDIT
 9

	)

18 
	#NETLINK_FIB_LOOKUP
 10

	)

19 
	#NETLINK_CONNECTOR
 11

	)

20 
	#NETLINK_NETFILTER
 12

	)

21 
	#NETLINK_IP6_FW
 13

	)

22 
	#NETLINK_DNRTMSG
 14

	)

23 
	#NETLINK_KOBJECT_UEVENT
 15

	)

24 
	#NETLINK_GENERIC
 16

	)

26 
	#NETLINK_SCSITRANSPORT
 18

	)

27 
	#NETLINK_ECRYPTFS
 19

	)

28 
	#NETLINK_RDMA
 20

	)

29 
	#NETLINK_CRYPTO
 21

	)

31 
	#NETLINK_INET_DIAG
 
NETLINK_SOCK_DIAG


	)

33 
	#MAX_LINKS
 32

	)

35 
	ssockaddr_∆
 {

36 
__kî√l_ß_Ámûy_t
 
	m∆_Ámûy
;

37 
	m∆_∑d
;

38 
__u32
 
	m∆_pid
;

39 
__u32
 
	m∆_groups
;

42 
	s∆msghdr
 {

43 
__u32
 
	m∆msg_Àn
;

44 
__u16
 
	m∆msg_ty≥
;

45 
__u16
 
	m∆msg_Êags
;

46 
__u32
 
	m∆msg_£q
;

47 
__u32
 
	m∆msg_pid
;

52 
	#NLM_F_REQUEST
 1

	)

53 
	#NLM_F_MULTI
 2

	)

54 
	#NLM_F_ACK
 4

	)

55 
	#NLM_F_ECHO
 8

	)

56 
	#NLM_F_DUMP_INTR
 16

	)

59 
	#NLM_F_ROOT
 0x100

	)

60 
	#NLM_F_MATCH
 0x200

	)

61 
	#NLM_F_ATOMIC
 0x400

	)

62 
	#NLM_F_DUMP
 (
NLM_F_ROOT
|
NLM_F_MATCH
)

	)

65 
	#NLM_F_REPLACE
 0x100

	)

66 
	#NLM_F_EXCL
 0x200

	)

67 
	#NLM_F_CREATE
 0x400

	)

68 
	#NLM_F_APPEND
 0x800

	)

79 
	#NLMSG_ALIGNTO
 4U

	)

80 
	#NLMSG_ALIGN
(
Àn
Ë–(÷í)+
NLMSG_ALIGNTO
-1Ë& ~(NLMSG_ALIGNTO-1Ë)

	)

81 
	#NLMSG_HDRLEN
 ((Ë
	`NLMSG_ALIGN
((
∆msghdr
)))

	)

82 
	#NLMSG_LENGTH
(
Àn
Ë(÷íË+ 
NLMSG_HDRLEN
)

	)

83 
	#NLMSG_SPACE
(
Àn
Ë
	`NLMSG_ALIGN
(
	`NLMSG_LENGTH
÷í))

	)

84 
	#NLMSG_DATA
(
∆h
Ë((*)(((*ÍlhË+ 
	`NLMSG_LENGTH
(0)))

	)

85 
	#NLMSG_NEXT
(
∆h
,
Àn
Ë(÷íË-
	`NLMSG_ALIGN
(“lh)->
∆msg_Àn
), \

86 (
∆msghdr
*)(((*)(
∆h
)Ë+ 
	`NLMSG_ALIGN
(“lh)->
∆msg_Àn
)))

	)

87 
	#NLMSG_OK
(
∆h
,
Àn
Ë(÷íË>()(
∆msghdr
) && \

88 (
∆h
)->
∆msg_Àn
 >(
∆msghdr
) && \

89 (
∆h
)->
∆msg_Àn
 <(
Àn
))

	)

90 
	#NLMSG_PAYLOAD
(
∆h
,
Àn
Ë(“lh)->
∆msg_Àn
 - 
	`NLMSG_SPACE
(÷í)))

	)

92 
	#NLMSG_NOOP
 0x1

	)

93 
	#NLMSG_ERROR
 0x2

	)

94 
	#NLMSG_DONE
 0x3

	)

95 
	#NLMSG_OVERRUN
 0x4

	)

97 
	#NLMSG_MIN_TYPE
 0x10

	)

99 
	s∆msgîr
 {

100 
	mîr‹
;

101 
∆msghdr
 
	mmsg
;

104 
	#NETLINK_ADD_MEMBERSHIP
 1

	)

105 
	#NETLINK_DROP_MEMBERSHIP
 2

	)

106 
	#NETLINK_PKTINFO
 3

	)

107 
	#NETLINK_BROADCAST_ERROR
 4

	)

108 
	#NETLINK_NO_ENOBUFS
 5

	)

109 
	#NETLINK_RX_RING
 6

	)

110 
	#NETLINK_TX_RING
 7

	)

112 
	s∆_pktöfo
 {

113 
__u32
 
	mgroup
;

116 
	s∆_mm≠_ªq
 {

117 
	mnm_block_size
;

118 
	mnm_block_ƒ
;

119 
	mnm_‰ame_size
;

120 
	mnm_‰ame_ƒ
;

123 
	s∆_mm≠_hdr
 {

124 
	mnm_°©us
;

125 
	mnm_Àn
;

126 
__u32
 
	mnm_group
;

128 
__u32
 
	mnm_pid
;

129 
__u32
 
	mnm_uid
;

130 
__u32
 
	mnm_gid
;

133 
	e∆_mm≠_°©us
 {

134 
	mNL_MMAP_STATUS_UNUSED
,

135 
	mNL_MMAP_STATUS_RESERVED
,

136 
	mNL_MMAP_STATUS_VALID
,

137 
	mNL_MMAP_STATUS_COPY
,

138 
	mNL_MMAP_STATUS_SKIP
,

141 
	#NL_MMAP_MSG_ALIGNMENT
 
NLMSG_ALIGNTO


	)

142 
	#NL_MMAP_MSG_ALIGN
(
sz
Ë
	`__ALIGN_KERNEL
(sz, 
NL_MMAP_MSG_ALIGNMENT
)

	)

143 
	#NL_MMAP_HDRLEN
 
	`NL_MMAP_MSG_ALIGN
((
∆_mm≠_hdr
))

	)

145 
	#NET_MAJOR
 36

	)

148 
	mNETLINK_UNCONNECTED
 = 0,

149 
	mNETLINK_CONNECTED
,

161 
	s∆©å
 {

162 
__u16
 
	m∆a_Àn
;

163 
__u16
 
	m∆a_ty≥
;

176 
	#NLA_F_NESTED
 (1 << 15)

	)

177 
	#NLA_F_NET_BYTEORDER
 (1 << 14)

	)

178 
	#NLA_TYPE_MASK
 ~(
NLA_F_NESTED
 | 
NLA_F_NET_BYTEORDER
)

	)

180 
	#NLA_ALIGNTO
 4

	)

181 
	#NLA_ALIGN
(
Àn
Ë((÷íË+ 
NLA_ALIGNTO
 - 1Ë& ~(NLA_ALIGNTO - 1))

	)

182 
	#NLA_HDRLEN
 ((Ë
	`NLA_ALIGN
((
∆©å
)))

	)

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

4 
	~<löux/sysöfo.h
>

9 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`ty≥of
(x))◊Ë- 1)

	)

10 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/linux/sysinfo.h

1 #i‚de‡
_LINUX_SYSINFO_H


2 
	#_LINUX_SYSINFO_H


	)

4 
	~<löux/ty≥s.h
>

6 
	#SI_LOAD_SHIFT
 16

	)

7 
	ssysöfo
 {

8 
__kî√l_l⁄g_t
 
	mu±ime
;

9 
__kî√l_ul⁄g_t
 
	mlﬂds
[3];

10 
__kî√l_ul⁄g_t
 
	mtŸÆøm
;

11 
__kî√l_ul⁄g_t
 
	m‰ìøm
;

12 
__kî√l_ul⁄g_t
 
	msh¨edøm
;

13 
__kî√l_ul⁄g_t
 
	mbuf„ºam
;

14 
__kî√l_ul⁄g_t
 
	mtŸÆsw≠
;

15 
__kî√l_ul⁄g_t
 
	m‰ìsw≠
;

16 
__u16
 
	m¥ocs
;

17 
__u16
 
	m∑d
;

18 
__kî√l_ul⁄g_t
 
	mtŸÆhigh
;

19 
__kî√l_ul⁄g_t
 
	m‰ìhigh
;

20 
__u32
 
	mmem_unô
;

21 
	m_f
[20-2*(
__kî√l_ul⁄g_t
)-(
__u32
)];

	@
1
.
1
/usr/include
155
4035
main.c
net-tools-1.60/arp.c
net-tools-1.60/config.h
net-tools-1.60/debian/config.h
net-tools-1.60/hostname.c
net-tools-1.60/ifconfig.c
net-tools-1.60/include/interface.h
net-tools-1.60/include/ipx.h
net-tools-1.60/include/mii.h
net-tools-1.60/include/sockets.h
net-tools-1.60/include/util-ank.h
net-tools-1.60/intl.h
net-tools-1.60/ipmaddr.c
net-tools-1.60/iptunnel.c
net-tools-1.60/lib/activate.c
net-tools-1.60/lib/af.c
net-tools-1.60/lib/arcnet.c
net-tools-1.60/lib/ash.c
net-tools-1.60/lib/ax25.c
net-tools-1.60/lib/ax25_gr.c
net-tools-1.60/lib/ddp.c
net-tools-1.60/lib/ddp_gr.c
net-tools-1.60/lib/ec_hw.c
net-tools-1.60/lib/econet.c
net-tools-1.60/lib/ether.c
net-tools-1.60/lib/fddi.c
net-tools-1.60/lib/frame.c
net-tools-1.60/lib/getargs.c
net-tools-1.60/lib/getroute.c
net-tools-1.60/lib/hdlclapb.c
net-tools-1.60/lib/hippi.c
net-tools-1.60/lib/hw.c
net-tools-1.60/lib/inet.c
net-tools-1.60/lib/inet6.c
net-tools-1.60/lib/inet6_gr.c
net-tools-1.60/lib/inet6_sr.c
net-tools-1.60/lib/inet_gr.c
net-tools-1.60/lib/inet_sr.c
net-tools-1.60/lib/interface.c
net-tools-1.60/lib/ipx.c
net-tools-1.60/lib/ipx_gr.c
net-tools-1.60/lib/ipx_sr.c
net-tools-1.60/lib/irda.c
net-tools-1.60/lib/loopback.c
net-tools-1.60/lib/masq_info.c
net-tools-1.60/lib/net-features.h
net-tools-1.60/lib/net-support.h
net-tools-1.60/lib/netrom.c
net-tools-1.60/lib/netrom_gr.c
net-tools-1.60/lib/netrom_sr.c
net-tools-1.60/lib/nstrcmp.c
net-tools-1.60/lib/pathnames.h
net-tools-1.60/lib/ppp.c
net-tools-1.60/lib/ppp_ac.c
net-tools-1.60/lib/proc.c
net-tools-1.60/lib/proc.h
net-tools-1.60/lib/rose.c
net-tools-1.60/lib/rose_gr.c
net-tools-1.60/lib/setroute.c
net-tools-1.60/lib/sit.c
net-tools-1.60/lib/slip.c
net-tools-1.60/lib/slip_ac.c
net-tools-1.60/lib/sockets.c
net-tools-1.60/lib/strip.c
net-tools-1.60/lib/tr.c
net-tools-1.60/lib/tunnel.c
net-tools-1.60/lib/unix.c
net-tools-1.60/lib/util-ank.c
net-tools-1.60/lib/util.c
net-tools-1.60/lib/util.h
net-tools-1.60/lib/x25.c
net-tools-1.60/lib/x25_gr.c
net-tools-1.60/lib/x25_sr.c
net-tools-1.60/mii-tool.c
net-tools-1.60/nameif.c
net-tools-1.60/netstat.c
net-tools-1.60/plipconfig.c
net-tools-1.60/rarp.c
net-tools-1.60/route.c
net-tools-1.60/slattach.c
net-tools-1.60/statistics.c
net-tools-1.60/version.h
q1.h
question1.c
serial_program.c
/usr/include/arpa/inet.h
/usr/include/arpa/nameser.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libintl.h
/usr/include/limits.h
/usr/include/linux/atalk.h
/usr/include/linux/ax25.h
/usr/include/linux/if.h
/usr/include/linux/if_arp.h
/usr/include/linux/if_ether.h
/usr/include/linux/if_fddi.h
/usr/include/linux/if_plip.h
/usr/include/linux/if_slip.h
/usr/include/linux/if_tunnel.h
/usr/include/linux/param.h
/usr/include/linux/rose.h
/usr/include/linux/sockios.h
/usr/include/linux/types.h
/usr/include/linux/x25.h
/usr/include/locale.h
/usr/include/malloc.h
/usr/include/net/if.h
/usr/include/net/if_arp.h
/usr/include/net/route.h
/usr/include/netax25/ax25.h
/usr/include/netdb.h
/usr/include/neteconet/ec.h
/usr/include/netinet/if_fddi.h
/usr/include/netinet/in.h
/usr/include/netinet/ip.h
/usr/include/netipx/ipx.h
/usr/include/paths.h
/usr/include/pwd.h
/usr/include/resolv.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/syslog.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/arpa/nameser_compat.h
/usr/include/endian.h
/usr/include/libio.h
/usr/include/linux/hdlc/ioctl.h
/usr/include/linux/netdevice.h
/usr/include/linux/posix_types.h
/usr/include/linux/socket.h
/usr/include/rpc/netdb.h
/usr/include/stdc-predef.h
/usr/include/stdint.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/linux/if_link.h
/usr/include/linux/if_packet.h
/usr/include/linux/stddef.h
/usr/include/gconv.h
/usr/include/linux/netlink.h
/usr/include/wchar.h
/usr/include/linux/kernel.h
/usr/include/wctype.h
/usr/include/linux/sysinfo.h
